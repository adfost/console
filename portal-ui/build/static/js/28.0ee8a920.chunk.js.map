{"version":3,"sources":["screens/Console/Common/FormComponents/ModalError/ModalError.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Common/PageHeader/PageHeader.tsx","screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper.tsx","screens/Console/Common/BoxIconButton/BoxIconButton.tsx","screens/Console/Common/FormComponents/SelectWrapper/SelectWrapper.tsx","screens/Console/Tenants/actions.ts","screens/Console/Common/FormComponents/RadioGroupSelector/RadioGroupSelector.tsx","utils/validationFunctions.ts","screens/shared/ErrorBlock.tsx","icons/WarnIcon.tsx","screens/Console/Common/FormComponents/FileSelector/FileSelector.tsx","screens/Console/Common/FormComponents/FileSelector/utils.ts","screens/Console/Tenants/ListTenants/utils.ts","screens/Console/Common/CredentialsPrompt/CredentialItem.tsx","icons/NewAccountIcon.tsx","screens/Console/Common/CredentialsPrompt/CredentialsPrompt.tsx","screens/Console/Tenants/TenantDetails/utils.ts","screens/Console/Common/GenericWizard/WizardPage.tsx","screens/Console/Common/GenericWizard/GenericWizard.tsx","screens/Console/Tenants/AddTenant/Steps/helpers/AddNamespaceModal.tsx","screens/Console/Tenants/AddTenant/Steps/SizePreview.tsx","screens/Console/Tenants/AddTenant/Steps/TenantSize.tsx","screens/Console/Tenants/AddTenant/Steps/NameTenant.tsx","screens/Console/Tenants/AddTenant/Steps/Configure.tsx","screens/Console/Tenants/AddTenant/Steps/IdentityProvider.tsx","screens/Console/Tenants/AddTenant/Steps/Security.tsx","screens/Console/Tenants/AddTenant/Steps/Encryption.tsx","screens/Console/Tenants/AddTenant/Steps/Affinity.tsx","screens/Console/Tenants/AddTenant/Steps/Images.tsx","screens/Console/Tenants/AddTenant/AddTenant.tsx"],"names":["timerI","stopHideTimer","clearInterval","mapDispatchToProps","displayErrorMessage","setModalErrorSnackMessage","connector","connect","state","modalSnackMessage","system","modalSnackBar","withStyles","theme","createStyles","modalErrorContainer","position","marginTop","width","backgroundColor","border","borderLeftWidth","borderRadius","zIndex","padding","left","transform","opacity","transitionDuration","modalErrorShow","closeButton","right","fontSize","cursor","errorTitle","display","alignItems","errorLabel","color","fontWeight","marginLeft","marginRight","messageIcon","height","simpleError","detailsButton","paddingLeft","transformDuration","extraDetailsContainer","fontStyle","lineHeight","transition","overflow","extraDetailsOpen","arrowElement","arrowOpen","classes","customStyle","useState","detailsOpen","setDetailsOpen","displayErrorMsg","setDisplayErrorMsg","closeErrorMessage","useCallback","useEffect","detailedError","errorMessage","message","type","get","messageDetails","className","style","onMouseOver","onMouseLeave","setInterval","onClick","detailsContainerLink","baseCloseLine","content","borderLeft","setModalSnackMessage","dialogContainer","closeContainer","textAlign","modalCloseIcon","closeIcon","borderColor","titleClass","whiteSpace","textOverflow","modalContent","customDialogSize","maxWidth","snackBarCommon","onClose","modalOpen","title","children","wideLimit","noContentPadding","openSnackbar","setOpenSnackbar","customSize","paper","fullWidth","detailedErrorMsg","length","Dialog","open","Snackbar","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","IconButton","disableRipple","size","DialogTitle","id","DialogContent","sidebarOpen","operatorMode","headerContainer","minHeight","boxShadow","label","justifyContent","labelStyle","rightMenu","logo","fill","palette","primary","main","actions","container","direction","xs","sm","md","item","variant","inputStyles","makeStyles","inputFieldStyles","InputField","props","InputProps","fieldBasic","tooltipHelper","textBoxContainer","flexGrow","textBoxWithIcon","paddingRight","errorState","top","overlayAction","maxHeight","onChange","value","name","autoComplete","disabled","multiline","tooltip","index","error","required","placeholder","min","max","overlayIcon","overlayObject","extraInputProps","noLabelMinWidth","inputProps","Fragment","errorInField","inputBoxContainer","htmlFor","noMinWidthLabel","inputLabel","tooltipContainer","placement","helperText","inputRebase","disableFocusRipple","disableTouchRipple","StyledSwitch","root","margin","switchBase","common","white","thumb","track","transitions","create","checked","focusVisible","Switch","seeMore","spacing","flexDirection","paddingTop","addSideBar","tableToolbar","wrapCell","wordWrap","minTableHeader","noFound","tableContainer","stickyHeader","actionsTitle","alignSelf","tableBlock","filterField","divContainer","marginBottom","indicatorLabelOn","indicatorLabel","fieldDescription","actionsTray","switchOnly","description","indicatorLabels","switchComponent","clsx","component","switchContainer","borderWidth","borderStyle","contained","background","dark","light","rest","button","SelectStyled","input","InputBase","options","fieldContainer","map","option","updateAddField","pageName","fieldName","ADD_TENANT_UPDATE_FIELD","field","isPageValid","valid","ADD_TENANT_SET_PAGE_VALID","setStorageClassesList","storageClasses","ADD_TENANT_SET_STORAGE_CLASSES_LIST","setLimitSize","limitSize","ADD_TENANT_SET_LIMIT_SIZE","addCaCertificate","ADD_TENANT_ADD_CA_KEYPAIR","deleteCaCertificate","ADD_TENANT_DELETE_CA_KEYPAIR","addFileToCaCertificates","key","fileName","ADD_TENANT_ADD_FILE_TO_CA_KEYPAIR","addKeyPair","ADD_TENANT_ADD_MINIO_KEYPAIR","deleteKeyPair","ADD_TENANT_DELETE_MINIO_KEYPAIR","addFileToKeyPair","ADD_TENANT_ADD_FILE_TO_MINIO_KEYPAIR","addFileServerCert","ADD_TENANT_ENCRYPTION_SERVER_CERT","addFileClientCert","ADD_TENANT_ENCRYPTION_CLIENT_CERT","addFileVaultCert","ADD_TENANT_ENCRYPTION_VAULT_CERT","addFileVaultCa","ADD_TENANT_ENCRYPTION_VAULT_CA","addFileGemaltoCa","ADD_TENANT_ENCRYPTION_GEMALTO_CA","resetAddTenantForm","ADD_TENANT_RESET_FORM","setTenantDetailsLoad","loading","TENANT_DETAILS_SET_LOADING","setTenantName","tenantName","tenantNamespace","TENANT_DETAILS_SET_CURRENT_TENANT","namespace","setTenantInfo","tenant","TENANT_DETAILS_SET_TENANT","setTenantTab","tab","TENANT_DETAILS_SET_TAB","radioStyles","radioIcons","RadioButton","checkedIcon","radioSelectedIcon","icon","radioUnselectedIcon","radioBoxContainer","optionLabel","checkedOption","selectorOptions","currentSelection","disableOptions","displayInColumn","row","selectorOption","control","commonFormValidation","fieldsValidate","returnErrors","forEach","trim","fieldKey","customValidation","customValidationMessage","pattern","customPatternMessage","rgx","RegExp","match","errorBlock","withBreak","WarnIcon","xmlns","cx","cy","r","stroke","d","flexWrap","errorText","fontFamily","valueString","fileReselect","fieldBottom","borderBottom","fileInputField","accept","showFileSelector","setShowSelector","Grid","InputLabel","fieldLabelError","Tooltip","HelpIcon","e","evt","callback","file","target","files","reader","FileReader","readAsDataURL","onload","fileBase64","result","fileArray","toString","split","fileProcess","data","ErrorBlock","ecListTransform","ecList","getLimitSizes","resourceQuotas","quotas","returnQuotas","rsQuota","stCName","hard","used","tenantIsOnline","currentState","status","health_status","flexFlow","inputWithCopy","OutlinedInput","readOnly","endAdornment","InputAdornment","text","BoxIconButton","onMouseDown","edge","NewAccountIcon","viewBox","rx","warningBlock","credentialTitle","buttonContainer","credentialsPanel","overflowY","promptTitle","buttonSpacer","promptIcon","newServiceAccount","closeModal","entity","consoleCreds","idp","ModalWrapper","formScrollable","Array","isArray","credentialsPair","accessKey","secretKey","Button","consoleExtras","cCreds","itemMap","access_key","secret_key","console","filename","element","document","createElement","setAttribute","encodeURIComponent","body","appendChild","click","removeChild","download","JSON","stringify","endIcon","getDefaultAffinity","poolName","podAntiAffinity","requiredDuringSchedulingIgnoredDuringExecution","labelSelector","matchExpressions","operator","values","topologyKey","getNodeSelector","labels","withPodAntiAffinity","splittedLabels","splitKeyValue","push","nodeSelector","nodeAffinity","nodeSelectorTerms","def","log","wizardStepContainer","wizardComponent","wizardModal","buttonsContainer","borderTop","paddingBottom","buttonInnerContainer","page","pageChange","loadingStep","forModal","componentRender","LinearProgress","buttons","btn","toPage","action","buttonAction","enabled","wizardMain","wizFromContainer","wizFromModal","modalWizardSteps","listStyle","buttonList","textDecoration","outline","paddedContentGrid","stepsLabel","stepsMasterContainer","wizardSteps","currentStep","setCurrentStep","toElement","lastPage","nextPage","prevPage","pg","step","lg","xl","List","dense","ListItem","selected","ListItemText","setErrorSnackMessage","wrapText","modalBasic","addNamespaceOpen","closeAddNamespaceModalAndRefresh","addNamespaceLoading","setAddNamespaceLoading","api","invoke","then","res","catch","err","DialogContentText","DialogActions","clearButton","autoFocus","advancedMode","tenants","createTenant","advancedModeOn","volumeSize","fields","tenantSize","sizeFactor","drivesPerServer","nodes","memoryNode","ecParity","ecParityChoices","cleanECChoices","maxAllocableMemo","memorySize","distribution","ecParityCalc","selectedStorageClass","nameTenant","table","wizardCommon","errorFlag","setErrorFlag","nodeError","setNodeError","usableInformation","storageFactors","find","erasureCode","updateField","validateMemorySize","memSize","parseInt","clusterSize","maxMemSize","clusterSizeFactor","clusterSizeBytes","getBytes","memoSize","setMemoryResource","ecCodeValidated","erasureCodeCalc","persistentVolumes","pvSize","defaultEC","validateClusterSize","getECValue","isNaN","maxMemory","max_memory","getMaxAllocableMemory","factor","clusterCapacity","unit","distrCalculate","calculateDistribution","parsedSize","commonValidation","niceBytes","Divider","Table","TableBody","TableRow","TableCell","scope","align","disks","rawCapacity","maxCapacity","Math","floor","maxFailureTolerations","validationErrors","setValidationErrors","cleanValidation","clearValidationError","headerElement","h3Section","descriptionText","InputBoxWrapper","multiContainer","sizeFactorContainer","SelectWrapper","k8sfactorForDropdown","sizePreview","emptyNamespace","setEmptyNamespace","loadingNamespaceInfo","setLoadingNamespaceInfo","showCreateButton","setShowCreateButton","openAddNSConfirm","setOpenAddNSConfirm","getNamespaceInformation","tenantsList","elements","newStorage","storageClass","debounceNamespace","useMemo","debounce","cancel","customNamespaceError","isValid","frmValidationCleanup","refresh","Paper","paperWrapper","AddIcon","customImage","configure","imageName","customDockerhub","imageRegistry","imageRegistryUsername","imageRegistryPassword","exposeMinIO","exposeConsole","prometheusCustom","tenantCustom","logSearchCustom","logSearchVolumeSize","logSearchSizeFactor","prometheusVolumeSize","prometheusSizeFactor","logSearchSelectedStorageClass","logSearchImage","kesImage","logSearchPostgresImage","logSearchPostgresInitImage","prometheusSelectedStorageClass","prometheusImage","prometheusSidecarImage","prometheusInitImage","tenantSecurityContext","logSearchSecurityContext","logSearchPostgresSecurityContext","prometheusSecurityContext","customAccountValidation","runAsUser","runAsGroup","fsGroup","commonVal","Object","keys","filter","FormSwitchWrapper","runAsNonRoot","idpSelection","identityProvider","accessKeys","secretKeys","openIDConfigurationURL","openIDClientID","openIDSecretID","openIDCallbackURL","openIDClaimName","openIDScopes","ADURL","ADSkipTLS","ADServerInsecure","ADUserNameSearchFilter","ADGroupSearchBaseDN","ADGroupSearchFilter","ADGroupNameAttribute","ADUserDNs","ADUserNameFormat","ADLookupBindDN","ADLookupBindPassword","ADUserDNSearchBaseDN","ADUserDNSearchFilter","ADServerStartTLS","shortened","gridTemplateColumns","gridGap","buttonTray","updateUserField","newUserField","updatePwordField","updateADUserField","newADUserDNsField","customIDPValidation","i","inputs","_","getRandomString","splice","RadioGroupSelector","Typography","gutterBottom","enableTLS","security","enableAutoCert","enableCustomCerts","minioCertificates","certificates","caCertificates","keyPair","FileSelector","encodedValue","cert","replicas","encryption","enableEncryption","encryptionType","gemaltoEndpoint","gemaltoToken","gemaltoDomain","gemaltoRetry","awsEndpoint","awsRegion","awsKMSKey","awsAccessKey","awsSecretKey","awsToken","vaultEndpoint","vaultEngine","vaultNamespace","vaultPrefix","vaultAppRoleEngine","vaultId","vaultSecret","vaultRetry","vaultPing","azureEndpoint","azureTenantID","azureClientID","azureClientSecret","gcpProjectID","gcpEndpoint","gcpClientEmail","gcpClientID","gcpPrivateKeyID","gcpPrivateKey","enableCustomCertsForKES","serverCertificate","clientCertificate","vaultCertificate","vaultCA","gemaltoCA","kesSecurityContext","encryptionAvailable","encoded_key","encoded_cert","encryptionValidation","podAffinity","affinity","nodeSelectorLabels","float","setLoading","keyValueMap","setKeyValueMap","keyValuePairs","setKeyValuePairs","keyOptions","setKeyOptions","k","vl","kvp","kvs","a","indexOf","join","splitItem","newKey","arrCp","assign","v","RemoveIcon","validPages","settingsCommon","showNewCredentials","setShowNewCredentials","createdAccount","setCreatedAccount","addSending","setAddSending","consoleCaCertificates","consoleCertificate","affinityType","kesReplicas","generatePoolName","affinityObject","dataSend","access_keys","secret_keys","enable_tls","enable_console","enable_prometheus","service_name","image","expose_minio","expose_console","pools","servers","volumes_per_server","volume_configuration","storage_class_name","resources","requests","memory","request","limits","limit","securityContext","erasureCodingParity","image_registry","registry","username","password","logSearchConfiguration","storageSize","postgres_image","postgres_init_image","postgres_securityContext","prometheusConfiguration","sidecar_image","init_image","tenantCerts","consoleCerts","caCerts","consoleCaCerts","ca_certificates","console_ca_certificates","minio","crt","tls","insertEncrypt","gemaltoCAIntroduce","ca","gemalto","keysecure","endpoint","credentials","token","domain","retry","aws","secretsmanager","region","kmskey","accesskey","secretkey","azure","keyvault","tenant_id","client_id","client_secret","gcp","secretmanager","project_id","client_email","private_key_id","private_key","vaultKeyPair","vaultCAInsert","vaultTLS","vault","engine","prefix","approle","secret","ping","encryptionServerKeyPair","encryptionClientKeyPair","client","server","dataIDP","keyarray","oidc","configuration_url","secret_id","claim_name","callback_url","scopes","active_directory","url","skip_tls_verification","server_insecure","username_format","username_search_filter","group_search_base_dn","group_search_filter","group_name_attribute","user_dns","lookup_bind_dn","lookup_bind_password","user_dn_search_base_dn","user_dn_search_filter","server_start_tls","consoleSAList","newSrvAcc","consoleItem","consoleKey","cancelButton","history","createButton","every","includes","filteredWizardSteps","advancedOnly","CredentialsPrompt","PageHeader","GenericWizard"],"mappings":"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","file":"static/js/28.0ee8a920.chunk.js","sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useState, useEffect, useCallback } from \"react\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\";\nimport ErrorOutlineIcon from \"@mui/icons-material/ErrorOutline\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { AppState } from \"../../../../../store\";\nimport { setErrorSnackMessage } from \"../../../../../actions\";\nimport { snackBarMessage } from \"../../../../../types\";\nimport { setModalErrorSnackMessage } from \"../../../../../actions\";\n\ninterface ImodalErrorProps {\n  customStyle?: any;\n  classes: any;\n  modalSnackMessage: snackBarMessage;\n  displayErrorMessage: typeof setErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    modalErrorContainer: {\n      position: \"absolute\",\n      marginTop: 10,\n      width: \"80%\",\n      backgroundColor: \"#fff\",\n      border: \"#C72C48 1px solid\",\n      borderLeftWidth: 12,\n      borderRadius: 3,\n      zIndex: 1000,\n      padding: \"10px 15px\",\n      left: \"50%\",\n      transform: \"translateX(-50%)\",\n      opacity: 0,\n      transitionDuration: \"0.2s\",\n    },\n    modalErrorShow: {\n      opacity: 1,\n    },\n    closeButton: {\n      position: \"absolute\",\n      right: 5,\n      fontSize: \"small\",\n      border: 0,\n      backgroundColor: \"#fff\",\n      cursor: \"pointer\",\n    },\n    errorTitle: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    errorLabel: {\n      color: \"#000\",\n      fontSize: 18,\n      fontWeight: 500,\n      marginLeft: 5,\n      marginRight: 25,\n    },\n    messageIcon: {\n      color: \"#C72C48\",\n      display: \"flex\",\n      \"& svg\": {\n        width: 32,\n        height: 32,\n      },\n    },\n    simpleError: {\n      marginTop: 5,\n      padding: \"2px 5px\",\n      fontSize: 16,\n      color: \"#000\",\n    },\n    detailsButton: {\n      color: \"#9C9C9C\",\n      display: \"flex\",\n      alignItems: \"center\",\n      border: 0,\n      backgroundColor: \"transparent\",\n      paddingLeft: 5,\n      fontSize: 14,\n      transformDuration: \"0.3s\",\n      cursor: \"pointer\",\n    },\n    extraDetailsContainer: {\n      fontStyle: \"italic\",\n      color: \"#9C9C9C\",\n      lineHeight: 0,\n      padding: \"0 10px\",\n      transition: \"all .2s ease-in-out\",\n      overflow: \"hidden\",\n    },\n    extraDetailsOpen: {\n      lineHeight: 1,\n      padding: \"3px 10px\",\n    },\n    arrowElement: {\n      marginLeft: -5,\n    },\n    arrowOpen: {\n      transform: \"rotateZ(90deg)\",\n      transformDuration: \"0.3s\",\n    },\n  });\n\nvar timerI: any;\n\nconst startHideTimer = (callbackFunction: () => void) => {\n  timerI = setInterval(callbackFunction, 10000);\n};\n\nconst stopHideTimer = () => {\n  clearInterval(timerI);\n};\n\nconst ModalError = ({\n  classes,\n  modalSnackMessage,\n  displayErrorMessage,\n  customStyle,\n}: ImodalErrorProps) => {\n  const [detailsOpen, setDetailsOpen] = useState<boolean>(false);\n  const [displayErrorMsg, setDisplayErrorMsg] = useState<boolean>(false);\n\n  const closeErrorMessage = useCallback(() => {\n    setDisplayErrorMsg(false);\n  }, []);\n\n  useEffect(() => {\n    if (!displayErrorMsg) {\n      displayErrorMessage({ detailedError: \"\", errorMessage: \"\" });\n      setDetailsOpen(false);\n      //clearInterval(timerI);\n    }\n  }, [displayErrorMessage, displayErrorMsg]);\n\n  useEffect(() => {\n    if (\n      modalSnackMessage.message !== \"\" &&\n      modalSnackMessage.type === \"error\"\n    ) {\n      //Error message received, we trigger the animation\n      setDisplayErrorMsg(true);\n      //startHideTimer(closeErrorMessage);\n    }\n  }, [closeErrorMessage, modalSnackMessage.message, modalSnackMessage.type]);\n\n  const detailsToggle = () => {\n    setDetailsOpen(!detailsOpen);\n  };\n\n  const message = get(modalSnackMessage, \"message\", \"\");\n  const messageDetails = get(modalSnackMessage, \"detailedErrorMsg\", \"\");\n\n  if (modalSnackMessage.type !== \"error\" || message === \"\") {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      <div\n        className={`${classes.modalErrorContainer} ${\n          displayErrorMsg ? classes.modalErrorShow : \"\"\n        }`}\n        style={customStyle}\n        onMouseOver={stopHideTimer}\n        onMouseLeave={() => startHideTimer(closeErrorMessage)}\n      >\n        <button className={classes.closeButton} onClick={closeErrorMessage}>\n          <CloseIcon />\n        </button>\n        <div className={classes.errorTitle}>\n          <span className={classes.messageIcon}>\n            <ErrorOutlineIcon />\n          </span>\n          <span className={classes.errorLabel}>{message}</span>\n        </div>\n        {messageDetails !== \"\" && (\n          <Fragment>\n            <div className={classes.detailsContainerLink}>\n              <button className={classes.detailsButton} onClick={detailsToggle}>\n                Details\n                <ArrowRightIcon\n                  className={`${classes.arrowElement} ${\n                    detailsOpen ? classes.arrowOpen : \"\"\n                  }`}\n                />\n              </button>\n            </div>\n            <div\n              className={`${classes.extraDetailsContainer} ${\n                detailsOpen ? classes.extraDetailsOpen : \"\"\n              }`}\n            >\n              {messageDetails}\n            </div>\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst mapDispatchToProps = {\n  displayErrorMessage: setModalErrorSnackMessage,\n};\n\nconst connector = connect(mapState, mapDispatchToProps);\n\nexport default connector(withStyles(styles)(ModalError));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { snackBarCommon } from \"../FormComponents/common/styleLibrary\";\nimport { AppState } from \"../../../../store\";\nimport { snackBarMessage } from \"../../../../types\";\nimport { setModalSnackMessage } from \"../../../../actions\";\nimport ModalError from \"../FormComponents/ModalError/ModalError\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  modalSnackMessage?: snackBarMessage;\n  noContentPadding?: boolean;\n  setModalSnackMessage: typeof setModalSnackMessage;\n}\n\nconst baseCloseLine = {\n  content: '\" \"',\n  borderLeft: \"2px solid #9C9C9C\",\n  height: 33,\n  width: 1,\n  position: \"absolute\",\n};\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    dialogContainer: {\n      padding: \"8px 15px 22px\",\n    },\n    closeContainer: {\n      textAlign: \"right\",\n    },\n    closeButton: {\n      height: 16,\n      width: 16,\n      padding: 0,\n      backgroundColor: \"initial\",\n      \"&:hover\": {\n        backgroundColor: \"initial\",\n      },\n      \"&:active\": {\n        backgroundColor: \"initial\",\n      },\n    },\n    modalCloseIcon: {\n      fontSize: 35,\n      color: \"#9C9C9C\",\n      fontWeight: 300,\n      \"&:hover\": {\n        color: \"#9C9C9C\",\n      },\n    },\n    closeIcon: {\n      \"&::before\": {\n        ...baseCloseLine,\n        transform: \"rotate(45deg)\",\n        height: 12,\n      },\n      \"&::after\": {\n        ...baseCloseLine,\n        transform: \"rotate(-45deg)\",\n        height: 12,\n      },\n      \"&:hover::before, &:hover::after\": {\n        borderColor: \"#9C9C9C\",\n      },\n      display: \"block\",\n      position: \"relative\",\n      height: 12,\n      width: 12,\n    },\n    titleClass: {\n      padding: \"0px 50px 12px\",\n      fontSize: \"1.2rem\",\n      fontWeight: 600,\n      overflow: \"hidden\",\n      whiteSpace: \"nowrap\",\n      textOverflow: \"ellipsis\",\n    },\n    modalContent: {\n      padding: \"0 50px\",\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  modalSnackMessage,\n  noContentPadding,\n  setModalSnackMessage,\n}: IModalProps) => {\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  useEffect(() => {\n    setModalSnackMessage(\"\");\n  }, [setModalSnackMessage]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    setModalSnackMessage(\"\");\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      onClose={onClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n      {...customSize}\n    >\n      <div className={classes.dialogContainer}>\n        <ModalError />\n        <Snackbar\n          open={openSnackbar}\n          className={classes.snackBarModal}\n          onClose={() => {\n            closeSnackBar();\n          }}\n          message={message}\n          ContentProps={{\n            className: `${classes.snackBar} ${\n              modalSnackMessage && modalSnackMessage.type === \"error\"\n                ? classes.errorSnackBar\n                : \"\"\n            }`,\n          }}\n          autoHideDuration={\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? 10000\n              : 5000\n          }\n        />\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"large\"\n          >\n            <span className={classes.closeIcon} />\n          </IconButton>\n        </div>\n        <DialogTitle id=\"alert-dialog-title\" className={classes.titleClass}>\n          {title}\n        </DialogTitle>\n        <DialogContent className={noContentPadding ? \"\" : classes.modalContent}>\n          {children}\n        </DialogContent>\n      </div>\n    </Dialog>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst connector = connect(mapState, {\n  setModalSnackMessage,\n});\n\nexport default withStyles(styles)(connector(ModalWrapper));\n","import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Typography from \"@mui/material/Typography\";\nimport { AppState } from \"../../../../store\";\nimport { connect } from \"react-redux\";\nimport OperatorLogo from \"../../../../icons/OperatorLogo\";\nimport ConsoleLogo from \"../../../../icons/ConsoleLogo\";\nimport { Box } from \"@mui/material\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    headerContainer: {\n      // position: \"absolute\",\n      width: \"100%\",\n      minHeight: 79,\n      display: \"flex\",\n      backgroundColor: \"#fff\",\n      left: 0,\n      boxShadow: \"rgba(0,0,0,.08) 0 3px 10px\",\n    },\n    label: {\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n    },\n    labelStyle: {\n      color: \"#000\",\n      fontSize: 18,\n      fontWeight: 700,\n      marginLeft: 34,\n      marginTop: 8,\n    },\n    rightMenu: {\n      textAlign: \"right\",\n    },\n    logo: {\n      marginLeft: 34,\n      fill: theme.palette.primary.main,\n      \"& .min-icon\": {\n        width: 120,\n      },\n    },\n  });\n\ninterface IPageHeader {\n  classes: any;\n  sidebarOpen?: boolean;\n  operatorMode?: boolean;\n  label: any;\n  actions?: any;\n}\n\nconst PageHeader = ({\n  classes,\n  label,\n  actions,\n  sidebarOpen,\n  operatorMode,\n}: IPageHeader) => {\n  return (\n    <Grid\n      container\n      className={classes.headerContainer}\n      direction=\"row\"\n      alignItems=\"center\"\n    >\n      <Box display={{ xs: \"block\", sm: \"block\", md: \"none\" }}>\n        <Grid item xs={12} style={{ height: 10 }}>\n          &nbsp;\n        </Grid>\n      </Box>\n      <Grid item xs={12} sm={12} md={6} className={classes.label}>\n        {!sidebarOpen && (\n          <div className={classes.logo}>\n            {operatorMode ? <OperatorLogo /> : <ConsoleLogo />}\n          </div>\n        )}\n        <Typography variant=\"h4\" className={classes.labelStyle}>\n          {label}\n        </Typography>\n      </Grid>\n      {actions && (\n        <Grid item xs={12} sm={12} md={6} className={classes.rightMenu}>\n          {actions}\n        </Grid>\n      )}\n    </Grid>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  sidebarOpen: state.system.sidebarOpen,\n  operatorMode: state.system.operatorMode,\n});\n\nconst connector = connect(mapState, null);\n\nexport default connector(withStyles(styles)(PageHeader));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    textBoxWithIcon: {\n      position: \"relative\",\n      paddingRight: 25,\n    },\n    errorState: {\n      color: \"#b53b4b\",\n      fontSize: 14,\n      position: \"absolute\",\n      top: 7,\n      right: 7,\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  classes,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={` ${\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        }`}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            disabled={disabled}\n            onChange={onChange}\n            type={type}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n          />\n          {overlayIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => null\n                }\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {overlayIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { InputLabel, Switch, Tooltip, Typography } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { actionsTray, fieldBasic } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport clsx from \"clsx\";\n\ninterface IFormSwitch {\n  label?: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  description?: string;\n  index?: number;\n  checked: boolean;\n  switchOnly?: boolean;\n  indicatorLabels?: string[];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    seeMore: {\n      marginTop: theme.spacing(3),\n    },\n    paper: {\n      display: \"flex\",\n      overflow: \"auto\",\n      flexDirection: \"column\",\n      paddingTop: 15,\n      boxShadow: \"none\",\n    },\n    addSideBar: {\n      width: \"320px\",\n      padding: \"20px\",\n    },\n    tableToolbar: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(0),\n    },\n    wrapCell: {\n      maxWidth: \"200px\",\n      whiteSpace: \"normal\",\n      wordWrap: \"break-word\",\n    },\n    minTableHeader: {\n      color: \"#393939\",\n      \"& tr\": {\n        \"& th\": {\n          fontWeight: \"bold\",\n        },\n      },\n    },\n    noFound: {\n      textAlign: \"center\",\n      padding: \"10px 0\",\n    },\n    tableContainer: {\n      maxHeight: 200,\n    },\n    stickyHeader: {\n      backgroundColor: \"#fff\",\n    },\n    actionsTitle: {\n      fontWeight: 600,\n      color: \"#081C42\",\n      fontSize: 16,\n      alignSelf: \"center\",\n    },\n    tableBlock: {\n      marginTop: 15,\n    },\n    filterField: {\n      width: 375,\n      fontWeight: 600,\n      \"& .input\": {\n        \"&::placeholder\": {\n          fontWeight: 600,\n          color: \"#081C42\",\n        },\n      },\n    },\n    divContainer: {\n      marginBottom: 20,\n    },\n    indicatorLabelOn: {\n      fontWeight: \"bold\",\n      color: \"#081C42 !important\",\n    },\n    indicatorLabel: {\n      fontSize: 12,\n      color: \"#E2E2E2\",\n      margin: \"0 8px 0 10px\",\n    },\n    fieldDescription: {\n      marginTop: 4,\n      color: \"#999999\",\n    },\n    tooltip: {\n      fontSize: 16,\n    },\n    ...actionsTray,\n    ...fieldBasic,\n  });\n\nconst StyledSwitch = withStyles((theme) => ({\n  root: {\n    width: 50,\n    height: 24,\n    padding: 0,\n    margin: 0,\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(24px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#4CCB92\",\n        boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n        opacity: 1,\n        border: \"none\",\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#4CCB92\",\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 22,\n    height: 22,\n    backgroundColor: \"#FAFAFA\",\n    border: \"2px solid #FFFFFF\",\n    marginLeft: 1,\n  },\n  track: {\n    borderRadius: 24 / 2,\n    backgroundColor: \"#E2E2E2\",\n    boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\n  },\n  checked: {},\n  focusVisible: {},\n}))(Switch);\n\nconst FormSwitchWrapper = ({\n  label = \"\",\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  switchOnly = false,\n  tooltip = \"\",\n  description = \"\",\n  classes,\n  indicatorLabels,\n}: IFormSwitch) => {\n  const switchComponent = (\n    <React.Fragment>\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: !checked,\n          })}\n        >\n          {indicatorLabels && indicatorLabels.length > 1\n            ? indicatorLabels[1]\n            : \"OFF\"}\n        </span>\n      )}\n      <StyledSwitch\n        checked={checked}\n        onChange={onChange}\n        color=\"primary\"\n        name={name}\n        inputProps={{ \"aria-label\": \"primary checkbox\" }}\n        disabled={disabled}\n        disableRipple\n        disableFocusRipple\n        disableTouchRipple\n        value={value}\n      />\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: checked,\n          })}\n        >\n          {indicatorLabels ? indicatorLabels[0] : \"ON\"}\n        </span>\n      )}\n    </React.Fragment>\n  );\n\n  if (switchOnly) {\n    return switchComponent;\n  }\n\n  return (\n    <div className={classes.divContainer}>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs>\n          <Grid container>\n            <Grid item xs={12} sm={4} md={3}>\n              {label !== \"\" && (\n                <InputLabel htmlFor={id} className={classes.inputLabel}>\n                  <span>{label}</span>\n                  {tooltip !== \"\" && (\n                    <div className={classes.tooltipContainer}>\n                      <Tooltip title={tooltip} placement=\"top-start\">\n                        <div className={classes.tooltip}>\n                          <HelpIcon />\n                        </div>\n                      </Tooltip>\n                    </div>\n                  )}\n                </InputLabel>\n              )}\n            </Grid>\n            <Grid item xs={12} sm textAlign={\"left\"}>\n              {description !== \"\" && (\n                <Typography component=\"p\" className={classes.fieldDescription}>\n                  {description}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid\n          item\n          xs={12}\n          sm={2}\n          textAlign={\"right\"}\n          className={classes.switchContainer}\n        >\n          {switchComponent}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(FormSwitchWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButton, IconButtonProps, Tooltip } from \"@mui/material\";\nimport clsx from \"clsx\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      padding: 8,\n      marginLeft: 8,\n      borderWidth: 1,\n      borderColor: \"#696969\",\n      color: \"#696969\",\n      borderStyle: \"solid\",\n      borderRadius: 3,\n      \"& .min-icon\": {\n        // height: 20,\n        width: 20,\n      },\n      \"& .MuiTouchRipple-root span\": {\n        backgroundColor: theme.palette.primary.main,\n        borderRadius: 3,\n        opacity: 0.3,\n      },\n      \"&:disabled\": {\n        color: \"#EBEBEB\",\n        borderColor: \"#EBEBEB\",\n      },\n    },\n    contained: {\n      borderColor: theme.palette.primary.main,\n      background: theme.palette.primary.main,\n      color: \"white\",\n      \"& .MuiTouchRipple-root span\": {\n        backgroundColor: theme.palette.primary.dark,\n        borderRadius: 3,\n        opacity: 0.3,\n      },\n      \"&:hover\": {\n        backgroundColor: theme.palette.primary.light,\n        color: \"#FFF\",\n      },\n    },\n  });\n\ninterface IBoxIconButton extends IconButtonProps {\n  classes: any;\n  children: any;\n  variant?: \"outlined\" | \"contained\";\n  tooltip?: string;\n}\n\nconst BoxIconButton = ({\n  classes,\n  children,\n  variant = \"outlined\",\n  tooltip,\n  ...rest\n}: IBoxIconButton) => {\n  const button = (\n    <IconButton\n      {...rest}\n      className={clsx(classes.root, {\n        [classes.contained]: variant === \"contained\",\n      })}\n    >\n      {children}\n    </IconButton>\n  );\n\n  if (tooltip && tooltip !== \"\") {\n    return (\n      <Tooltip title={tooltip}>\n        <span>{button}</span>\n      </Tooltip>\n    );\n  }\n\n  return button;\n};\n\nexport default withStyles(styles)(BoxIconButton);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  InputBase,\n  Tooltip,\n  SelectChangeEvent,\n} from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\nexport interface selectorTypes {\n  label: string;\n  value: string;\n}\n\ninterface SelectProps {\n  options: selectorTypes[];\n  value: string;\n  label: string;\n  id: string;\n  name: string;\n  tooltip?: string;\n  onChange: (e: SelectChangeEvent<string>) => void;\n  disabled?: boolean;\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n  });\n\nconst SelectStyled = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: 38,\n      lineHeight: 1,\n      \"label + &\": {\n        marginTop: theme.spacing(3),\n      },\n    },\n    input: {\n      height: 38,\n      position: \"relative\",\n      color: \"#07193E\",\n      fontSize: 13,\n      fontWeight: 600,\n      padding: \"8px 20px 10px 10px\",\n      border: \"#e5e5e5 1px solid\",\n      borderRadius: 4,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"&:hover\": {\n        borderColor: \"#393939\",\n      },\n      \"&:focus\": {\n        backgroundColor: \"#fff\",\n      },\n    },\n  })\n)(InputBase);\n\nconst SelectWrapper = ({\n  classes,\n  id,\n  name,\n  onChange,\n  options,\n  label,\n  tooltip = \"\",\n  value,\n  disabled = false,\n}: SelectProps) => {\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.inputLabel}>\n            <span>{label}</span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n        <FormControl fullWidth>\n          <Select\n            id={id}\n            name={name}\n            value={value}\n            onChange={onChange}\n            input={<SelectStyled />}\n            disabled={disabled}\n          >\n            {options.map((option) => (\n              <MenuItem\n                value={option.value}\n                key={`select-${name}-${option.label}`}\n              >\n                {option.label}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(SelectWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { ITenant } from \"./ListTenants/types\";\nimport { Opts } from \"./ListTenants/utils\";\nimport {\n  ADD_TENANT_SET_ADVANCED_MODE,\n  ADD_TENANT_SET_CURRENT_PAGE,\n  ADD_TENANT_UPDATE_FIELD,\n  ADD_TENANT_SET_PAGE_VALID,\n  ADD_TENANT_SET_STORAGE_CLASSES_LIST,\n  ADD_TENANT_SET_LIMIT_SIZE,\n  ADD_TENANT_ADD_CA_KEYPAIR,\n  ADD_TENANT_DELETE_CA_KEYPAIR,\n  ADD_TENANT_ADD_FILE_TO_CA_KEYPAIR,\n  ADD_TENANT_ADD_MINIO_KEYPAIR,\n  ADD_TENANT_DELETE_MINIO_KEYPAIR,\n  ADD_TENANT_ADD_FILE_TO_MINIO_KEYPAIR,\n  ADD_TENANT_ADD_CONSOLE_CERT,\n  ADD_TENANT_ADD_CONSOLE_CA_KEYPAIR,\n  ADD_TENANT_DELETE_CONSOLE_CA_KEYPAIR,\n  ADD_TENANT_ADD_FILE_TO_CONSOLE_CA_KEYPAIR,\n  ADD_TENANT_ENCRYPTION_SERVER_CERT,\n  ADD_TENANT_ENCRYPTION_CLIENT_CERT,\n  ADD_TENANT_ENCRYPTION_VAULT_CERT,\n  ADD_TENANT_ENCRYPTION_VAULT_CA,\n  ADD_TENANT_ENCRYPTION_GEMALTO_CA,\n  ADD_TENANT_RESET_FORM,\n  TENANT_DETAILS_SET_LOADING,\n  TENANT_DETAILS_SET_TENANT,\n  TENANT_DETAILS_SET_CURRENT_TENANT,\n  TENANT_DETAILS_SET_TAB,\n} from \"./types\";\n\n// Basic actions\nexport const setWizardPage = (page: number) => {\n  return {\n    type: ADD_TENANT_SET_CURRENT_PAGE,\n    page,\n  };\n};\n\nexport const setAdvancedMode = (state: boolean) => {\n  return {\n    type: ADD_TENANT_SET_ADVANCED_MODE,\n    state,\n  };\n};\n\nexport const updateAddField = (\n  pageName: string,\n  fieldName: string,\n  value: any\n) => {\n  return {\n    type: ADD_TENANT_UPDATE_FIELD,\n    pageName,\n    field: fieldName,\n    value,\n  };\n};\n\nexport const isPageValid = (pageName: string, valid: boolean) => {\n  return {\n    type: ADD_TENANT_SET_PAGE_VALID,\n    pageName,\n    valid,\n  };\n};\n\n// Name Tenant actions\n\nexport const setStorageClassesList = (storageClasses: Opts[]) => {\n  return {\n    type: ADD_TENANT_SET_STORAGE_CLASSES_LIST,\n    storageClasses,\n  };\n};\n\nexport const setLimitSize = (limitSize: any) => {\n  return {\n    type: ADD_TENANT_SET_LIMIT_SIZE,\n    limitSize,\n  };\n};\n\n// Security actions\n\nexport const addCaCertificate = () => {\n  return {\n    type: ADD_TENANT_ADD_CA_KEYPAIR,\n  };\n};\n\nexport const deleteCaCertificate = (id: string) => {\n  return {\n    type: ADD_TENANT_DELETE_CA_KEYPAIR,\n    id,\n  };\n};\n\nexport const addFileToCaCertificates = (\n  id: string,\n  key: string,\n  fileName: string,\n  value: string\n) => {\n  return {\n    type: ADD_TENANT_ADD_FILE_TO_CA_KEYPAIR,\n    id,\n    key,\n    fileName,\n    value,\n  };\n};\n\nexport const addConsoleCaCertificate = () => {\n  return {\n    type: ADD_TENANT_ADD_CONSOLE_CA_KEYPAIR,\n  };\n};\n\nexport const deleteConsoleCaCertificate = (id: string) => {\n  return {\n    type: ADD_TENANT_DELETE_CONSOLE_CA_KEYPAIR,\n    id,\n  };\n};\n\nexport const addFileToConsoleCaCertificates = (\n  id: string,\n  key: string,\n  fileName: string,\n  value: string\n) => {\n  return {\n    type: ADD_TENANT_ADD_FILE_TO_CONSOLE_CA_KEYPAIR,\n    id,\n    key,\n    fileName,\n    value,\n  };\n};\n\nexport const addKeyPair = () => {\n  return {\n    type: ADD_TENANT_ADD_MINIO_KEYPAIR,\n  };\n};\n\nexport const deleteKeyPair = (id: string) => {\n  return {\n    type: ADD_TENANT_DELETE_MINIO_KEYPAIR,\n    id,\n  };\n};\n\nexport const addFileToKeyPair = (\n  id: string,\n  key: string,\n  fileName: string,\n  value: string\n) => {\n  return {\n    type: ADD_TENANT_ADD_FILE_TO_MINIO_KEYPAIR,\n    id,\n    key,\n    fileName,\n    value,\n  };\n};\n\nexport const addConsoleCertificate = (\n  key: string,\n  fileName: string,\n  value: string\n) => {\n  return {\n    type: ADD_TENANT_ADD_CONSOLE_CERT,\n    key,\n    fileName,\n    value,\n  };\n};\n\nexport const addFileServerCert = (\n  key: string,\n  fileName: string,\n  value: string\n) => {\n  return {\n    type: ADD_TENANT_ENCRYPTION_SERVER_CERT,\n    key,\n    fileName,\n    value,\n  };\n};\n\nexport const addFileClientCert = (\n  key: string,\n  fileName: string,\n  value: string\n) => {\n  return {\n    type: ADD_TENANT_ENCRYPTION_CLIENT_CERT,\n    key,\n    fileName,\n    value,\n  };\n};\n\nexport const addFileVaultCert = (\n  key: string,\n  fileName: string,\n  value: string\n) => {\n  return {\n    type: ADD_TENANT_ENCRYPTION_VAULT_CERT,\n    key,\n    fileName,\n    value,\n  };\n};\n\nexport const addFileVaultCa = (fileName: string, value: string) => {\n  return {\n    type: ADD_TENANT_ENCRYPTION_VAULT_CA,\n    fileName,\n    value,\n  };\n};\n\nexport const addFileGemaltoCa = (fileName: string, value: string) => {\n  return {\n    type: ADD_TENANT_ENCRYPTION_GEMALTO_CA,\n    fileName,\n    value,\n  };\n};\n\nexport const resetAddTenantForm = () => {\n  return {\n    type: ADD_TENANT_RESET_FORM,\n  };\n};\n\nexport const setTenantDetailsLoad = (loading: boolean) => {\n  return {\n    type: TENANT_DETAILS_SET_LOADING,\n    state: loading,\n  };\n};\n\nexport const setTenantName = (tenantName: string, tenantNamespace: string) => {\n  return {\n    type: TENANT_DETAILS_SET_CURRENT_TENANT,\n    name: tenantName,\n    namespace: tenantNamespace,\n  };\n};\n\nexport const setTenantInfo = (tenant: ITenant | null) => {\n  return {\n    type: TENANT_DETAILS_SET_TENANT,\n    tenant,\n  };\n};\n\nexport const setTenantTab = (tab: string) => {\n  return {\n    type: TENANT_DETAILS_SET_TAB,\n    tab,\n  };\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport Grid from \"@mui/material/Grid\";\nimport RadioGroup from \"@mui/material/RadioGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Radio, { RadioProps } from \"@mui/material/Radio\";\nimport { InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { fieldBasic, radioIcons, tooltipHelper } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\nexport interface SelectorTypes {\n  label: string;\n  value: string;\n}\n\ninterface RadioGroupProps {\n  selectorOptions: SelectorTypes[];\n  currentSelection: string;\n  label: string;\n  id: string;\n  name: string;\n  tooltip?: string;\n  disableOptions?: boolean;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  classes: any;\n  displayInColumn?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    radioBoxContainer: {},\n    optionLabel: {\n      \"&.Mui-disabled\": {\n        \"& .MuiFormControlLabel-label\": {\n          color: \"#9c9c9c\",\n        },\n      },\n      \"&:last-child\": {\n        marginRight: 0,\n      },\n      \"& .MuiFormControlLabel-label\": {\n        fontSize: 12,\n        color: \"#07193E\",\n      },\n    },\n    checkedOption: {\n      \"& .MuiFormControlLabel-label\": {\n        fontSize: 12,\n        color: \"#07193E\",\n        fontWeight: 700,\n      },\n    },\n  });\n\nconst radioStyles = makeStyles({\n  root: {\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n  ...radioIcons,\n});\n\nconst RadioButton = (props: RadioProps) => {\n  const classes = radioStyles();\n\n  return (\n    <Radio\n      className={classes.root}\n      disableRipple\n      color=\"default\"\n      checkedIcon={<span className={classes.radioSelectedIcon} />}\n      icon={<span className={classes.radioUnselectedIcon} />}\n      {...props}\n    />\n  );\n};\n\nexport const RadioGroupSelector = ({\n  selectorOptions = [],\n  currentSelection,\n  label,\n  id,\n  name,\n  onChange,\n  tooltip = \"\",\n  disableOptions = false,\n  classes,\n  displayInColumn = false,\n}: RadioGroupProps) => {\n  return (\n    <Grid container alignItems={\"center\"}>\n      <Grid item xs>\n        <InputLabel htmlFor={id} className={classes.inputLabel}>\n          <span>{label}</span>\n          {tooltip !== \"\" && (\n            <div className={classes.tooltipContainer}>\n              <Tooltip title={tooltip} placement=\"top-start\">\n                <div>\n                  <HelpIcon />\n                </div>\n              </Tooltip>\n            </div>\n          )}\n        </InputLabel>\n      </Grid>\n      <Grid item xs>\n        <RadioGroup\n          aria-label={id}\n          id={id}\n          name={name}\n          value={currentSelection}\n          onChange={onChange}\n          row={!displayInColumn}\n          style={{ display: \"block\", textAlign: \"right\" }}\n        >\n          {selectorOptions.map((selectorOption) => {\n            return (\n              <FormControlLabel\n                key={`rd-${name}-${selectorOption.value}`}\n                value={selectorOption.value}\n                control={<RadioButton />}\n                label={selectorOption.label}\n                disabled={disableOptions}\n                className={clsx(classes.optionLabel, {\n                  [classes.checkedOption]:\n                    selectorOption.value === currentSelection,\n                })}\n              />\n            );\n          })}\n        </RadioGroup>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(RadioGroupSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nexport interface IValidation {\n  fieldKey: string;\n  required: boolean;\n  pattern?: RegExp;\n  customPatternMessage?: string;\n  customValidation?: boolean; // The validation to trigger the error\n  customValidationMessage?: string;\n  value: string;\n}\n\nexport const commonFormValidation = (fieldsValidate: IValidation[]) => {\n  let returnErrors: any = {};\n\n  fieldsValidate.forEach((field) => {\n    if (field.value == null) {\n      field.value = \"\";\n    }\n    if (field.required && field.value.trim() === \"\") {\n      returnErrors[field.fieldKey] = \"Field cannot be empty\";\n      return;\n    }\n    // if it's not required and the value is empty, we are done here\n    if (!field.required && field.value.trim() === \"\") {\n      return;\n    }\n\n    if (field.customValidation && field.customValidationMessage) {\n      returnErrors[field.fieldKey] = field.customValidationMessage;\n      return;\n    }\n\n    if (field.pattern && field.customPatternMessage) {\n      const rgx = new RegExp(field.pattern, \"g\");\n\n      if (!field.value.match(rgx)) {\n        returnErrors[field.fieldKey] = field.customPatternMessage;\n      }\n      return;\n    }\n  });\n\n  return returnErrors;\n};\n","import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { Theme } from \"@mui/material/styles\";\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    errorBlock: {\n      color: theme.palette?.error.main || \"#C83B51\",\n    },\n  });\n\ninterface IErrorBlockProps {\n  classes: any;\n  errorMessage: string;\n  withBreak?: boolean;\n}\n\nconst ErrorBlock = ({\n  classes,\n  errorMessage,\n  withBreak = true,\n}: IErrorBlockProps) => {\n  return (\n    <React.Fragment>\n      {withBreak && <br />}\n      <Typography component=\"p\" variant=\"body1\" className={classes.errorBlock}>\n        {errorMessage}\n      </Typography>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(ErrorBlock);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport * as React from \"react\";\nimport { SVGProps } from \"react\";\n\nconst WarnIcon = (props: SVGProps<SVGSVGElement>) => {\n  return (\n    <svg\n      {...props}\n      className={`min-icon`}\n      fill={\"currentcolor\"}\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <circle\n        cx=\"8\"\n        cy=\"8\"\n        r=\"7\"\n        fill=\"none\"\n        stroke=\"#e04006\"\n        stroke-width=\"2\"\n      />\n      <path fill=\"none\" stroke=\"#e04006\" stroke-width=\"2\" d=\"M8 4v6m0 1v2\" />\n    </svg>\n  );\n};\n\nexport default WarnIcon;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport get from \"lodash/get\";\nimport { Grid, InputLabel, Tooltip } from \"@mui/material\";\nimport IconButton from \"@mui/material/IconButton\";\nimport AttachFileIcon from \"@mui/icons-material/AttachFile\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport { fileProcess } from \"./utils\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport ErrorBlock from \"../../../../shared/ErrorBlock\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: string, i: string) => void;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  required?: boolean;\n  error?: string;\n  accept?: string;\n  value?: string;\n}\n\nconst componentHeight = 48;\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n      display: \"flex\",\n      flexWrap: \"nowrap\",\n      height: componentHeight,\n    },\n    errorState: {\n      color: \"#b53b4b\",\n      fontSize: 14,\n      position: \"absolute\",\n      top: 7,\n      right: 7,\n    },\n    errorText: {\n      margin: \"0\",\n      fontSize: \"0.75rem\",\n      marginTop: 3,\n      textAlign: \"left\",\n      fontFamily: \"Lato,sans-serif\",\n      fontWeight: 400,\n      lineHeight: \"1.66\",\n      color: \"#dc1f2e\",\n    },\n    valueString: {\n      maxWidth: 350,\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      marginTop: 2,\n    },\n    fileReselect: {\n      display: \"flex\",\n      alignItems: \"center\",\n      height: componentHeight,\n    },\n    fieldBottom: {\n      borderBottom: \"#9c9c9c 1px solid\",\n    },\n    fileInputField: {\n      margin: \"13px 0\",\n    },\n  });\n\nconst FileSelector = ({\n  label,\n  classes,\n  onChange,\n  id,\n  name,\n  disabled = false,\n  tooltip = \"\",\n  required,\n  error = \"\",\n  accept = \"\",\n  value = \"\",\n}: InputBoxProps) => {\n  const [showFileSelector, setShowSelector] = useState(false);\n\n  return (\n    <React.Fragment>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.fieldBottom} ${classes.fieldContainer} ${\n          error !== \"\" ? classes.errorInField : \"\"\n        }`}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={`${error !== \"\" ? classes.fieldLabelError : \"\"} ${\n              classes.inputLabel\n            }`}\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        {showFileSelector || value === \"\" ? (\n          <div className={classes.textBoxContainer}>\n            <input\n              type=\"file\"\n              name={name}\n              onChange={(e) => {\n                const fileName = get(e, \"target.files[0].name\", \"\");\n                fileProcess(e, (data: any) => {\n                  onChange(data, fileName);\n                });\n              }}\n              accept={accept}\n              required={required}\n              disabled={disabled}\n              className={classes.fileInputField}\n            />\n\n            {value !== \"\" && (\n              <IconButton\n                color=\"primary\"\n                aria-label=\"upload picture\"\n                component=\"span\"\n                onClick={() => {\n                  setShowSelector(false);\n                }}\n                disableRipple={false}\n                disableFocusRipple={false}\n                size=\"large\"\n              >\n                <CancelIcon />\n              </IconButton>\n            )}\n\n            {error !== \"\" && <ErrorBlock errorMessage={error} />}\n          </div>\n        ) : (\n          <div className={classes.fileReselect}>\n            <div className={classes.valueString}>{value}</div>\n            <IconButton\n              color=\"primary\"\n              aria-label=\"upload picture\"\n              component=\"span\"\n              onClick={() => {\n                setShowSelector(true);\n              }}\n              disableRipple={false}\n              disableFocusRipple={false}\n              size=\"large\"\n            >\n              <AttachFileIcon />\n            </IconButton>\n          </div>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(FileSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nexport const fileProcess = (evt: any, callback: any) => {\n  const file = evt.target.files[0];\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n\n  reader.onload = () => {\n    // reader.readAsDataURL(file) output will be something like: data:application/x-x509-ca-cert;base64,LS0tLS1CRUdJTiBDRVJUSU\n    // we care only about the actual base64 part (everything after \"data:application/x-x509-ca-cert;base64,\")\n    const fileBase64 = reader.result;\n    if (fileBase64) {\n      const fileArray = fileBase64.toString().split(\"base64,\");\n\n      if (fileArray.length === 2) {\n        callback(fileArray[1]);\n      }\n    }\n  };\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport get from \"lodash/get\";\nimport { ITenant } from \"./types\";\n\nexport interface Opts {\n  label: string;\n  value: string;\n}\n\nexport interface IQuotaElement {\n  hard: number;\n  name: string;\n}\n\nexport interface IQuotas {\n  elements?: IQuotaElement[];\n  name: string;\n}\n\nexport const minMemReq = 2147483648;\n\nexport interface KeyPair {\n  id: string;\n  encoded_cert: string;\n  encoded_key: string;\n  cert: string;\n  key: string;\n}\n\nexport const ecListTransform = (ecList: string[]): Opts[] => {\n  return ecList.map((value) => {\n    return { label: value, value };\n  });\n};\n\nexport const getLimitSizes = (resourceQuotas: IQuotas) => {\n  const quotas: IQuotaElement[] = get(resourceQuotas, \"elements\", []);\n\n  const returnQuotas: any = {};\n\n  quotas.forEach((rsQuota) => {\n    const stCName = rsQuota.name.split(\n      \".storageclass.storage.k8s.io/requests.storage\"\n    )[0];\n    const hard = get(rsQuota, \"hard\", 0);\n    const used = get(rsQuota, \"used\", 0);\n\n    returnQuotas[stCName] = hard - used;\n  });\n\n  return returnQuotas;\n};\n\nexport const tenantIsOnline = (tenant: ITenant): boolean => {\n  if (tenant.currentState === \"\") {\n    return false;\n  }\n  if (\n    !tenant.status &&\n    tenant.health_status !== \"green\" &&\n    tenant.health_status !== \"yellow\"\n  ) {\n    return false;\n  }\n  if (\n    tenant.status &&\n    tenant.status.health_status !== \"green\" &&\n    tenant.status.health_status !== \"yellow\"\n  ) {\n    return false;\n  }\n  return true;\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { InputAdornment, OutlinedInput } from \"@mui/material\";\nimport BoxIconButton from \"../BoxIconButton/BoxIconButton\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport { CopyIcon } from \"../../../../icons\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    container: {\n      display: \"flex\",\n      flexFlow: \"column\",\n      padding: \"20px 0 8px 0\",\n    },\n    inputWithCopy: {\n      \"& .MuiInputBase-root \": {\n        width: \"100%\",\n        background: \"#FBFAFA\",\n        \"& .MuiInputBase-input\": {\n          height: \".8rem\",\n        },\n        \"& .MuiInputAdornment-positionEnd\": {\n          marginRight: \".5rem\",\n          \"& .MuiButtonBase-root\": {\n            height: \"2rem\",\n          },\n        },\n      },\n      \"& .MuiButtonBase-root .min-icon\": {\n        width: \".8rem\",\n        height: \".8rem\",\n      },\n    },\n    inputLabel: {\n      fontSize: \".8rem\",\n      fontWeight: 600,\n    },\n  });\n\nconst CredentialItem = ({\n  label = \"\",\n  value = \"\",\n  classes = {},\n}: {\n  label: string;\n  value: string;\n  classes: any;\n}) => {\n  return (\n    <div className={classes.container}>\n      <div className={classes.inputLabel}>{label}:</div>\n      <div className={classes.inputWithCopy}>\n        <OutlinedInput\n          value={value}\n          readOnly\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <CopyToClipboard text={value}>\n                <BoxIconButton\n                  aria-label=\"copy\"\n                  tooltip={\"Copy\"}\n                  onClick={() => {}}\n                  onMouseDown={() => {}}\n                  edge=\"end\"\n                >\n                  <CopyIcon />\n                </BoxIconButton>\n              </CopyToClipboard>\n            </InputAdornment>\n          }\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(CredentialItem);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { SVGProps } from \"react\";\n\nconst NewAccountIcon = (props: SVGProps<SVGSVGElement>) => {\n  return (\n    <svg\n      {...props}\n      className={`min-icon`}\n      fill={\"currentcolor\"}\n      id=\"Account_Icon\"\n      data-name=\"Account Icon\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 16.409 13.096\"\n    >\n      <path\n        id=\"Trazado_391\"\n        data-name=\"Trazado 391\"\n        d=\"M-4332.855-1143.481a3.023,3.023,0,0,0,2.958-3.078,3.023,3.023,0,0,0-2.958-3.078,3.023,3.023,0,0,0-2.958,3.078A3.023,3.023,0,0,0-4332.855-1143.481Zm0-5.194a2.078,2.078,0,0,1,2.03,2.116,2.077,2.077,0,0,1-2.03,2.116,2.075,2.075,0,0,1-2.028-2.116A2.076,2.076,0,0,1-4332.855-1148.675Z\"\n        transform=\"translate(4339.12 1149.637)\"\n        fill=\"#07193e\"\n      />\n      <path\n        id=\"Trazado_392\"\n        data-name=\"Trazado 392\"\n        d=\"M-4337.952-1130.053a1.374,1.374,0,0,0,1.252.775h4.993a1.354,1.354,0,0,0,1.25-.786,1.675,1.675,0,0,0-.164-1.686,4.521,4.521,0,0,0-1.7-1.405,4.361,4.361,0,0,0-2.125-.438,4.483,4.483,0,0,0-3.318,1.808c-.026.035-.051.071-.075.106A1.641,1.641,0,0,0-4337.952-1130.053Zm6.663-.437a.426.426,0,0,1-.417.25h-4.993a.453.453,0,0,1-.427-.254.64.64,0,0,1,.053-.632h0c.017-.027.037-.054.057-.08a3.539,3.539,0,0,1,2.622-1.424c.056,0,.113,0,.168,0a3.606,3.606,0,0,1,2.864,1.466A.686.686,0,0,1-4331.29-1130.49Z\"\n        transform=\"translate(4340.467 1140.236)\"\n        fill=\"#07193e\"\n      />\n      <path\n        id=\"Trazado_393\"\n        data-name=\"Trazado 393\"\n        d=\"M-4329.387-1146.951h-3.506a.476.476,0,0,0-.477.476.477.477,0,0,0,.477.476h3.506a1.047,1.047,0,0,1,1.046,1.045v7.99a1.047,1.047,0,0,1-1.046,1.045H-4341.8a1.047,1.047,0,0,1-1.046-1.045v-7.99A1.048,1.048,0,0,1-4341.8-1146a.476.476,0,0,0,.476-.476.476.476,0,0,0-.476-.476,2,2,0,0,0-2,2v7.99a2,2,0,0,0,2,2h12.412a2,2,0,0,0,2-2v-7.99A2,2,0,0,0-4329.387-1146.951Z\"\n        transform=\"translate(4343.797 1148.063)\"\n        fill=\"#07193e\"\n      />\n      <rect\n        id=\"Rectángulo_809\"\n        data-name=\"Rectángulo 809\"\n        width=\"3.266\"\n        height=\"2.781\"\n        rx=\"1.024\"\n        transform=\"translate(11.002 3.376)\"\n        fill=\"#07193e\"\n      />\n      <rect\n        id=\"Rectángulo_810\"\n        data-name=\"Rectángulo 810\"\n        width=\"3.266\"\n        height=\"1.336\"\n        rx=\"0.668\"\n        transform=\"translate(11.002 7.328)\"\n        fill=\"#07193e\"\n      />\n      <rect\n        id=\"Rectángulo_811\"\n        data-name=\"Rectángulo 811\"\n        width=\"3.266\"\n        height=\"1.336\"\n        rx=\"0.668\"\n        transform=\"translate(11.002 9.621)\"\n        fill=\"#07193e\"\n      />\n    </svg>\n  );\n};\n\nexport default NewAccountIcon;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport get from \"lodash/get\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { NewServiceAccount } from \"./types\";\nimport { Button } from \"@mui/material\";\nimport ModalWrapper from \"../ModalWrapper/ModalWrapper\";\nimport Grid from \"@mui/material/Grid\";\nimport CredentialItem from \"./CredentialItem\";\nimport NewAccountIcon from \"../../../../icons/NewAccountIcon\";\nimport WarnIcon from \"../../../../icons/WarnIcon\";\nimport { DownloadIcon } from \"../../../../icons\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    warningBlock: {\n      color: \"red\",\n      fontSize: \".85rem\",\n      margin: \".5rem 0 .5rem 0\",\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& svg \": {\n        marginRight: \".3rem\",\n      },\n    },\n    credentialTitle: {\n      padding: \".8rem 0 0 0\",\n      fontWeight: 600,\n      fontSize: \".9rem\",\n    },\n    buttonContainer: {\n      textAlign: \"right\",\n      marginTop: \"1rem\",\n    },\n    credentialsPanel: {\n      overflowY: \"auto\",\n      maxHeight: 350,\n    },\n    promptTitle: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    buttonSpacer: {\n      marginRight: \".9rem\",\n    },\n    promptIcon: {\n      marginRight: \".1rem\",\n      display: \"flex\",\n      alignItems: \"center\",\n      height: \"2rem\",\n      width: \"2rem\",\n    },\n  });\n\ninterface ICredentialsPromptProps {\n  classes: any;\n  newServiceAccount: NewServiceAccount | null;\n  open: boolean;\n  entity: string;\n  closeModal: () => void;\n}\n\nconst download = (filename: string, text: string) => {\n  let element = document.createElement(\"a\");\n  element.setAttribute(\n    \"href\",\n    \"data:text/plain;charset=utf-8,\" + encodeURIComponent(text)\n  );\n  element.setAttribute(\"download\", filename);\n\n  element.style.display = \"none\";\n  document.body.appendChild(element);\n\n  element.click();\n\n  document.body.removeChild(element);\n};\n\nconst CredentialsPrompt = ({\n  classes,\n  newServiceAccount,\n  open,\n  closeModal,\n  entity,\n}: ICredentialsPromptProps) => {\n  if (!newServiceAccount) {\n    return null;\n  }\n\n  const consoleCreds = get(newServiceAccount, \"console\", null);\n  const idp = get(newServiceAccount, \"idp\", false);\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModal();\n      }}\n      title={\n        <div className={classes.promptTitle}>\n          <div className={classes.promptIcon}>\n            <NewAccountIcon />\n          </div>{\" \"}\n          <div>New {entity} Created</div>\n        </div>\n      }\n    >\n      <Grid container>\n        <Grid item xs={12} className={classes.formScrollable}>\n          A new {entity} has been created with the following details:\n          {!idp && consoleCreds && (\n            <React.Fragment>\n              <Grid item xs={12} className={classes.credentialsPanel}>\n                <div className={classes.credentialTitle}>\n                  Console Credentials\n                </div>\n                {Array.isArray(consoleCreds) &&\n                  consoleCreds.map((credentialsPair, index) => {\n                    return (\n                      <>\n                        <CredentialItem\n                          label=\"Access Key\"\n                          value={credentialsPair.accessKey}\n                        />\n                        <CredentialItem\n                          label=\"Secret Key\"\n                          value={credentialsPair.secretKey}\n                        />\n                      </>\n                    );\n                  })}\n                {!Array.isArray(consoleCreds) && (\n                  <>\n                    <CredentialItem\n                      label=\"Access Key\"\n                      value={consoleCreds.accessKey}\n                    />\n                    <CredentialItem\n                      label=\"Secret Key\"\n                      value={consoleCreds.secretKey}\n                    />\n                  </>\n                )}\n              </Grid>\n            </React.Fragment>\n          )}\n          {idp ? (\n            <div className={classes.warningBlock}>\n              Please Login via the configured external identity provider.\n            </div>\n          ) : (\n            <div className={classes.warningBlock}>\n              <WarnIcon />\n              <span>\n                Write these down, as this is the only time the secret will be\n                displayed.\n              </span>\n            </div>\n          )}\n        </Grid>\n        <Grid item xs={12} className={classes.buttonContainer}>\n          <Button\n            variant=\"outlined\"\n            className={classes.buttonSpacer}\n            onClick={() => {\n              closeModal();\n            }}\n            color=\"primary\"\n          >\n            Done\n          </Button>\n\n          {!idp && (\n            <Button\n              onClick={() => {\n                let consoleExtras = {};\n\n                if (consoleCreds) {\n                  if (!Array.isArray(consoleCreds)) {\n                    consoleExtras = {\n                      console: [\n                        {\n                          access_key: consoleCreds.accessKey,\n                          secret_key: consoleCreds.secretKey,\n                        },\n                      ],\n                    };\n                  } else {\n                    const cCreds = consoleCreds.map((itemMap) => {\n                      return {\n                        access_key: itemMap.accessKey,\n                        secret_key: itemMap.secretKey,\n                      };\n                    });\n\n                    consoleExtras = {\n                      console: [...cCreds],\n                    };\n                  }\n                }\n\n                download(\n                  \"credentials.json\",\n                  JSON.stringify({\n                    ...consoleExtras,\n                  })\n                );\n              }}\n              endIcon={<DownloadIcon />}\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              Download\n            </Button>\n          )}\n        </Grid>\n      </Grid>\n    </ModalWrapper>\n  );\n};\n\nexport default withStyles(styles)(CredentialsPrompt);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport { IAffinityModel } from \"../../../../common/types\";\n\nexport const getDefaultAffinity = (tenantName: string, poolName: string) => {\n  const defaultAffinity: IAffinityModel = {\n    podAntiAffinity: {\n      requiredDuringSchedulingIgnoredDuringExecution: [\n        {\n          labelSelector: {\n            matchExpressions: [\n              {\n                key: \"v1.min.io/tenant\",\n                operator: \"In\",\n                values: [tenantName],\n              },\n              {\n                key: \"v1.min.io/pool\",\n                operator: \"In\",\n                values: [poolName],\n              },\n            ],\n          },\n          topologyKey: \"kubernetes.io/hostname\",\n        },\n      ],\n    },\n  };\n  return defaultAffinity;\n};\n\nexport const getNodeSelector = (\n  labels: string,\n  withPodAntiAffinity: boolean,\n  tenantName: string,\n  poolName: string\n) => {\n  // Labels in the form of key1=value1&key2=value2&key3=value3...\n  const splittedLabels = labels.split(\"&\");\n  let matchExpressions: any = [];\n\n  splittedLabels.forEach((label: string) => {\n    const splitKeyValue = label.split(\"=\");\n    if (splitKeyValue.length === 2) {\n      matchExpressions.push({\n        key: splitKeyValue[0],\n        operator: \"In\",\n        values: [splitKeyValue[1]],\n      });\n    }\n  });\n\n  const nodeSelector: IAffinityModel = {\n    nodeAffinity: {\n      requiredDuringSchedulingIgnoredDuringExecution: {\n        nodeSelectorTerms: [\n          {\n            matchExpressions: matchExpressions,\n          },\n        ],\n      },\n    },\n  };\n  if (withPodAntiAffinity) {\n    const def = getDefaultAffinity(tenantName, poolName);\n    nodeSelector.podAntiAffinity = def.podAntiAffinity;\n  }\n  console.log(nodeSelector);\n  return nodeSelector;\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IWizardButton, IWizardPage } from \"./types\";\nimport { Button, LinearProgress } from \"@mui/material\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    wizardStepContainer: {\n      display: \"flex\",\n      flexDirection: \"column\",\n    },\n    wizardComponent: {\n      overflowY: \"auto\",\n      marginBottom: 10,\n      height: \"calc(100vh - 100px - 80px)\",\n      maxWidth: 840,\n      width: \"100%\",\n    },\n    wizardModal: {\n      overflowY: \"auto\",\n      marginBottom: 10,\n      height: \"calc(100vh - 515px)\",\n    },\n    buttonsContainer: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"flex-start\" as const,\n      padding: \"10px 0\",\n      borderTop: \"#EAEAEA 1px solid\",\n      \"& button\": {\n        marginLeft: 10,\n      },\n      \"&.forModal\": {\n        paddingBottom: 0,\n      },\n    },\n    buttonInnerContainer: {\n      maxWidth: 840,\n      width: \"100%\",\n      textAlign: \"right\" as const,\n    },\n  });\n\nconst WizardPage = ({\n  classes,\n  page,\n  pageChange,\n  loadingStep,\n  forModal,\n}: IWizardPage) => {\n  const buttonAction = (btn: IWizardButton) => {\n    switch (btn.type) {\n      case \"next\":\n        pageChange(\"++\");\n        break;\n      case \"back\":\n        pageChange(\"--\");\n        break;\n      case \"to\":\n        pageChange(btn.toPage || 0);\n        break;\n      case \"custom\":\n      default:\n    }\n\n    if (btn.action) {\n      btn.action(pageChange);\n    }\n  };\n\n  return (\n    <div className={classes.wizardStepContainer}>\n      <div className={forModal ? classes.wizardModal : classes.wizardComponent}>\n        {page.componentRender}\n      </div>\n      {loadingStep && (\n        <div>\n          <LinearProgress />\n        </div>\n      )}\n      <div\n        className={`${classes.buttonsContainer} ${forModal ? \"forModal\" : \"\"}`}\n      >\n        <div className={classes.buttonInnerContainer}>\n          {page.buttons.map((btn) => {\n            return (\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"small\"\n                onClick={() => {\n                  buttonAction(btn);\n                }}\n                disabled={!btn.enabled}\n                key={`button-${page.label}-${btn.label}`}\n              >\n                {btn.label}\n              </Button>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(WizardPage);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState, Fragment } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IWizardMain } from \"./types\";\nimport WizardPage from \"./WizardPage\";\nimport { Grid, List } from \"@mui/material\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    wizardMain: {\n      display: \"flex\",\n      width: \"100%\",\n      height: \"100%\",\n      flexGrow: 1,\n    },\n    wizFromContainer: {},\n    wizFromModal: {\n      position: \"relative\",\n    },\n    modalWizardSteps: {\n      padding: 5,\n      borderBottom: \"#eaeaea 1px solid\",\n      \"& ul\": {\n        padding: 0,\n        marginTop: 0,\n        display: \"flex\",\n        justifyContent: \"space-evenly\",\n\n        \"& li\": {\n          listStyle: \"lower-roman\",\n          \"&::marker\": {\n            paddingLeft: 15,\n          },\n        },\n      },\n    },\n    buttonList: {\n      backgroundColor: \"transparent\",\n      border: \"none\",\n      cursor: \"pointer\",\n      \"&:not(:disabled):hover\": {\n        textDecoration: \"underline\",\n      },\n      \"&:selected, &:active, &:focus, &:focus:active\": {\n        border: \"none\",\n        outline: 0,\n        boxShadow: \"none\",\n      },\n    },\n    paddedContentGrid: {\n      marginTop: 8,\n      padding: \"0 10px\",\n    },\n    stepsLabel: {\n      fontSize: 20,\n      color: \"#393939\",\n      fontWeight: 600,\n      margin: \"15px 12px\",\n      \"&.stepsModalTitle\": {\n        textAlign: \"center\",\n        width: \"100%\",\n        marginTop: 0,\n        marginBottom: 10,\n      },\n    },\n    stepsMasterContainer: {\n      position: \"sticky\",\n      top: 0,\n      backgroundColor: \"#FFFFFF\",\n      width: \"100%\",\n      maxHeight: 90,\n    },\n  });\n\nconst GenericWizard = ({\n  classes,\n  wizardSteps,\n  loadingStep,\n  forModal,\n}: IWizardMain) => {\n  const [currentStep, setCurrentStep] = useState<number>(0);\n\n  const pageChange = (toElement: string | number) => {\n    const lastPage = wizardSteps.length - 1;\n\n    if (toElement === \"++\") {\n      let nextPage = currentStep + 1;\n\n      if (nextPage > lastPage) {\n        nextPage = lastPage;\n      }\n\n      setCurrentStep(nextPage);\n    }\n\n    if (toElement === \"--\") {\n      let prevPage = currentStep - 1;\n\n      if (prevPage < 0) {\n        prevPage = 0;\n      }\n\n      setCurrentStep(prevPage);\n    }\n\n    if (typeof toElement === \"number\") {\n      let pg = toElement;\n      if (toElement < 0) {\n        pg = 0;\n      }\n\n      if (toElement > lastPage) {\n        pg = lastPage;\n      }\n\n      setCurrentStep(pg);\n    }\n  };\n\n  if (wizardSteps.length === 0) {\n    return null;\n  }\n\n  const stepsList = () => {\n    return (\n      <Fragment>\n        <List component=\"nav\" dense={true}>\n          {wizardSteps.map((step, index) => {\n            return (\n              <ListItem\n                button\n                onClick={() => pageChange(index)}\n                key={`wizard-${index.toString()}`}\n                selected={currentStep === index}\n              >\n                <ListItemText primary={step.label} />\n              </ListItem>\n            );\n          })}\n        </List>\n      </Fragment>\n    );\n  };\n  const stepsListModal = () => {\n    return (\n      <ul>\n        {wizardSteps.map((step, index) => {\n          return (\n            <li key={`wizard-${index.toString()}`}>\n              <button\n                onClick={() => pageChange(index)}\n                disabled={index > currentStep}\n                className={classes.buttonList}\n              >\n                {step.label}\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    );\n  };\n\n  return (\n    <Grid\n      container\n      className={forModal ? classes.wizFromModal : classes.wizFromContainer}\n    >\n      {forModal ? (\n        <Fragment>\n          <div className={classes.stepsMasterContainer}>\n            <div className={`${classes.stepsLabel} stepsModalTitle`}>Steps</div>\n            <div className={classes.modalWizardSteps}>{stepsListModal()}</div>\n          </div>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <Grid item xs={12} sm={2} md={2} lg={2} xl={2}>\n            {stepsList()}\n          </Grid>\n        </Fragment>\n      )}\n\n      <Grid\n        item\n        xs={12}\n        sm={forModal ? 12 : 10}\n        md={forModal ? 12 : 10}\n        lg={forModal ? 12 : 10}\n        xl={forModal ? 12 : 10}\n        className={forModal ? \"\" : classes.paddedContentGrid}\n      >\n        <WizardPage\n          page={wizardSteps[currentStep]}\n          pageChange={pageChange}\n          loadingStep={loadingStep}\n          forModal={forModal}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(GenericWizard);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  LinearProgress,\n} from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { modalBasic } from \"../../../../Common/FormComponents/common/styleLibrary\";\nimport { setErrorSnackMessage } from \"../../../../../../actions\";\nimport { ErrorResponseHandler } from \"../../../../../../common/types\";\nimport api from \"../../../../../../common/api\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    wrapText: {\n      maxWidth: \"200px\",\n      whiteSpace: \"normal\",\n      wordWrap: \"break-word\",\n    },\n    ...modalBasic,\n  });\n\ninterface IAddNamespace {\n  classes: any;\n  namespace: string;\n  addNamespaceOpen: boolean;\n  closeAddNamespaceModalAndRefresh: (reloadNamespaceData: boolean) => void;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n}\n\nconst AddNamespaceModal = ({\n  classes,\n  namespace,\n  addNamespaceOpen,\n  closeAddNamespaceModalAndRefresh,\n  setErrorSnackMessage,\n}: IAddNamespace) => {\n  const [addNamespaceLoading, setAddNamespaceLoading] =\n    useState<boolean>(false);\n\n  useEffect(() => {\n    if (addNamespaceLoading) {\n      api\n        .invoke(\"POST\", \"/api/v1/namespace\", {\n          name: namespace,\n        })\n        .then((res) => {\n          setAddNamespaceLoading(false);\n          closeAddNamespaceModalAndRefresh(true);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setAddNamespaceLoading(false);\n          setErrorSnackMessage(err);\n        });\n    }\n  }, [\n    addNamespaceLoading,\n    closeAddNamespaceModalAndRefresh,\n    namespace,\n    setErrorSnackMessage,\n  ]);\n\n  const addNamespace = () => {\n    setAddNamespaceLoading(true);\n  };\n\n  return (\n    <Dialog\n      open={addNamespaceOpen}\n      onClose={() => {\n        closeAddNamespaceModalAndRefresh(false);\n      }}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">Create new namespace</DialogTitle>\n      <DialogContent>\n        {addNamespaceLoading && <LinearProgress />}\n        <DialogContentText id=\"alert-dialog-description\">\n          Are you sure you want to add a namespace called{\" \"}\n          <b className={classes.wrapText}>{namespace}</b>?\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            closeAddNamespaceModalAndRefresh(false);\n          }}\n          color=\"primary\"\n          disabled={addNamespaceLoading}\n          type=\"button\"\n          className={classes.clearButton}\n        >\n          Cancel\n        </Button>\n        <Button\n          onClick={addNamespace}\n          variant=\"contained\"\n          color=\"primary\"\n          autoFocus\n          disabled={addNamespaceLoading}\n        >\n          Create Namespace\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nconst mapDispatchToProps = {\n  setErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(AddNamespaceModal));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { AppState } from \"../../../../../store\";\nimport { isPageValid, updateAddField } from \"../../actions\";\nimport {\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableRow from \"@mui/material/TableRow\";\nimport {\n  calculateDistribution,\n  erasureCodeCalc,\n  getBytes,\n  niceBytes,\n  setMemoryResource,\n} from \"../../../../../common/utils\";\nimport { ecListTransform, Opts } from \"../../ListTenants/utils\";\nimport { IMemorySize } from \"../../ListTenants/types\";\nimport {\n  ErrorResponseHandler,\n  ICapacity,\n  IErasureCodeCalc,\n} from \"../../../../../common/types\";\nimport { commonFormValidation } from \"../../../../../utils/validationFunctions\";\nimport api from \"../../../../../common/api\";\nimport { Divider } from \"@mui/material\";\n\ninterface ISizePreviewProps {\n  classes: any;\n  updateAddField: typeof updateAddField;\n  isPageValid: typeof isPageValid;\n  advancedMode: boolean;\n  volumeSize: string;\n  sizeFactor: string;\n  drivesPerServer: string;\n  nodes: string;\n  memoryNode: string;\n  ecParity: string;\n  ecParityChoices: Opts[];\n  cleanECChoices: string[];\n  maxAllocableMemo: number;\n  memorySize: IMemorySize;\n  distribution: any;\n  ecParityCalc: IErasureCodeCalc;\n  limitSize: any;\n  selectedStorageClass: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    buttonContainer: {\n      textAlign: \"right\",\n    },\n    root: {\n      margin: 4,\n    },\n    table: {\n      \"& .MuiTableCell-root\": {\n        fontSize: 13,\n      },\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst SizePreview = ({\n  classes,\n  updateAddField,\n  isPageValid,\n  advancedMode,\n  volumeSize,\n  sizeFactor,\n  drivesPerServer,\n  nodes,\n  memoryNode,\n  ecParity,\n  ecParityChoices,\n  cleanECChoices,\n  maxAllocableMemo,\n  memorySize,\n  distribution,\n  ecParityCalc,\n  limitSize,\n  selectedStorageClass,\n}: ISizePreviewProps) => {\n  const [errorFlag, setErrorFlag] = useState<boolean>(false);\n  const [nodeError, setNodeError] = useState<string>(\"\");\n  const usableInformation = ecParityCalc.storageFactors.find(\n    (element) => element.erasureCode === ecParity\n  );\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      updateAddField(\"tenantSize\", field, value);\n    },\n    [updateAddField]\n  );\n\n  /*Debounce functions*/\n\n  // Storage Quotas\n\n  const validateMemorySize = useCallback(() => {\n    const memSize = parseInt(memoryNode) || 0;\n    const clusterSize = volumeSize || 0;\n    const maxMemSize = maxAllocableMemo || 0;\n    const clusterSizeFactor = sizeFactor;\n\n    const clusterSizeBytes = getBytes(\n      clusterSize.toString(10),\n      clusterSizeFactor\n    );\n    const memoSize = setMemoryResource(memSize, clusterSizeBytes, maxMemSize);\n    updateField(\"memorySize\", memoSize);\n  }, [maxAllocableMemo, memoryNode, sizeFactor, updateField, volumeSize]);\n\n  const getMaxAllocableMemory = (nodes: string) => {\n    if (nodes !== \"\" && !isNaN(parseInt(nodes))) {\n      setNodeError(\"\");\n      api\n        .invoke(\n          \"GET\",\n          `/api/v1/cluster/max-allocatable-memory?num_nodes=${nodes}`\n        )\n        .then((res: { max_memory: number }) => {\n          const maxMemory = res.max_memory ? res.max_memory : 0;\n          updateField(\"maxAllocableMemo\", maxMemory);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setErrorFlag(true);\n          setNodeError(err.errorMessage);\n        });\n    }\n  };\n\n  useEffect(() => {\n    validateMemorySize();\n  }, [memoryNode, validateMemorySize]);\n\n  useEffect(() => {\n    validateMemorySize();\n  }, [maxAllocableMemo, validateMemorySize]);\n\n  useEffect(() => {\n    if (ecParityChoices.length > 0 && distribution.error === \"\") {\n      const ecCodeValidated = erasureCodeCalc(\n        cleanECChoices,\n        distribution.persistentVolumes,\n        distribution.pvSize,\n        distribution.nodes\n      );\n\n      updateField(\"ecParityCalc\", ecCodeValidated);\n      updateField(\"ecParity\", ecCodeValidated.defaultEC);\n    }\n  }, [ecParityChoices.length, distribution, cleanECChoices, updateField]);\n  /*End debounce functions*/\n\n  /*Calculate Allocation*/\n  useEffect(() => {\n    validateClusterSize();\n    getECValue();\n    getMaxAllocableMemory(nodes);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [nodes, volumeSize, sizeFactor, drivesPerServer]);\n\n  const validateClusterSize = () => {\n    const size = volumeSize;\n    const factor = sizeFactor;\n    const limitSize = getBytes(\"12\", \"Ti\", true);\n\n    const clusterCapacity: ICapacity = {\n      unit: factor,\n      value: size.toString(),\n    };\n\n    const distrCalculate = calculateDistribution(\n      clusterCapacity,\n      parseInt(nodes),\n      parseInt(limitSize),\n      parseInt(drivesPerServer)\n    );\n\n    updateField(\"distribution\", distrCalculate);\n  };\n\n  const getECValue = () => {\n    updateField(\"ecParity\", \"\");\n\n    if (nodes.trim() !== \"\" && drivesPerServer.trim() !== \"\") {\n      api\n        .invoke(\"GET\", `/api/v1/get-parity/${nodes}/${drivesPerServer}`)\n        .then((ecList: string[]) => {\n          updateField(\"ecParityChoices\", ecListTransform(ecList));\n          updateField(\"cleanECChoices\", ecList);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          updateField(\"ecparityChoices\", []);\n          isPageValid(\"tenantSize\", false);\n          updateField(\"ecParity\", \"\");\n        });\n    }\n  };\n  /*Calculate Allocation End*/\n\n  /* Validations of pages */\n\n  useEffect(() => {\n    const parsedSize = getBytes(volumeSize, sizeFactor, true);\n    const commonValidation = commonFormValidation([\n      {\n        fieldKey: \"nodes\",\n        required: true,\n        value: nodes,\n        customValidation: errorFlag,\n        customValidationMessage: nodeError,\n      },\n      {\n        fieldKey: \"volume_size\",\n        required: true,\n        value: volumeSize,\n        customValidation:\n          parseInt(parsedSize) < 1073741824 ||\n          parseInt(parsedSize) > limitSize[selectedStorageClass],\n        customValidationMessage: `Volume size must be greater than 1Gi and less than ${niceBytes(\n          limitSize[selectedStorageClass],\n          true\n        )}`,\n      },\n      {\n        fieldKey: \"memory_per_node\",\n        required: true,\n        value: memoryNode,\n        customValidation: parseInt(memoryNode) < 2,\n        customValidationMessage: \"Memory size must be greater than 2Gi\",\n      },\n      {\n        fieldKey: \"drivesps\",\n        required: true,\n        value: drivesPerServer,\n        customValidation: parseInt(drivesPerServer) < 1,\n        customValidationMessage: \"There must be at least one drive\",\n      },\n    ]);\n\n    isPageValid(\n      \"tenantSize\",\n      !(\"nodes\" in commonValidation) &&\n        !(\"volume_size\" in commonValidation) &&\n        !(\"memory_per_node\" in commonValidation) &&\n        !(\"drivesps\" in commonValidation) &&\n        distribution.error === \"\" &&\n        ecParityCalc.error === 0 &&\n        memorySize.error === \"\"\n    );\n  }, [\n    nodes,\n    volumeSize,\n    sizeFactor,\n    memoryNode,\n    distribution,\n    drivesPerServer,\n    ecParityCalc,\n    memorySize,\n    limitSize,\n    selectedStorageClass,\n    isPageValid,\n    errorFlag,\n    nodeError,\n  ]);\n\n  /* End Validation of pages */\n\n  return (\n    <div className={classes.root}>\n      <h4>Resource Allocation</h4>\n      <Divider />\n      <Table className={classes.table} aria-label=\"simple table\" size={\"small\"}>\n        <TableBody>\n          <TableRow>\n            <TableCell scope=\"row\">Number of Servers</TableCell>\n            <TableCell align=\"right\">\n              {parseInt(nodes) > 0 ? nodes : \"-\"}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell scope=\"row\">Drives per Server</TableCell>\n            <TableCell align=\"right\">\n              {distribution ? distribution.disks : \"-\"}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell scope=\"row\">Drive Capacity</TableCell>\n            <TableCell align=\"right\">\n              {distribution ? niceBytes(distribution.pvSize) : \"-\"}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell scope=\"row\">Total Volumes</TableCell>\n            <TableCell align=\"right\">\n              {distribution ? distribution.persistentVolumes : \"-\"}\n            </TableCell>\n          </TableRow>\n          {!advancedMode && (\n            <TableRow>\n              <TableCell scope=\"row\">Memory per Node</TableCell>\n              <TableCell align=\"right\">{memoryNode} Gi</TableCell>\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n      {ecParityCalc.error === 0 && usableInformation && (\n        <Fragment>\n          <h4>Erasure Code Configuration</h4>\n          <Divider />\n          <Table\n            className={classes.table}\n            aria-label=\"simple table\"\n            size={\"small\"}\n          >\n            <TableBody>\n              <TableRow>\n                <TableCell scope=\"row\">EC Parity</TableCell>\n                <TableCell align=\"right\">\n                  {ecParity !== \"\" ? ecParity : \"-\"}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell scope=\"row\">Raw Capacity</TableCell>\n                <TableCell align=\"right\">\n                  {niceBytes(ecParityCalc.rawCapacity)}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell scope=\"row\">Usable Capacity</TableCell>\n                <TableCell align=\"right\">\n                  {niceBytes(usableInformation.maxCapacity)}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell scope=\"row\">Server Failures Tolerated</TableCell>\n                <TableCell align=\"right\">\n                  {distribution\n                    ? Math.floor(\n                        usableInformation.maxFailureTolerations /\n                          distribution.disks\n                      )\n                    : \"-\"}\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </Fragment>\n      )}\n    </div>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  advancedMode: state.tenants.createTenant.advancedModeOn,\n  volumeSize: state.tenants.createTenant.fields.tenantSize.volumeSize,\n  sizeFactor: state.tenants.createTenant.fields.tenantSize.sizeFactor,\n  drivesPerServer: state.tenants.createTenant.fields.tenantSize.drivesPerServer,\n  nodes: state.tenants.createTenant.fields.tenantSize.nodes,\n  memoryNode: state.tenants.createTenant.fields.tenantSize.memoryNode,\n  ecParity: state.tenants.createTenant.fields.tenantSize.ecParity,\n  ecParityChoices: state.tenants.createTenant.fields.tenantSize.ecParityChoices,\n  cleanECChoices: state.tenants.createTenant.fields.tenantSize.cleanECChoices,\n  maxAllocableMemo:\n    state.tenants.createTenant.fields.tenantSize.maxAllocableMemo,\n  memorySize: state.tenants.createTenant.fields.tenantSize.memorySize,\n  distribution: state.tenants.createTenant.fields.tenantSize.distribution,\n  ecParityCalc: state.tenants.createTenant.fields.tenantSize.ecParityCalc,\n  limitSize: state.tenants.createTenant.fields.tenantSize.limitSize,\n  selectedStorageClass:\n    state.tenants.createTenant.fields.nameTenant.selectedStorageClass,\n});\n\nconst connector = connect(mapState, {\n  updateAddField,\n  isPageValid,\n});\n\nexport default withStyles(styles)(connector(SizePreview));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { AppState } from \"../../../../../store\";\nimport { isPageValid, updateAddField } from \"../../actions\";\nimport {\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  calculateDistribution,\n  erasureCodeCalc,\n  getBytes,\n  k8sfactorForDropdown,\n  niceBytes,\n  setMemoryResource,\n} from \"../../../../../common/utils\";\nimport { clearValidationError } from \"../../utils\";\nimport { ecListTransform, Opts } from \"../../ListTenants/utils\";\nimport { IMemorySize } from \"../../ListTenants/types\";\nimport {\n  ErrorResponseHandler,\n  ICapacity,\n  IErasureCodeCalc,\n} from \"../../../../../common/types\";\nimport { commonFormValidation } from \"../../../../../utils/validationFunctions\";\nimport api from \"../../../../../common/api\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport { SelectChangeEvent } from \"@mui/material\";\n\ninterface ITenantSizeProps {\n  classes: any;\n  updateAddField: typeof updateAddField;\n  isPageValid: typeof isPageValid;\n  advancedMode: boolean;\n  volumeSize: string;\n  sizeFactor: string;\n  drivesPerServer: string;\n  nodes: string;\n  memoryNode: string;\n  ecParity: string;\n  ecParityChoices: Opts[];\n  cleanECChoices: string[];\n  maxAllocableMemo: number;\n  memorySize: IMemorySize;\n  distribution: any;\n  ecParityCalc: IErasureCodeCalc;\n  limitSize: any;\n  selectedStorageClass: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    buttonContainer: {\n      textAlign: \"right\",\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst TenantSize = ({\n  classes,\n  updateAddField,\n  isPageValid,\n  advancedMode,\n  volumeSize,\n  sizeFactor,\n  drivesPerServer,\n  nodes,\n  memoryNode,\n  ecParity,\n  ecParityChoices,\n  cleanECChoices,\n  maxAllocableMemo,\n  memorySize,\n  distribution,\n  ecParityCalc,\n  limitSize,\n  selectedStorageClass,\n}: ITenantSizeProps) => {\n  const [validationErrors, setValidationErrors] = useState<any>({});\n  const [errorFlag, setErrorFlag] = useState<boolean>(false);\n  const [nodeError, setNodeError] = useState<string>(\"\");\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      updateAddField(\"tenantSize\", field, value);\n    },\n    [updateAddField]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  /*Debounce functions*/\n\n  // Storage Quotas\n\n  const validateMemorySize = useCallback(() => {\n    const memSize = parseInt(memoryNode) || 0;\n    const clusterSize = volumeSize || 0;\n    const maxMemSize = maxAllocableMemo || 0;\n    const clusterSizeFactor = sizeFactor;\n\n    const clusterSizeBytes = getBytes(\n      clusterSize.toString(10),\n      clusterSizeFactor\n    );\n    const memoSize = setMemoryResource(memSize, clusterSizeBytes, maxMemSize);\n    updateField(\"memorySize\", memoSize);\n  }, [maxAllocableMemo, memoryNode, sizeFactor, updateField, volumeSize]);\n\n  const getMaxAllocableMemory = (nodes: string) => {\n    if (nodes !== \"\" && !isNaN(parseInt(nodes))) {\n      setNodeError(\"\");\n      api\n        .invoke(\n          \"GET\",\n          `/api/v1/cluster/max-allocatable-memory?num_nodes=${nodes}`\n        )\n        .then((res: { max_memory: number }) => {\n          const maxMemory = res.max_memory ? res.max_memory : 0;\n          updateField(\"maxAllocableMemo\", maxMemory);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setErrorFlag(true);\n          setNodeError(err.errorMessage);\n        });\n    }\n  };\n\n  useEffect(() => {\n    validateMemorySize();\n  }, [memoryNode, validateMemorySize]);\n\n  useEffect(() => {\n    validateMemorySize();\n  }, [maxAllocableMemo, validateMemorySize]);\n\n  useEffect(() => {\n    if (ecParityChoices.length > 0 && distribution.error === \"\") {\n      const ecCodeValidated = erasureCodeCalc(\n        cleanECChoices,\n        distribution.persistentVolumes,\n        distribution.pvSize,\n        distribution.nodes\n      );\n\n      updateField(\"ecParityCalc\", ecCodeValidated);\n      updateField(\"ecParity\", ecCodeValidated.defaultEC);\n    }\n  }, [ecParityChoices.length, distribution, cleanECChoices, updateField]);\n  /*End debounce functions*/\n\n  /*Calculate Allocation*/\n  useEffect(() => {\n    validateClusterSize();\n    getECValue();\n    getMaxAllocableMemory(nodes);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [nodes, volumeSize, sizeFactor, drivesPerServer]);\n\n  const validateClusterSize = () => {\n    const size = volumeSize;\n    const factor = sizeFactor;\n    const limitSize = getBytes(\"12\", \"Ti\", true);\n\n    const clusterCapacity: ICapacity = {\n      unit: factor,\n      value: size.toString(),\n    };\n\n    const distrCalculate = calculateDistribution(\n      clusterCapacity,\n      parseInt(nodes),\n      parseInt(limitSize),\n      parseInt(drivesPerServer)\n    );\n\n    updateField(\"distribution\", distrCalculate);\n  };\n\n  const getECValue = () => {\n    updateField(\"ecParity\", \"\");\n\n    if (nodes.trim() !== \"\" && drivesPerServer.trim() !== \"\") {\n      api\n        .invoke(\"GET\", `/api/v1/get-parity/${nodes}/${drivesPerServer}`)\n        .then((ecList: string[]) => {\n          updateField(\"ecParityChoices\", ecListTransform(ecList));\n          updateField(\"cleanECChoices\", ecList);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          updateField(\"ecparityChoices\", []);\n          isPageValid(\"tenantSize\", false);\n          updateField(\"ecParity\", \"\");\n        });\n    }\n  };\n  /*Calculate Allocation End*/\n\n  /* Validations of pages */\n\n  useEffect(() => {\n    const parsedSize = getBytes(volumeSize, sizeFactor, true);\n    const commonValidation = commonFormValidation([\n      {\n        fieldKey: \"nodes\",\n        required: true,\n        value: nodes,\n        customValidation: errorFlag,\n        customValidationMessage: nodeError,\n      },\n      {\n        fieldKey: \"volume_size\",\n        required: true,\n        value: volumeSize,\n        customValidation:\n          parseInt(parsedSize) < 1073741824 ||\n          parseInt(parsedSize) > limitSize[selectedStorageClass],\n        customValidationMessage: `Volume size must be greater than 1Gi and less than ${niceBytes(\n          limitSize[selectedStorageClass],\n          true\n        )}`,\n      },\n      {\n        fieldKey: \"memory_per_node\",\n        required: true,\n        value: memoryNode,\n        customValidation: parseInt(memoryNode) < 2,\n        customValidationMessage: \"Memory size must be greater than 2Gi\",\n      },\n      {\n        fieldKey: \"drivesps\",\n        required: true,\n        value: drivesPerServer,\n        customValidation: parseInt(drivesPerServer) < 1,\n        customValidationMessage: \"There must be at least one drive\",\n      },\n    ]);\n\n    isPageValid(\n      \"tenantSize\",\n      !(\"nodes\" in commonValidation) &&\n        !(\"volume_size\" in commonValidation) &&\n        !(\"memory_per_node\" in commonValidation) &&\n        !(\"drivesps\" in commonValidation) &&\n        distribution.error === \"\" &&\n        ecParityCalc.error === 0 &&\n        memorySize.error === \"\"\n    );\n\n    setValidationErrors(commonValidation);\n  }, [\n    nodes,\n    volumeSize,\n    sizeFactor,\n    memoryNode,\n    distribution,\n    drivesPerServer,\n    ecParityCalc,\n    memorySize,\n    limitSize,\n    selectedStorageClass,\n    isPageValid,\n    errorFlag,\n    nodeError,\n  ]);\n\n  /* End Validation of pages */\n\n  return (\n    <Fragment>\n      <Grid item xs={12}>\n        <div className={classes.headerElement}>\n          <h3 className={classes.h3Section}>Tenant Size</h3>\n          <span className={classes.descriptionText}>\n            Please select the desired capacity\n          </span>\n        </div>\n      </Grid>\n      {distribution.error !== \"\" && (\n        <Grid item xs={12}>\n          <div className={classes.error}>{distribution.error}</div>\n        </Grid>\n      )}\n      {memorySize.error !== \"\" && (\n        <Grid item xs={12}>\n          <div className={classes.error}>{memorySize.error}</div>\n        </Grid>\n      )}\n      <Grid item xs={12}>\n        <InputBoxWrapper\n          id=\"nodes\"\n          name=\"nodes\"\n          type=\"number\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"nodes\", e.target.value);\n            cleanValidation(\"nodes\");\n          }}\n          label=\"Number of Servers\"\n          disabled={selectedStorageClass === \"\"}\n          value={nodes}\n          min=\"4\"\n          required\n          error={validationErrors[\"nodes\"] || \"\"}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <InputBoxWrapper\n          id=\"drivesps\"\n          name=\"drivesps\"\n          type=\"number\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            updateField(\"drivesPerServer\", e.target.value);\n            cleanValidation(\"drivesps\");\n          }}\n          label=\"Number of Drives per Server\"\n          value={drivesPerServer}\n          disabled={selectedStorageClass === \"\"}\n          min=\"1\"\n          required\n          error={validationErrors[\"drivesps\"] || \"\"}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <div className={classes.multiContainer}>\n          <div>\n            <InputBoxWrapper\n              type=\"number\"\n              id=\"volume_size\"\n              name=\"volume_size\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"volumeSize\", e.target.value);\n                cleanValidation(\"volume_size\");\n              }}\n              label=\"Total Size\"\n              value={volumeSize}\n              disabled={selectedStorageClass === \"\"}\n              required\n              error={validationErrors[\"volume_size\"] || \"\"}\n              min=\"0\"\n            />\n          </div>\n          <div className={classes.sizeFactorContainer}>\n            <SelectWrapper\n              label={\"Unit\"}\n              id=\"size_factor\"\n              name=\"size_factor\"\n              value={sizeFactor}\n              disabled={selectedStorageClass === \"\"}\n              onChange={(e: SelectChangeEvent<string>) => {\n                updateField(\"sizeFactor\", e.target.value as string);\n              }}\n              options={k8sfactorForDropdown()}\n            />\n          </div>\n        </div>\n      </Grid>\n\n      <Fragment>\n        <Grid item xs={12}>\n          <InputBoxWrapper\n            type=\"number\"\n            id=\"memory_per_node\"\n            name=\"memory_per_node\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"memoryNode\", e.target.value);\n              cleanValidation(\"memory_per_node\");\n            }}\n            label=\"Memory per Node [Gi]\"\n            value={memoryNode}\n            disabled={selectedStorageClass === \"\"}\n            required\n            error={validationErrors[\"memory_per_node\"] || \"\"}\n            min=\"2\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <SelectWrapper\n            id=\"ec_parity\"\n            name=\"ec_parity\"\n            onChange={(e: SelectChangeEvent<string>) => {\n              updateField(\"ecParity\", e.target.value as string);\n            }}\n            label=\"Erasure Code Parity\"\n            disabled={selectedStorageClass === \"\"}\n            value={ecParity}\n            options={ecParityChoices}\n          />\n          <span className={classes.descriptionText}>\n            Please select the desired parity. This setting will change the max\n            usable capacity in the cluster\n          </span>\n        </Grid>\n      </Fragment>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  advancedMode: state.tenants.createTenant.advancedModeOn,\n  volumeSize: state.tenants.createTenant.fields.tenantSize.volumeSize,\n  sizeFactor: state.tenants.createTenant.fields.tenantSize.sizeFactor,\n  drivesPerServer: state.tenants.createTenant.fields.tenantSize.drivesPerServer,\n  nodes: state.tenants.createTenant.fields.tenantSize.nodes,\n  memoryNode: state.tenants.createTenant.fields.tenantSize.memoryNode,\n  ecParity: state.tenants.createTenant.fields.tenantSize.ecParity,\n  ecParityChoices: state.tenants.createTenant.fields.tenantSize.ecParityChoices,\n  cleanECChoices: state.tenants.createTenant.fields.tenantSize.cleanECChoices,\n  maxAllocableMemo:\n    state.tenants.createTenant.fields.tenantSize.maxAllocableMemo,\n  memorySize: state.tenants.createTenant.fields.tenantSize.memorySize,\n  distribution: state.tenants.createTenant.fields.tenantSize.distribution,\n  ecParityCalc: state.tenants.createTenant.fields.tenantSize.ecParityCalc,\n  limitSize: state.tenants.createTenant.fields.tenantSize.limitSize,\n  selectedStorageClass:\n    state.tenants.createTenant.fields.nameTenant.selectedStorageClass,\n});\n\nconst connector = connect(mapState, {\n  updateAddField,\n  isPageValid,\n});\n\nexport default withStyles(styles)(connector(TenantSize));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, {\n  Fragment,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport get from \"lodash/get\";\nimport debounce from \"lodash/debounce\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { setModalErrorSnackMessage } from \"../../../../../actions\";\nimport {\n  isPageValid,\n  setLimitSize,\n  setStorageClassesList,\n  updateAddField,\n} from \"../../actions\";\nimport {\n  getLimitSizes,\n  IQuotaElement,\n  IQuotas,\n  Opts,\n} from \"../../ListTenants/utils\";\nimport { AppState } from \"../../../../../store\";\nimport { commonFormValidation } from \"../../../../../utils/validationFunctions\";\nimport { clearValidationError } from \"../../utils\";\nimport { ErrorResponseHandler } from \"../../../../../common/types\";\nimport api from \"../../../../../common/api\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport AddIcon from \"../../../../../icons/AddIcon\";\nimport AddNamespaceModal from \"./helpers/AddNamespaceModal\";\nimport SizePreview from \"./SizePreview\";\nimport TenantSize from \"./TenantSize\";\nimport { Paper, SelectChangeEvent } from \"@mui/material\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    buttonContainer: {\n      textAlign: \"right\",\n    },\n    sizePreview: {\n      position: \"fixed\",\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\ninterface INameTenantScreen {\n  classes: any;\n  storageClasses: Opts[];\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n  updateAddField: typeof updateAddField;\n  isPageValid: typeof isPageValid;\n  setStorageClassesList: typeof setStorageClassesList;\n  setLimitSize: typeof setLimitSize;\n  tenantName: string;\n  namespace: string;\n  selectedStorageClass: string;\n}\n\nconst NameTenant = ({\n  classes,\n  storageClasses,\n  tenantName,\n  namespace,\n  selectedStorageClass,\n  updateAddField,\n  setStorageClassesList,\n  setLimitSize,\n  isPageValid,\n  setModalErrorSnackMessage,\n}: INameTenantScreen) => {\n  const [validationErrors, setValidationErrors] = useState<any>({});\n  const [emptyNamespace, setEmptyNamespace] = useState<boolean>(true);\n  const [loadingNamespaceInfo, setLoadingNamespaceInfo] =\n    useState<boolean>(false);\n  const [showCreateButton, setShowCreateButton] = useState<boolean>(false);\n  const [openAddNSConfirm, setOpenAddNSConfirm] = useState<boolean>(false);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: string) => {\n      updateAddField(\"nameTenant\", field, value);\n    },\n    [updateAddField]\n  );\n\n  // Storage classes retrieval\n  const getNamespaceInformation = useCallback(() => {\n    setShowCreateButton(false);\n    updateField(\"selectedStorageClass\", \"\");\n\n    setStorageClassesList([]);\n\n    // Empty tenantValidation\n    api\n      .invoke(\"GET\", `/api/v1/namespaces/${namespace}/tenants`)\n      .then((res: any[]) => {\n        const tenantsList = get(res, \"tenants\", []);\n\n        if (tenantsList && tenantsList.length > 0) {\n          setEmptyNamespace(false);\n          setLoadingNamespaceInfo(false);\n          return;\n        }\n        setEmptyNamespace(true);\n\n        // Storagequotas retrieval\n        api\n          .invoke(\n            \"GET\",\n            `/api/v1/namespaces/${namespace}/resourcequotas/${namespace}-storagequota`\n          )\n          .then((res: IQuotas) => {\n            const elements: IQuotaElement[] = get(res, \"elements\", []);\n            setLimitSize(getLimitSizes(res));\n\n            const newStorage = elements.map((storageClass: any) => {\n              const name = get(storageClass, \"name\", \"\").split(\n                \".storageclass.storage.k8s.io/requests.storage\"\n              )[0];\n\n              return { label: name, value: name };\n            });\n\n            setStorageClassesList(newStorage);\n            if (newStorage.length > 0) {\n              updateField(\"selectedStorageClass\", newStorage[0].value);\n            }\n            setLoadingNamespaceInfo(false);\n          })\n          .catch((err: ErrorResponseHandler) => {\n            setLoadingNamespaceInfo(false);\n            setShowCreateButton(true);\n            console.error(\"Namespace error: \", err);\n          });\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setModalErrorSnackMessage({\n          errorMessage: \"Error validating if namespace already has tenants\",\n          detailedError: err.detailedError,\n        });\n      });\n  }, [\n    namespace,\n    setLimitSize,\n    setModalErrorSnackMessage,\n    setStorageClassesList,\n    updateField,\n  ]);\n\n  const debounceNamespace = useMemo(\n    () => debounce(getNamespaceInformation, 500),\n    [getNamespaceInformation]\n  );\n\n  useEffect(() => {\n    if (namespace !== \"\") {\n      debounceNamespace();\n      setLoadingNamespaceInfo(true);\n\n      // Cancel previous debounce calls during useEffect cleanup.\n      return debounceNamespace.cancel;\n    }\n  }, [debounceNamespace, namespace]);\n\n  // Validation\n  useEffect(() => {\n    let customNamespaceError = false;\n    let errorMessage = \"\";\n\n    if (!emptyNamespace && !loadingNamespaceInfo) {\n      customNamespaceError = true;\n      errorMessage = \"You can only create one tenant per namespace\";\n    } else if (\n      storageClasses.length < 1 &&\n      emptyNamespace &&\n      !loadingNamespaceInfo\n    ) {\n      customNamespaceError = true;\n      errorMessage = \"Please enter a valid namespace\";\n    }\n\n    const commonValidation = commonFormValidation([\n      {\n        fieldKey: \"tenant-name\",\n        required: true,\n        pattern: /^[a-z0-9-]{3,63}$/,\n        customPatternMessage:\n          \"Name only can contain lowercase letters, numbers and '-'. Min. Length: 3\",\n        value: tenantName,\n      },\n      {\n        fieldKey: \"namespace\",\n        required: true,\n        value: namespace,\n        customValidation: customNamespaceError,\n        customValidationMessage: errorMessage,\n      },\n    ]);\n\n    const isValid =\n      !(\"tenant-name\" in commonValidation) &&\n      !(\"namespace\" in commonValidation) &&\n      storageClasses.length > 0;\n\n    isPageValid(\"nameTenant\", isValid);\n\n    setValidationErrors(commonValidation);\n  }, [\n    storageClasses,\n    namespace,\n    tenantName,\n    isPageValid,\n    emptyNamespace,\n    loadingNamespaceInfo,\n  ]);\n\n  const frmValidationCleanup = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  const addNamespace = () => {\n    setOpenAddNSConfirm(true);\n  };\n\n  const closeAddNamespace = (refresh: boolean) => {\n    setOpenAddNSConfirm(false);\n\n    if (refresh) {\n      debounceNamespace();\n    }\n  };\n\n  return (\n    <Fragment>\n      {openAddNSConfirm && (\n        <AddNamespaceModal\n          addNamespaceOpen={openAddNSConfirm}\n          closeAddNamespaceModalAndRefresh={closeAddNamespace}\n          namespace={namespace}\n        />\n      )}\n      <Grid container>\n        <Grid item xs={8}>\n          <Paper className={classes.paperWrapper}>\n            <Grid container>\n              <Grid item xs={12}>\n                <div className={classes.headerElement}>\n                  <h3 className={classes.h3Section}>Name Tenant</h3>\n                  <span className={classes.descriptionText}>\n                    How would you like to name this new tenant?\n                  </span>\n                </div>\n                <InputBoxWrapper\n                  id=\"tenant-name\"\n                  name=\"tenant-name\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"tenantName\", e.target.value);\n                    frmValidationCleanup(\"tenant-name\");\n                  }}\n                  label=\"Name\"\n                  value={tenantName}\n                  required\n                  error={validationErrors[\"tenant-name\"] || \"\"}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <InputBoxWrapper\n                  id=\"namespace\"\n                  name=\"namespace\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"namespace\", e.target.value);\n                    frmValidationCleanup(\"namespace\");\n                  }}\n                  label=\"Namespace\"\n                  value={namespace}\n                  error={validationErrors[\"namespace\"] || \"\"}\n                  overlayIcon={showCreateButton ? <AddIcon /> : null}\n                  overlayAction={addNamespace}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <SelectWrapper\n                  id=\"storage_class\"\n                  name=\"storage_class\"\n                  onChange={(e: SelectChangeEvent<string>) => {\n                    updateField(\n                      \"selectedStorageClass\",\n                      e.target.value as string\n                    );\n                  }}\n                  label=\"Storage Class\"\n                  value={selectedStorageClass}\n                  options={storageClasses}\n                  disabled={storageClasses.length < 1}\n                />\n              </Grid>\n              <TenantSize />\n            </Grid>\n          </Paper>\n        </Grid>\n        <Grid item xs={4}>\n          <div className={classes.sizePreview}>\n            <SizePreview />\n          </div>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  tenantName: state.tenants.createTenant.fields.nameTenant.tenantName,\n  namespace: state.tenants.createTenant.fields.nameTenant.namespace,\n  selectedStorageClass:\n    state.tenants.createTenant.fields.nameTenant.selectedStorageClass,\n  storageClasses: state.tenants.createTenant.storageClasses,\n});\n\nconst connector = connect(mapState, {\n  setModalErrorSnackMessage,\n  updateAddField,\n  setStorageClassesList,\n  setLimitSize,\n  isPageValid,\n});\n\nexport default withStyles(styles)(connector(NameTenant));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, Paper, SelectChangeEvent } from \"@mui/material\";\nimport {\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { isPageValid, updateAddField } from \"../../actions\";\nimport { AppState } from \"../../../../../store\";\nimport { clearValidationError } from \"../../utils\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport { ISecurityContext } from \"../../types\";\n\ninterface IConfigureProps {\n  updateAddField: typeof updateAddField;\n  isPageValid: typeof isPageValid;\n  storageClasses: any;\n  classes: any;\n  customImage: boolean;\n  imageName: string;\n  customDockerhub: boolean;\n  imageRegistry: string;\n  imageRegistryUsername: string;\n  imageRegistryPassword: string;\n  exposeMinIO: boolean;\n  exposeConsole: boolean;\n  prometheusCustom: boolean;\n  tenantCustom: boolean;\n  logSearchCustom: boolean;\n  logSearchVolumeSize: string;\n  logSearchSizeFactor: string;\n  prometheusVolumeSize: string;\n  prometheusSizeFactor: string;\n  logSearchSelectedStorageClass: string;\n  logSearchImage: string;\n  kesImage: string;\n  logSearchPostgresImage: string;\n  logSearchPostgresInitImage: string;\n  prometheusSelectedStorageClass: string;\n  prometheusImage: string;\n  prometheusSidecarImage: string;\n  prometheusInitImage: string;\n  selectedStorageClass: string;\n  tenantSecurityContext: ISecurityContext;\n  logSearchSecurityContext: ISecurityContext;\n  logSearchPostgresSecurityContext: ISecurityContext;\n  prometheusSecurityContext: ISecurityContext;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    buttonContainer: {\n      textAlign: \"right\",\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst Configure = ({\n  classes,\n  storageClasses,\n  customImage,\n  imageName,\n  customDockerhub,\n  imageRegistry,\n  imageRegistryUsername,\n  imageRegistryPassword,\n  exposeMinIO,\n  exposeConsole,\n  prometheusCustom,\n  tenantCustom,\n  logSearchCustom,\n  logSearchVolumeSize,\n  logSearchSizeFactor,\n  logSearchImage,\n  kesImage,\n  logSearchPostgresImage,\n  logSearchPostgresInitImage,\n  prometheusVolumeSize,\n  prometheusSizeFactor,\n  logSearchSelectedStorageClass,\n  prometheusSelectedStorageClass,\n  prometheusImage,\n  prometheusSidecarImage,\n  prometheusInitImage,\n  updateAddField,\n  isPageValid,\n  selectedStorageClass,\n  tenantSecurityContext,\n  logSearchSecurityContext,\n  logSearchPostgresSecurityContext,\n  prometheusSecurityContext,\n}: IConfigureProps) => {\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      updateAddField(\"configure\", field, value);\n    },\n    [updateAddField]\n  );\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n    if (tenantCustom) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"tenant_securityContext_runAsUser\",\n          required: true,\n          value: tenantSecurityContext.runAsUser,\n          customValidation:\n            tenantSecurityContext.runAsUser === \"\" ||\n            parseInt(tenantSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"tenant_securityContext_runAsGroup\",\n          required: true,\n          value: tenantSecurityContext.runAsGroup,\n          customValidation:\n            tenantSecurityContext.runAsGroup === \"\" ||\n            parseInt(tenantSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"tenant_securityContext_fsGroup\",\n          required: true,\n          value: tenantSecurityContext.fsGroup,\n          customValidation:\n            tenantSecurityContext.fsGroup === \"\" ||\n            parseInt(tenantSecurityContext.fsGroup) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n      ];\n    }\n    if (prometheusCustom) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"prometheus_storage_class\",\n          required: true,\n          value: prometheusSelectedStorageClass,\n          customValidation: prometheusSelectedStorageClass === \"\",\n          customValidationMessage: \"Field cannot be empty\",\n        },\n        {\n          fieldKey: \"prometheus_volume_size\",\n          required: true,\n          value: prometheusVolumeSize,\n          customValidation:\n            prometheusVolumeSize === \"\" || parseInt(prometheusVolumeSize) <= 0,\n          customValidationMessage: `Volume size must be present and be greater than 0`,\n        },\n        {\n          fieldKey: \"prometheus_securityContext_runAsUser\",\n          required: true,\n          value: prometheusSecurityContext.runAsUser,\n          customValidation:\n            prometheusSecurityContext.runAsUser === \"\" ||\n            parseInt(prometheusSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"prometheus_securityContext_runAsGroup\",\n          required: true,\n          value: prometheusSecurityContext.runAsGroup,\n          customValidation:\n            prometheusSecurityContext.runAsGroup === \"\" ||\n            parseInt(prometheusSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"prometheus_securityContext_fsGroup\",\n          required: true,\n          value: prometheusSecurityContext.fsGroup,\n          customValidation:\n            prometheusSecurityContext.fsGroup === \"\" ||\n            parseInt(prometheusSecurityContext.fsGroup) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n      ];\n    }\n    if (logSearchCustom) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"log_search_storage_class\",\n          required: true,\n          value: logSearchSelectedStorageClass,\n          customValidation: logSearchSelectedStorageClass === \"\",\n          customValidationMessage: \"Field cannot be empty\",\n        },\n        {\n          fieldKey: \"log_search_volume_size\",\n          required: true,\n          value: logSearchVolumeSize,\n          customValidation:\n            logSearchVolumeSize === \"\" || parseInt(logSearchVolumeSize) <= 0,\n          customValidationMessage: `Volume size must be present and be greatter than 0`,\n        },\n        {\n          fieldKey: \"logSearch_securityContext_runAsUser\",\n          required: true,\n          value: logSearchSecurityContext.runAsUser,\n          customValidation:\n            logSearchSecurityContext.runAsUser === \"\" ||\n            parseInt(logSearchSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"logSearch_securityContext_runAsGroup\",\n          required: true,\n          value: logSearchSecurityContext.runAsGroup,\n          customValidation:\n            logSearchSecurityContext.runAsGroup === \"\" ||\n            parseInt(logSearchSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"logSearch_securityContext_fsGroup\",\n          required: true,\n          value: logSearchSecurityContext.fsGroup,\n          customValidation:\n            logSearchSecurityContext.fsGroup === \"\" ||\n            parseInt(logSearchSecurityContext.fsGroup) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"postgres_securityContext_runAsUser\",\n          required: true,\n          value: logSearchPostgresSecurityContext.runAsUser,\n          customValidation:\n            logSearchPostgresSecurityContext.runAsUser === \"\" ||\n            parseInt(logSearchPostgresSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"postgres_securityContext_runAsGroup\",\n          required: true,\n          value: prometheusSecurityContext.runAsGroup,\n          customValidation:\n            logSearchPostgresSecurityContext.runAsGroup === \"\" ||\n            parseInt(logSearchPostgresSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"postgres_securityContext_fsGroup\",\n          required: true,\n          value: logSearchPostgresSecurityContext.fsGroup,\n          customValidation:\n            logSearchPostgresSecurityContext.fsGroup === \"\" ||\n            parseInt(logSearchPostgresSecurityContext.fsGroup) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n      ];\n    }\n\n    if (customImage) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"image\",\n          required: false,\n          value: imageName,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage: \"Format must be of form: 'minio/minio:VERSION'\",\n        },\n        {\n          fieldKey: \"logSearchImage\",\n          required: false,\n          value: logSearchImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'minio/logsearchapi:VERSION'\",\n        },\n        {\n          fieldKey: \"kesImage\",\n          required: false,\n          value: kesImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage: \"Format must be of form: 'minio/kes:VERSION'\",\n        },\n        {\n          fieldKey: \"logSearchPostgresImage\",\n          required: false,\n          value: logSearchPostgresImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'library/postgres:VERSION'\",\n        },\n        {\n          fieldKey: \"logSearchPostgresInitImage\",\n          required: false,\n          value: logSearchPostgresInitImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'library/busybox:VERSION'\",\n        },\n        {\n          fieldKey: \"prometheusImage\",\n          required: false,\n          value: prometheusImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'minio/prometheus:VERSION'\",\n        },\n        {\n          fieldKey: \"prometheusSidecarImage\",\n          required: false,\n          value: prometheusSidecarImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'project/container:VERSION'\",\n        },\n        {\n          fieldKey: \"prometheusInitImage\",\n          required: false,\n          value: prometheusInitImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'library/busybox:VERSION'\",\n        },\n      ];\n      if (customDockerhub) {\n        customAccountValidation = [\n          ...customAccountValidation,\n          {\n            fieldKey: \"registry\",\n            required: true,\n            value: imageRegistry,\n          },\n          {\n            fieldKey: \"registryUsername\",\n            required: true,\n            value: imageRegistryUsername,\n          },\n          {\n            fieldKey: \"registryPassword\",\n            required: true,\n            value: imageRegistryPassword,\n          },\n        ];\n      }\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    isPageValid(\"configure\", Object.keys(commonVal).length === 0);\n\n    setValidationErrors(commonVal);\n  }, [\n    customImage,\n    imageName,\n    logSearchImage,\n    kesImage,\n    logSearchPostgresImage,\n    logSearchPostgresInitImage,\n    prometheusImage,\n    prometheusSidecarImage,\n    prometheusInitImage,\n    customDockerhub,\n    imageRegistry,\n    imageRegistryUsername,\n    imageRegistryPassword,\n    isPageValid,\n    prometheusCustom,\n    tenantCustom,\n    logSearchCustom,\n    prometheusSelectedStorageClass,\n    prometheusVolumeSize,\n    logSearchSelectedStorageClass,\n    logSearchVolumeSize,\n    tenantSecurityContext,\n    logSearchSecurityContext,\n    logSearchPostgresSecurityContext,\n    prometheusSecurityContext,\n  ]);\n\n  useEffect(() => {\n    // New default values is current selection is invalid\n    if (storageClasses.length > 0) {\n      const filterPrometheus = storageClasses.filter(\n        (item: any) => item.value === prometheusSelectedStorageClass\n      );\n      if (filterPrometheus.length === 0) {\n        updateField(\"prometheusSelectedStorageClass\", selectedStorageClass);\n      }\n\n      const filterLogSearch = storageClasses.filter(\n        (item: any) => item.value === logSearchSelectedStorageClass\n      );\n      if (filterLogSearch.length === 0) {\n        updateField(\"logSearchSelectedStorageClass\", selectedStorageClass);\n      }\n    }\n  }, [\n    logSearchSelectedStorageClass,\n    prometheusSelectedStorageClass,\n    selectedStorageClass,\n    storageClasses,\n    updateField,\n  ]);\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Configure</h3>\n        <span className={classes.descriptionText}>\n          Basic configurations for tenant management\n        </span>\n      </div>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Expose Services</h3>\n        <span className={classes.descriptionText}>\n          Whether the tenant's services should request an external IP.\n        </span>\n      </div>\n      <Grid item xs={12}>\n        <FormSwitchWrapper\n          value=\"expose_minio\"\n          id=\"expose_minio\"\n          name=\"expose_minio\"\n          checked={exposeMinIO}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"exposeMinIO\", checked);\n          }}\n          label={\"Expose MiniO Service\"}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <FormSwitchWrapper\n          value=\"expose_console\"\n          id=\"expose_console\"\n          name=\"expose_console\"\n          checked={exposeConsole}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"exposeConsole\", checked);\n          }}\n          label={\"Expose Console Service\"}\n        />\n      </Grid>\n\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Additional Configurations</h3>\n        <span className={classes.descriptionText}>\n          Configure SecurityContext, Storage Classes & Storage size for Log\n          Search, Prometheus add-ons and your Tenant\n        </span>\n      </div>\n      <Grid item xs={12}>\n        <FormSwitchWrapper\n          value=\"tenantConfig\"\n          id=\"tenant_configuration\"\n          name=\"tenant_configuration\"\n          checked={tenantCustom}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"tenantCustom\", checked);\n          }}\n          label={\"Override Tenant defaults\"}\n        />\n      </Grid>\n      {tenantCustom && (\n        <Fragment>\n          <span className={classes.descriptionText}>\n            SecurityContext for MinIO\n          </span>\n          <br />\n          <br />\n          <Grid item xs={12}>\n            <div className={classes.multiContainer}>\n              <div>\n                <InputBoxWrapper\n                  type=\"number\"\n                  id=\"tenant_securityContext_runAsUser\"\n                  name=\"tenant_securityContext_runAsUser\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"tenantSecurityContext\", {\n                      ...tenantSecurityContext,\n                      runAsUser: e.target.value,\n                    });\n                    cleanValidation(\"tenant_securityContext_runAsUser\");\n                  }}\n                  label=\"Run As User\"\n                  value={tenantSecurityContext.runAsUser}\n                  required\n                  error={\n                    validationErrors[\"tenant_securityContext_runAsUser\"] || \"\"\n                  }\n                  min=\"0\"\n                />\n              </div>\n              <div>\n                <InputBoxWrapper\n                  type=\"number\"\n                  id=\"tenant_securityContext_runAsGroup\"\n                  name=\"tenant_securityContext_runAsGroup\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"tenantSecurityContext\", {\n                      ...tenantSecurityContext,\n                      runAsGroup: e.target.value,\n                    });\n                    cleanValidation(\"tenant_securityContext_runAsGroup\");\n                  }}\n                  label=\"Run As Group\"\n                  value={tenantSecurityContext.runAsGroup}\n                  required\n                  error={\n                    validationErrors[\"tenant_securityContext_runAsGroup\"] || \"\"\n                  }\n                  min=\"0\"\n                />\n              </div>\n              <div>\n                <InputBoxWrapper\n                  type=\"number\"\n                  id=\"tenant_securityContext_fsGroup\"\n                  name=\"tenant_securityContext_fsGroup\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"tenantSecurityContext\", {\n                      ...tenantSecurityContext,\n                      fsGroup: e.target.value,\n                    });\n                    cleanValidation(\"tenant_securityContext_fsGroup\");\n                  }}\n                  label=\"FsGroup\"\n                  value={tenantSecurityContext.fsGroup}\n                  required\n                  error={\n                    validationErrors[\"tenant_securityContext_fsGroup\"] || \"\"\n                  }\n                  min=\"0\"\n                />\n              </div>\n            </div>\n          </Grid>\n          <br />\n          <Grid item xs={12}>\n            <div className={classes.multiContainer}>\n              <FormSwitchWrapper\n                value=\"tenantSecurityContextRunAsNonRoot\"\n                id=\"tenant_securityContext_runAsNonRoot\"\n                name=\"tenant_securityContext_runAsNonRoot\"\n                checked={tenantSecurityContext.runAsNonRoot}\n                onChange={(e) => {\n                  const targetD = e.target;\n                  const checked = targetD.checked;\n                  updateField(\"tenantSecurityContext\", {\n                    ...tenantSecurityContext,\n                    runAsNonRoot: checked,\n                  });\n                }}\n                label={\"Do not run as Root\"}\n              />\n            </div>\n          </Grid>\n        </Fragment>\n      )}\n      <Grid item xs={12}>\n        <FormSwitchWrapper\n          value=\"logSearchConfig\"\n          id=\"log_search_configuration\"\n          name=\"log_search_configuration\"\n          checked={logSearchCustom}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"logSearchCustom\", checked);\n          }}\n          label={\"Override Log Search defaults\"}\n        />\n      </Grid>\n      {logSearchCustom && (\n        <Fragment>\n          <Grid item xs={12}>\n            <SelectWrapper\n              id=\"log_search_storage_class\"\n              name=\"log_search_storage_class\"\n              onChange={(e: SelectChangeEvent<string>) => {\n                updateField(\n                  \"logSearchSelectedStorageClass\",\n                  e.target.value as string\n                );\n              }}\n              label=\"Log Search Storage Class\"\n              value={logSearchSelectedStorageClass}\n              options={storageClasses}\n              disabled={storageClasses.length < 1}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <div className={classes.multiContainer}>\n              <div>\n                <InputBoxWrapper\n                  type=\"number\"\n                  id=\"log_search_volume_size\"\n                  name=\"log_search_volume_size\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"logSearchVolumeSize\", e.target.value);\n                    cleanValidation(\"log_search_volume_size\");\n                  }}\n                  label=\"Storage Size [Gi]\"\n                  value={logSearchVolumeSize}\n                  required\n                  error={validationErrors[\"log_search_volume_size\"] || \"\"}\n                  min=\"0\"\n                />\n              </div>\n            </div>\n          </Grid>\n          <Fragment>\n            <span className={classes.descriptionText}>\n              SecurityContext for LogSearch\n            </span>\n            <br />\n            <br />\n            <Grid item xs={12}>\n              <div className={classes.multiContainer}>\n                <div>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"logSearch_securityContext_runAsUser\"\n                    name=\"logSearch_securityContext_runAsUser\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"logSearchSecurityContext\", {\n                        ...logSearchSecurityContext,\n                        runAsUser: e.target.value,\n                      });\n                      cleanValidation(\"logSearch_securityContext_runAsUser\");\n                    }}\n                    label=\"Run As User\"\n                    value={logSearchSecurityContext.runAsUser}\n                    required\n                    error={\n                      validationErrors[\"logSearch_securityContext_runAsUser\"] ||\n                      \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n                <div>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"logSearch_securityContext_runAsGroup\"\n                    name=\"logSearch_securityContext_runAsGroup\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"logSearchSecurityContext\", {\n                        ...logSearchSecurityContext,\n                        runAsGroup: e.target.value,\n                      });\n                      cleanValidation(\"logSearch_securityContext_runAsGroup\");\n                    }}\n                    label=\"Run As Group\"\n                    value={logSearchSecurityContext.runAsGroup}\n                    required\n                    error={\n                      validationErrors[\n                        \"logSearch_securityContext_runAsGroup\"\n                      ] || \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n                <div>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"logSearch_securityContext_fsGroup\"\n                    name=\"logSearch_securityContext_fsGroup\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"logSearchSecurityContext\", {\n                        ...logSearchSecurityContext,\n                        fsGroup: e.target.value,\n                      });\n                      cleanValidation(\"logSearch_securityContext_fsGroup\");\n                    }}\n                    label=\"FsGroup\"\n                    value={logSearchSecurityContext.fsGroup}\n                    required\n                    error={\n                      validationErrors[\"logSearch_securityContext_fsGroup\"] ||\n                      \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n              </div>\n            </Grid>\n            <br />\n            <Grid item xs={12}>\n              <div className={classes.multiContainer}>\n                <FormSwitchWrapper\n                  value=\"logSearchSecurityContextRunAsNonRoot\"\n                  id=\"logSearch_securityContext_runAsNonRoot\"\n                  name=\"logSearch_securityContext_runAsNonRoot\"\n                  checked={logSearchSecurityContext.runAsNonRoot}\n                  onChange={(e) => {\n                    const targetD = e.target;\n                    const checked = targetD.checked;\n                    updateField(\"logSearchSecurityContext\", {\n                      ...logSearchSecurityContext,\n                      runAsNonRoot: checked,\n                    });\n                  }}\n                  label={\"Do not run as Root\"}\n                />\n              </div>\n            </Grid>\n          </Fragment>\n          <Fragment>\n            <span className={classes.descriptionText}>\n              SecurityContext for PostgreSQL\n            </span>\n            <br />\n            <br />\n            <Grid item xs={12}>\n              <div className={classes.multiContainer}>\n                <div>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"postgres_securityContext_runAsUser\"\n                    name=\"postgres_securityContext_runAsUser\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"logSearchPostgresSecurityContext\", {\n                        ...logSearchPostgresSecurityContext,\n                        runAsUser: e.target.value,\n                      });\n                      cleanValidation(\"postgres_securityContext_runAsUser\");\n                    }}\n                    label=\"Run As User\"\n                    value={logSearchPostgresSecurityContext.runAsUser}\n                    required\n                    error={\n                      validationErrors[\"postgres_securityContext_runAsUser\"] ||\n                      \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n                <div>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"postgres_securityContext_runAsGroup\"\n                    name=\"postgres_securityContext_runAsGroup\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"logSearchPostgresSecurityContext\", {\n                        ...logSearchPostgresSecurityContext,\n                        runAsGroup: e.target.value,\n                      });\n                      cleanValidation(\"postgres_securityContext_runAsGroup\");\n                    }}\n                    label=\"Run As Group\"\n                    value={logSearchPostgresSecurityContext.runAsGroup}\n                    required\n                    error={\n                      validationErrors[\"postgres_securityContext_runAsGroup\"] ||\n                      \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n                <div>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"postgres_securityContext_fsGroup\"\n                    name=\"postgres_securityContext_fsGroup\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"logSearchPostgresSecurityContext\", {\n                        ...logSearchPostgresSecurityContext,\n                        fsGroup: e.target.value,\n                      });\n                      cleanValidation(\"postgres_securityContext_fsGroup\");\n                    }}\n                    label=\"FsGroup\"\n                    value={logSearchPostgresSecurityContext.fsGroup}\n                    required\n                    error={\n                      validationErrors[\"postgres_securityContext_fsGroup\"] || \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n              </div>\n            </Grid>\n            <br />\n            <Grid item xs={12}>\n              <div className={classes.multiContainer}>\n                <FormSwitchWrapper\n                  value=\"postgresSecurityContextRunAsNonRoot\"\n                  id=\"postgres_securityContext_runAsNonRoot\"\n                  name=\"postgres_securityContext_runAsNonRoot\"\n                  checked={logSearchPostgresSecurityContext.runAsNonRoot}\n                  onChange={(e) => {\n                    const targetD = e.target;\n                    const checked = targetD.checked;\n                    updateField(\"logSearchPostgresSecurityContext\", {\n                      ...logSearchPostgresSecurityContext,\n                      runAsNonRoot: checked,\n                    });\n                  }}\n                  label={\"Do not run as Root\"}\n                />\n              </div>\n            </Grid>\n          </Fragment>\n        </Fragment>\n      )}\n      <Grid item xs={12}>\n        <FormSwitchWrapper\n          value=\"prometheusConfig\"\n          id=\"prometheus_configuration\"\n          name=\"prometheus_configuration\"\n          checked={prometheusCustom}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"prometheusCustom\", checked);\n          }}\n          label={\"Override Prometheus defaults\"}\n        />\n      </Grid>\n      {prometheusCustom && (\n        <Fragment>\n          <Grid item xs={12}>\n            <SelectWrapper\n              id=\"prometheus_storage_class\"\n              name=\"prometheus_storage_class\"\n              onChange={(e: SelectChangeEvent<string>) => {\n                updateField(\n                  \"prometheusSelectedStorageClass\",\n                  e.target.value as string\n                );\n              }}\n              label=\"Prometheus Storage Class\"\n              value={prometheusSelectedStorageClass}\n              options={storageClasses}\n              disabled={storageClasses.length < 1}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <div className={classes.multiContainer}>\n              <div>\n                <InputBoxWrapper\n                  type=\"number\"\n                  id=\"prometheus_volume_size\"\n                  name=\"prometheus_volume_size\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"prometheusVolumeSize\", e.target.value);\n                    cleanValidation(\"prometheus_volume_size\");\n                  }}\n                  label=\"Storage Size [Gi]\"\n                  value={prometheusVolumeSize}\n                  required\n                  error={validationErrors[\"prometheus_volume_size\"] || \"\"}\n                  min=\"0\"\n                />\n              </div>\n            </div>\n          </Grid>\n          <Fragment>\n            <span className={classes.descriptionText}>\n              SecurityContext for Prometheus\n            </span>\n            <br />\n            <br />\n            <Grid item xs={12}>\n              <div className={classes.multiContainer}>\n                <div>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"prometheus_securityContext_runAsUser\"\n                    name=\"prometheus_securityContext_runAsUser\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"prometheusSecurityContext\", {\n                        ...prometheusSecurityContext,\n                        runAsUser: e.target.value,\n                      });\n                      cleanValidation(\"prometheus_securityContext_runAsUser\");\n                    }}\n                    label=\"Run As User\"\n                    value={prometheusSecurityContext.runAsUser}\n                    required\n                    error={\n                      validationErrors[\n                        \"prometheus_securityContext_runAsUser\"\n                      ] || \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n                <div>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"prometheus_securityContext_runAsGroup\"\n                    name=\"prometheus_securityContext_runAsGroup\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"prometheusSecurityContext\", {\n                        ...prometheusSecurityContext,\n                        runAsGroup: e.target.value,\n                      });\n                      cleanValidation(\"prometheus_securityContext_runAsGroup\");\n                    }}\n                    label=\"Run As Group\"\n                    value={prometheusSecurityContext.runAsGroup}\n                    required\n                    error={\n                      validationErrors[\n                        \"prometheus_securityContext_runAsGroup\"\n                      ] || \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n                <div>\n                  <InputBoxWrapper\n                    type=\"number\"\n                    id=\"prometheus_securityContext_fsGroup\"\n                    name=\"prometheus_securityContext_fsGroup\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      updateField(\"prometheusSecurityContext\", {\n                        ...prometheusSecurityContext,\n                        fsGroup: e.target.value,\n                      });\n                      cleanValidation(\"prometheus_securityContext_fsGroup\");\n                    }}\n                    label=\"FsGroup\"\n                    value={prometheusSecurityContext.fsGroup}\n                    required\n                    error={\n                      validationErrors[\"prometheus_securityContext_fsGroup\"] ||\n                      \"\"\n                    }\n                    min=\"0\"\n                  />\n                </div>\n              </div>\n            </Grid>\n            <br />\n            <Grid item xs={12}>\n              <div className={classes.multiContainer}>\n                <FormSwitchWrapper\n                  value=\"prometheusSecurityContextRunAsNonRoot\"\n                  id=\"prometheus_securityContext_runAsNonRoot\"\n                  name=\"prometheus_securityContext_runAsNonRoot\"\n                  checked={prometheusSecurityContext.runAsNonRoot}\n                  onChange={(e) => {\n                    const targetD = e.target;\n                    const checked = targetD.checked;\n                    updateField(\"prometheusSecurityContext\", {\n                      ...prometheusSecurityContext,\n                      runAsNonRoot: checked,\n                    });\n                  }}\n                  label={\"Do not run as Root\"}\n                />\n              </div>\n            </Grid>\n          </Fragment>\n        </Fragment>\n      )}\n    </Paper>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  storageClasses: state.tenants.createTenant.storageClasses,\n  customImage: state.tenants.createTenant.fields.configure.customImage,\n  imageName: state.tenants.createTenant.fields.configure.imageName,\n  customDockerhub: state.tenants.createTenant.fields.configure.customDockerhub,\n  imageRegistry: state.tenants.createTenant.fields.configure.imageRegistry,\n  imageRegistryUsername:\n    state.tenants.createTenant.fields.configure.imageRegistryUsername,\n  imageRegistryPassword:\n    state.tenants.createTenant.fields.configure.imageRegistryPassword,\n  exposeMinIO: state.tenants.createTenant.fields.configure.exposeMinIO,\n  exposeConsole: state.tenants.createTenant.fields.configure.exposeConsole,\n  prometheusCustom:\n    state.tenants.createTenant.fields.configure.prometheusCustom,\n  tenantCustom: state.tenants.createTenant.fields.configure.tenantCustom,\n  logSearchCustom: state.tenants.createTenant.fields.configure.logSearchCustom,\n  logSearchVolumeSize:\n    state.tenants.createTenant.fields.configure.logSearchVolumeSize,\n  logSearchSizeFactor:\n    state.tenants.createTenant.fields.configure.logSearchSizeFactor,\n  prometheusVolumeSize:\n    state.tenants.createTenant.fields.configure.prometheusVolumeSize,\n  prometheusSizeFactor:\n    state.tenants.createTenant.fields.configure.prometheusSizeFactor,\n  logSearchSelectedStorageClass:\n    state.tenants.createTenant.fields.configure.logSearchSelectedStorageClass,\n  logSearchImage: state.tenants.createTenant.fields.configure.logSearchImage,\n  kesImage: state.tenants.createTenant.fields.configure.kesImage,\n  logSearchPostgresImage:\n    state.tenants.createTenant.fields.configure.logSearchPostgresImage,\n  logSearchPostgresInitImage:\n    state.tenants.createTenant.fields.configure.logSearchPostgresInitImage,\n  prometheusSelectedStorageClass:\n    state.tenants.createTenant.fields.configure.prometheusSelectedStorageClass,\n  prometheusImage: state.tenants.createTenant.fields.configure.prometheusImage,\n  prometheusSidecarImage:\n    state.tenants.createTenant.fields.configure.prometheusSidecarImage,\n  prometheusInitImage:\n    state.tenants.createTenant.fields.configure.prometheusInitImage,\n  selectedStorageClass:\n    state.tenants.createTenant.fields.nameTenant.selectedStorageClass,\n  tenantSecurityContext:\n    state.tenants.createTenant.fields.configure.tenantSecurityContext,\n  logSearchSecurityContext:\n    state.tenants.createTenant.fields.configure.logSearchSecurityContext,\n  logSearchPostgresSecurityContext:\n    state.tenants.createTenant.fields.configure\n      .logSearchPostgresSecurityContext,\n  prometheusSecurityContext:\n    state.tenants.createTenant.fields.configure.prometheusSecurityContext,\n});\n\nconst connector = connect(mapState, {\n  updateAddField,\n  isPageValid,\n});\n\nexport default withStyles(styles)(connector(Configure));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, IconButton, Paper, Tooltip, Typography } from \"@mui/material\";\nimport CasinoIcon from \"@mui/icons-material/Casino\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport {\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { isPageValid, updateAddField } from \"../../actions\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport { AppState } from \"../../../../../store\";\nimport { clearValidationError, getRandomString } from \"../../utils\";\nimport RadioGroupSelector from \"../../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport AddIcon from \"@mui/icons-material/Add\";\n\ninterface IIdentityProviderProps {\n  classes: any;\n  idpSelection: string;\n  accessKeys: string[];\n  secretKeys: string[];\n  openIDConfigurationURL: string;\n  openIDClientID: string;\n  openIDSecretID: string;\n  openIDCallbackURL: string;\n  openIDClaimName: string;\n  openIDScopes: string;\n  ADURL: string;\n  ADSkipTLS: boolean;\n  ADServerInsecure: boolean;\n  ADUserNameSearchFilter: string;\n  ADGroupSearchBaseDN: string;\n  ADGroupSearchFilter: string;\n  ADGroupNameAttribute: string;\n  ADUserDNs: string[];\n  ADUserNameFormat: string;\n  ADLookupBindDN: string;\n  ADLookupBindPassword: string;\n  ADUserDNSearchBaseDN: string;\n  ADUserDNSearchFilter: string;\n  ADServerStartTLS: boolean;\n  updateAddField: typeof updateAddField;\n  isPageValid: typeof isPageValid;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    buttonContainer: {\n      textAlign: \"right\",\n    },\n    shortened: {\n      gridTemplateColumns: \"auto auto 50px 50px\",\n      display: \"grid\",\n      gridGap: 20,\n    },\n    buttonTray: {\n      gridTemplateColumns: \"auto auto 10px 10px\",\n      display: \"grid\",\n      gridGap: 0,\n      height: 16,\n      marginTop: 12,\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst IdentityProvider = ({\n  classes,\n  idpSelection,\n  accessKeys,\n  secretKeys,\n  openIDConfigurationURL,\n  openIDClientID,\n  openIDSecretID,\n  openIDCallbackURL,\n  openIDClaimName,\n  openIDScopes,\n  ADURL,\n  ADSkipTLS,\n  ADServerInsecure,\n  ADUserNameSearchFilter,\n  ADGroupSearchBaseDN,\n  ADGroupSearchFilter,\n  ADGroupNameAttribute,\n  ADUserDNs,\n  ADUserNameFormat,\n  ADLookupBindDN,\n  ADLookupBindPassword,\n  ADUserDNSearchBaseDN,\n  ADUserDNSearchFilter,\n  ADServerStartTLS,\n  updateAddField,\n  isPageValid,\n}: IIdentityProviderProps) => {\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      updateAddField(\"identityProvider\", field, value);\n    },\n    [updateAddField]\n  );\n  const updateUserField = (index: number, value: string) => {\n    const newUserField = [...accessKeys];\n    newUserField[index] = value;\n    updateField(\"accessKeys\", newUserField);\n  };\n  const updatePwordField = (index: number, value: string) => {\n    const newUserField = [...secretKeys];\n    newUserField[index] = value;\n    updateField(\"secretKeys\", newUserField);\n  };\n  const updateADUserField = (index: number, value: string) => {\n    const newADUserDNsField = [...ADUserDNs];\n    newADUserDNsField[index] = value;\n    updateField(\"ADUserDNs\", newADUserDNsField);\n  };\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  // Validation\n\n  useEffect(() => {\n    let customIDPValidation: IValidation[] = [];\n\n    if (idpSelection === \"Built-in\") {\n      customIDPValidation = [...customIDPValidation];\n      for (var i = 0; i < accessKeys.length; i++) {\n        customIDPValidation.push({\n          fieldKey: `accesskey-${i.toString()}`,\n          required: true,\n          value: accessKeys[i],\n          pattern: /^[a-zA-Z0-9-]{8,63}$/,\n          customPatternMessage: \"Keys must be at least length 8\",\n        });\n        customIDPValidation.push({\n          fieldKey: `secretkey-${i.toString()}`,\n          required: true,\n          value: secretKeys[i],\n          pattern: /^[a-zA-Z0-9-]{8,63}$/,\n          customPatternMessage: \"Keys must be at least length 8\",\n        });\n      }\n    }\n\n    if (idpSelection === \"OpenID\") {\n      customIDPValidation = [\n        ...customIDPValidation,\n        {\n          fieldKey: \"openID_CONFIGURATION_URL\",\n          required: true,\n          value: openIDConfigurationURL,\n        },\n        {\n          fieldKey: \"openID_clientID\",\n          required: true,\n          value: openIDClientID,\n        },\n        {\n          fieldKey: \"openID_secretID\",\n          required: true,\n          value: openIDSecretID,\n        },\n        {\n          fieldKey: \"openID_claimName\",\n          required: true,\n          value: openIDClaimName,\n        },\n      ];\n    }\n\n    if (idpSelection === \"AD\") {\n      customIDPValidation = [\n        ...customIDPValidation,\n        {\n          fieldKey: \"AD_URL\",\n          required: true,\n          value: ADURL,\n        },\n      ];\n      // validate user DNs\n      for (let i = 0; i < ADUserDNs.length; i++) {\n        customIDPValidation.push({\n          fieldKey: `ad-userdn-${i.toString()}`,\n          required: true,\n          value: ADUserDNs[i],\n        });\n      }\n    }\n\n    const commonVal = commonFormValidation(customIDPValidation);\n\n    isPageValid(\"identityProvider\", Object.keys(commonVal).length === 0);\n\n    setValidationErrors(commonVal);\n  }, [\n    idpSelection,\n    accessKeys,\n    secretKeys,\n    openIDClientID,\n    openIDSecretID,\n    ADURL,\n    ADUserNameSearchFilter,\n    ADGroupSearchBaseDN,\n    ADGroupSearchFilter,\n    ADGroupNameAttribute,\n    ADUserDNs,\n    isPageValid,\n    openIDConfigurationURL,\n    openIDClaimName,\n  ]);\n  let inputs = null;\n  if (idpSelection === \"Built-in\") {\n    inputs = accessKeys.map((_, index) => {\n      return (\n        <Fragment key={`identityField-${index.toString()}`}>\n          <div className={classes.shortened}>\n            <InputBoxWrapper\n              id={`accesskey-${index.toString()}`}\n              label={\"\"}\n              placeholder={\"Access Key\"}\n              name={`accesskey-${index.toString()}`}\n              value={accessKeys[index]}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateUserField(index, e.target.value);\n                cleanValidation(`accesskey-${index.toString()}`);\n              }}\n              index={index}\n              key={`csv-accesskey-${index.toString()}`}\n              error={validationErrors[`accesskey-${index.toString()}`] || \"\"}\n            />\n            <InputBoxWrapper\n              id={`secretkey-${index.toString()}`}\n              label={\"\"}\n              placeholder={\"Secret Key\"}\n              name={`secretkey-${index.toString()}`}\n              value={secretKeys[index]}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updatePwordField(index, e.target.value);\n                cleanValidation(`secretkey-${index.toString()}`);\n              }}\n              index={index}\n              key={`csv-secretkey-${index.toString()}`}\n              error={validationErrors[`secretkey-${index.toString()}`] || \"\"}\n            />\n            <div className={classes.buttonTray}>\n              <Tooltip title=\"Add User\" aria-label=\"add\">\n                <IconButton\n                  size={\"small\"}\n                  onClick={() => {\n                    accessKeys.push(\"\");\n                    secretKeys.push(\"\");\n                    updateUserField(accessKeys.length - 1, \"\");\n                    updatePwordField(secretKeys.length - 1, \"\");\n                  }}\n                >\n                  <AddIcon />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Randomize Credentials\" aria-label=\"add\">\n                <IconButton\n                  onClick={() => {\n                    updateUserField(index, getRandomString(16));\n                    updatePwordField(index, getRandomString(32));\n                  }}\n                  size={\"small\"}\n                >\n                  <CasinoIcon />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Remove\" aria-label=\"add\">\n                <IconButton\n                  size={\"small\"}\n                  style={{ marginLeft: 16 }}\n                  onClick={() => {\n                    if (accessKeys.length > 1) {\n                      accessKeys.splice(index, 1);\n                      secretKeys.splice(index, 1);\n                      updateUserField(\n                        accessKeys.length - 1,\n                        accessKeys[accessKeys.length - 1]\n                      );\n                    }\n                  }}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </Tooltip>\n            </div>\n          </div>\n        </Fragment>\n      );\n    });\n  }\n  if (idpSelection === \"AD\") {\n    inputs = ADUserDNs.map((_, index) => {\n      return (\n        <Fragment key={`identityField-${index.toString()}`}>\n          <div className={classes.shortened}>\n            <InputBoxWrapper\n              id={`ad-userdn-${index.toString()}`}\n              label={\"\"}\n              placeholder=\"\"\n              name={`ad-userdn-${index.toString()}`}\n              value={ADUserDNs[index]}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateADUserField(index, e.target.value);\n                cleanValidation(`ad-userdn-${index.toString()}`);\n              }}\n              index={index}\n              key={`csv-ad-userdn-${index.toString()}`}\n              error={validationErrors[`ad-userdn-${index.toString()}`] || \"\"}\n            />\n            <div className={classes.buttonTray}>\n              <Tooltip title=\"Add User\" aria-label=\"add\">\n                <IconButton\n                  size={\"small\"}\n                  onClick={() => {\n                    ADUserDNs.push(\"\");\n                    updateADUserField(ADUserDNs.length - 1, \"\");\n                  }}\n                >\n                  <AddIcon />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Remove\" aria-label=\"add\">\n                <IconButton\n                  size={\"small\"}\n                  style={{ marginLeft: 16 }}\n                  onClick={() => {\n                    if (ADUserDNs.length > 1) {\n                      ADUserDNs.splice(index, 1);\n                      updateUserField(\n                        ADUserDNs.length - 1,\n                        ADUserDNs[ADUserDNs.length - 1]\n                      );\n                    }\n                  }}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </Tooltip>\n            </div>\n          </div>\n        </Fragment>\n      );\n    });\n  }\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Identity Provider</h3>\n        <span className={classes.descriptionText}>\n          Access to the tenant can be controlled via an external Identity\n          Manager.\n        </span>\n      </div>\n      <Grid item xs={12}>\n        <RadioGroupSelector\n          currentSelection={idpSelection}\n          id=\"idp-options\"\n          name=\"idp-options\"\n          label=\"Protocol\"\n          onChange={(e) => {\n            updateField(\"idpSelection\", e.target.value);\n          }}\n          selectorOptions={[\n            { label: \"Built-in\", value: \"Built-in\" },\n            { label: \"OpenID\", value: \"OpenID\" },\n            { label: \"Active Directory\", value: \"AD\" },\n          ]}\n        />\n      </Grid>\n      {idpSelection === \"Built-in\" && (\n        <Fragment>\n          Add additional users\n          {inputs}\n        </Fragment>\n      )}\n      {idpSelection === \"OpenID\" && (\n        <Fragment>\n          <Grid item xs={12}>\n            <InputBoxWrapper\n              id=\"openID_CONFIGURATION_URL\"\n              name=\"openID_CONFIGURATION_URL\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"openIDConfigurationURL\", e.target.value);\n                cleanValidation(\"openID_CONFIGURATION_URL\");\n              }}\n              label=\"Configuration URL\"\n              value={openIDConfigurationURL}\n              placeholder=\"https://your-identity-provider.com/.well-known/openid-configuration\"\n              error={validationErrors[\"openID_CONFIGURATION_URL\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <InputBoxWrapper\n              id=\"openID_clientID\"\n              name=\"openID_clientID\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"openIDClientID\", e.target.value);\n                cleanValidation(\"openID_clientID\");\n              }}\n              label=\"Client ID\"\n              value={openIDClientID}\n              error={validationErrors[\"openID_clientID\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <InputBoxWrapper\n              id=\"openID_secretID\"\n              name=\"openID_secretID\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"openIDSecretID\", e.target.value);\n                cleanValidation(\"openID_secretID\");\n              }}\n              label=\"Secret ID\"\n              value={openIDSecretID}\n              error={validationErrors[\"openID_secretID\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <InputBoxWrapper\n              id=\"openID_callbackURL\"\n              name=\"openID_callbackURL\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"openIDCallbackURL\", e.target.value);\n                cleanValidation(\"openID_callbackURL\");\n              }}\n              label=\"Callback URL\"\n              value={openIDCallbackURL}\n              placeholder=\"https://your-console-endpoint:9443/oauth_callback\"\n              error={validationErrors[\"openID_callbackURL\"] || \"\"}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <InputBoxWrapper\n              id=\"openID_claimName\"\n              name=\"openID_claimName\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"openIDClaimName\", e.target.value);\n                cleanValidation(\"openID_claimName\");\n              }}\n              label=\"Claim Name\"\n              value={openIDClaimName}\n              error={validationErrors[\"openID_claimName\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <InputBoxWrapper\n              id=\"openID_scopes\"\n              name=\"openID_scopes\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"openIDScopes\", e.target.value);\n                cleanValidation(\"openID_scopes\");\n              }}\n              label=\"Scopes\"\n              value={openIDScopes}\n            />\n          </Grid>\n        </Fragment>\n      )}\n      {idpSelection === \"AD\" && (\n        <Fragment>\n          <Grid item xs={12}>\n            <InputBoxWrapper\n              id=\"AD_URL\"\n              name=\"AD_URL\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"ADURL\", e.target.value);\n                cleanValidation(\"AD_URL\");\n              }}\n              label=\"LDAP Server Address\"\n              value={ADURL}\n              placeholder=\"ldap-server:636\"\n              error={validationErrors[\"AD_URL\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <FormSwitchWrapper\n              value=\"ad_skipTLS\"\n              id=\"ad_skipTLS\"\n              name=\"ad_skipTLS\"\n              checked={ADSkipTLS}\n              onChange={(e) => {\n                const targetD = e.target;\n                const checked = targetD.checked;\n                updateField(\"ADSkipTLS\", checked);\n              }}\n              label={\"Skip TLS Verification\"}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <FormSwitchWrapper\n              value=\"ad_serverInsecure\"\n              id=\"ad_serverInsecure\"\n              name=\"ad_serverInsecure\"\n              checked={ADServerInsecure}\n              onChange={(e) => {\n                const targetD = e.target;\n                const checked = targetD.checked;\n                updateField(\"ADServerInsecure\", checked);\n              }}\n              label={\"Server Insecure\"}\n            />\n          </Grid>\n          {ADServerInsecure ? (\n            <Grid item xs={12}>\n              <Typography\n                className={classes.error}\n                variant=\"caption\"\n                display=\"block\"\n                gutterBottom\n              >\n                Warning: All traffic with Active Directory will be unencrypted\n              </Typography>\n              <br />\n            </Grid>\n          ) : null}\n          <Grid item xs={12}>\n            <FormSwitchWrapper\n              value=\"ad_serverStartTLS\"\n              id=\"ad_serverStartTLS\"\n              name=\"ad_serverStartTLS\"\n              checked={ADServerStartTLS}\n              onChange={(e) => {\n                const targetD = e.target;\n                const checked = targetD.checked;\n                updateField(\"ADServerStartTLS\", checked);\n              }}\n              label={\"Start TLS connection to AD/LDAP server\"}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <InputBoxWrapper\n              id=\"ad_userNameFormat\"\n              name=\"ad_userNameFormat\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"ADUserNameFormat\", e.target.value);\n              }}\n              label=\"Username Format\"\n              value={ADUserNameFormat}\n              placeholder=\"uid=%s,cn=accounts,dc=myldapserver,dc=com\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <InputBoxWrapper\n              id=\"ad_userNameFilter\"\n              name=\"ad_userNameFilter\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"ADUserNameSearchFilter\", e.target.value);\n              }}\n              label=\"Username Search Filter\"\n              value={ADUserNameSearchFilter}\n              placeholder=\"(|(objectclass=posixAccount)(uid=%s))\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <InputBoxWrapper\n              id=\"ad_groupSearchBaseDN\"\n              name=\"ad_groupSearchBaseDN\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"ADGroupSearchBaseDN\", e.target.value);\n              }}\n              label=\"Group Search Base DN\"\n              value={ADGroupSearchBaseDN}\n              placeholder=\"ou=hwengg,dc=min,dc=io;ou=swengg,dc=min,dc=io\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <InputBoxWrapper\n              id=\"ad_groupSearchFilter\"\n              name=\"ad_groupSearchFilter\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"ADGroupSearchFilter\", e.target.value);\n              }}\n              label=\"Group Search Filter\"\n              value={ADGroupSearchFilter}\n              placeholder=\"(&(objectclass=groupOfNames)(member=%s))\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <InputBoxWrapper\n              id=\"ad_groupNameAttribute\"\n              name=\"ad_groupNameAttribute\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"ADGroupNameAttribute\", e.target.value);\n              }}\n              label=\"Group Name Attribute\"\n              value={ADGroupNameAttribute}\n              placeholder=\"cn\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <InputBoxWrapper\n              id=\"ad_lookupBindDN\"\n              name=\"ad_lookupBindDN\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"ADLookupBindDN\", e.target.value);\n              }}\n              label=\"Lookup Bind DN\"\n              value={ADLookupBindDN}\n              placeholder=\"cn=admin,dc=min,dc=io\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <InputBoxWrapper\n              id=\"ad_lookupBindPassword\"\n              name=\"ad_lookupBindPassword\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"ADLookupBindPassword\", e.target.value);\n              }}\n              label=\"Lookup Bind Password\"\n              value={ADLookupBindPassword}\n              placeholder=\"admin\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <InputBoxWrapper\n              id=\"ad_userDNSearchBaseDN\"\n              name=\"ad_userDNSearchBaseDN\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"ADUserDNSearchBaseDN\", e.target.value);\n              }}\n              label=\"User DN Search Base DN\"\n              value={ADUserDNSearchBaseDN}\n              placeholder=\"dc=min,dc=io\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <InputBoxWrapper\n              id=\"ad_userDNSearchFilter\"\n              name=\"ad_userDNSearchFilter\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"ADUserDNSearchFilter\", e.target.value);\n              }}\n              label=\"User DN Search Filter\"\n              value={ADUserDNSearchFilter}\n              placeholder=\"(uid=%s)\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            List of user DNs (Distinguished Names) to be Tenant Administrators\n            {inputs}\n          </Grid>\n        </Fragment>\n      )}\n    </Paper>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  idpSelection: state.tenants.createTenant.fields.identityProvider.idpSelection,\n  accessKeys: state.tenants.createTenant.fields.identityProvider.accessKeys,\n  secretKeys: state.tenants.createTenant.fields.identityProvider.secretKeys,\n  openIDConfigurationURL:\n    state.tenants.createTenant.fields.identityProvider.openIDConfigurationURL,\n  openIDClientID:\n    state.tenants.createTenant.fields.identityProvider.openIDClientID,\n  openIDSecretID:\n    state.tenants.createTenant.fields.identityProvider.openIDSecretID,\n  openIDCallbackURL:\n    state.tenants.createTenant.fields.identityProvider.openIDCallbackURL,\n  openIDClaimName:\n    state.tenants.createTenant.fields.identityProvider.openIDClaimName,\n  openIDScopes: state.tenants.createTenant.fields.identityProvider.openIDScopes,\n  ADURL: state.tenants.createTenant.fields.identityProvider.ADURL,\n  ADSkipTLS: state.tenants.createTenant.fields.identityProvider.ADSkipTLS,\n  ADServerInsecure:\n    state.tenants.createTenant.fields.identityProvider.ADServerInsecure,\n  ADUserNameSearchFilter:\n    state.tenants.createTenant.fields.identityProvider.ADUserNameSearchFilter,\n  ADGroupSearchBaseDN:\n    state.tenants.createTenant.fields.identityProvider.ADGroupSearchBaseDN,\n  ADGroupSearchFilter:\n    state.tenants.createTenant.fields.identityProvider.ADGroupSearchFilter,\n  ADGroupNameAttribute:\n    state.tenants.createTenant.fields.identityProvider.ADGroupNameAttribute,\n  ADUserDNs: state.tenants.createTenant.fields.identityProvider.ADUserDNs,\n  ADUserNameFormat:\n    state.tenants.createTenant.fields.identityProvider.ADUserNameFormat,\n  ADLookupBindDN:\n    state.tenants.createTenant.fields.identityProvider.ADLookupBindDN,\n  ADLookupBindPassword:\n    state.tenants.createTenant.fields.identityProvider.ADLookupBindPassword,\n  ADUserDNSearchBaseDN:\n    state.tenants.createTenant.fields.identityProvider.ADUserDNSearchBaseDN,\n  ADUserDNSearchFilter:\n    state.tenants.createTenant.fields.identityProvider.ADUserDNSearchFilter,\n  ADServerStartTLS:\n    state.tenants.createTenant.fields.identityProvider.ADServerStartTLS,\n});\n\nconst connector = connect(mapState, {\n  updateAddField,\n  isPageValid,\n});\n\nexport default withStyles(styles)(connector(IdentityProvider));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useCallback, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Button, Divider, Grid, Paper, Typography } from \"@mui/material\";\nimport {\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport {\n  updateAddField,\n  isPageValid,\n  addFileToCaCertificates,\n  deleteCaCertificate,\n  addCaCertificate,\n  addKeyPair,\n  addFileToKeyPair,\n  deleteKeyPair,\n} from \"../../actions\";\nimport { AppState } from \"../../../../../store\";\nimport { KeyPair } from \"../../ListTenants/utils\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport FileSelector from \"../../../Common/FormComponents/FileSelector/FileSelector\";\n\ninterface ISecurityProps {\n  classes: any;\n  enableTLS: boolean;\n  enableAutoCert: boolean;\n  enableCustomCerts: boolean;\n  minioCertificates: KeyPair[];\n  caCertificates: KeyPair[];\n  updateAddField: typeof updateAddField;\n  isPageValid: typeof isPageValid;\n  addFileToCaCertificates: typeof addFileToCaCertificates;\n  deleteCaCertificate: typeof deleteCaCertificate;\n  addCaCertificate: typeof addCaCertificate;\n  addKeyPair: typeof addKeyPair;\n  addFileToKeyPair: typeof addFileToKeyPair;\n  deleteKeyPair: typeof deleteKeyPair;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    buttonContainer: {\n      textAlign: \"right\",\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst Security = ({\n  classes,\n  enableTLS,\n  enableAutoCert,\n  enableCustomCerts,\n  minioCertificates,\n  caCertificates,\n  updateAddField,\n  isPageValid,\n  addFileToCaCertificates,\n  deleteCaCertificate,\n  addCaCertificate,\n  addKeyPair,\n  addFileToKeyPair,\n  deleteKeyPair,\n}: ISecurityProps) => {\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      updateAddField(\"security\", field, value);\n    },\n    [updateAddField]\n  );\n\n  // Validation\n\n  useEffect(() => {\n    if (!enableTLS) {\n      isPageValid(\"security\", true);\n      return;\n    }\n    if (enableAutoCert) {\n      isPageValid(\"security\", true);\n      return;\n    }\n    if (enableCustomCerts) {\n      isPageValid(\"security\", true);\n      return;\n    }\n    isPageValid(\"security\", false);\n  }, [enableTLS, enableAutoCert, enableCustomCerts, isPageValid]);\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Security</h3>\n      </div>\n      <Grid item xs={12}>\n        <FormSwitchWrapper\n          value=\"enableTLS\"\n          id=\"enableTLS\"\n          name=\"enableTLS\"\n          checked={enableTLS}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"enableTLS\", checked);\n          }}\n          label={\"Enable TLS\"}\n        />\n        Enable TLS for the tenant, this is required for Encryption Configuration\n        {enableTLS && (\n          <Fragment>\n            <br />\n            <br />\n            <Typography variant=\"caption\" display=\"block\" gutterBottom>\n              AutoCert: MinIO Operator will generate all TLS certificates\n              automatically\n            </Typography>\n            <Typography variant=\"caption\" display=\"block\" gutterBottom>\n              Custom certificates: Allow user to provide your own certificates\n            </Typography>\n            <br />\n          </Fragment>\n        )}\n      </Grid>\n      {enableTLS && (\n        <Fragment>\n          <Grid item xs={12}>\n            <FormSwitchWrapper\n              value=\"enableAutoCert\"\n              id=\"enableAutoCert\"\n              name=\"enableAutoCert\"\n              checked={enableAutoCert}\n              onChange={(e) => {\n                const targetD = e.target;\n                const checked = targetD.checked;\n\n                updateField(\"enableAutoCert\", checked);\n              }}\n              label={\"Enable AutoCert\"}\n            />\n            <FormSwitchWrapper\n              value=\"enableCustomCerts\"\n              id=\"enableCustomCerts\"\n              name=\"enableCustomCerts\"\n              checked={enableCustomCerts}\n              onChange={(e) => {\n                const targetD = e.target;\n                const checked = targetD.checked;\n\n                updateField(\"enableCustomCerts\", checked);\n              }}\n              label={\"Custom Certificates\"}\n            />\n          </Grid>\n          {enableCustomCerts && (\n            <Fragment>\n              <Grid container>\n                <Grid item xs={12}>\n                  <Typography variant=\"overline\" display=\"block\" gutterBottom>\n                    MinIO Certificates\n                  </Typography>\n                </Grid>\n                {minioCertificates.map((keyPair: KeyPair) => (\n                  <Fragment key={keyPair.id}>\n                    <Grid item xs={5}>\n                      <FileSelector\n                        onChange={(encodedValue, fileName) => {\n                          addFileToKeyPair(\n                            keyPair.id,\n                            \"cert\",\n                            fileName,\n                            encodedValue\n                          );\n                        }}\n                        accept=\".cer,.crt,.cert,.pem\"\n                        id=\"tlsCert\"\n                        name=\"tlsCert\"\n                        label=\"Cert\"\n                        value={keyPair.cert}\n                      />\n                    </Grid>\n                    <Grid item xs={5}>\n                      <FileSelector\n                        onChange={(encodedValue, fileName) => {\n                          addFileToKeyPair(\n                            keyPair.id,\n                            \"key\",\n                            fileName,\n                            encodedValue\n                          );\n                        }}\n                        accept=\".key,.pem\"\n                        id=\"tlsKey\"\n                        name=\"tlsKey\"\n                        label=\"Key\"\n                        value={keyPair.key}\n                      />\n                    </Grid>\n                    <Grid item xs={1}>\n                      <Button\n                        onClick={() => {\n                          deleteKeyPair(keyPair.id);\n                        }}\n                        color=\"secondary\"\n                      >\n                        Remove\n                      </Button>\n                    </Grid>\n                  </Fragment>\n                ))}\n                <Grid item xs={12}>\n                  <Button onClick={addKeyPair} color=\"primary\">\n                    Add More\n                  </Button>\n                </Grid>\n              </Grid>\n              <Grid container>\n                <Grid item xs={12}>\n                  <br />\n                  <Divider />\n                  <br />\n                </Grid>\n              </Grid>\n              <Grid container>\n                <Grid item xs={12}>\n                  <Typography variant=\"overline\" display=\"block\" gutterBottom>\n                    MinIO CA Certificates\n                  </Typography>\n                </Grid>\n                {caCertificates.map((keyPair: KeyPair) => (\n                  <Fragment key={keyPair.id}>\n                    <Grid item xs={10}>\n                      <FileSelector\n                        onChange={(encodedValue, fileName) => {\n                          addFileToCaCertificates(\n                            keyPair.id,\n                            \"cert\",\n                            fileName,\n                            encodedValue\n                          );\n                        }}\n                        accept=\".cer,.crt,.cert,.pem\"\n                        id=\"tlsCert\"\n                        name=\"tlsCert\"\n                        label=\"Cert\"\n                        value={keyPair.cert}\n                      />\n                    </Grid>\n                    <Grid item xs={1}>\n                      <Button\n                        onClick={() => {\n                          deleteCaCertificate(keyPair.id);\n                        }}\n                        color=\"secondary\"\n                      >\n                        Remove\n                      </Button>\n                    </Grid>\n                  </Fragment>\n                ))}\n                <Grid item xs={12}>\n                  <Button onClick={addCaCertificate} color=\"primary\">\n                    Add More\n                  </Button>\n                </Grid>\n              </Grid>\n            </Fragment>\n          )}\n        </Fragment>\n      )}\n    </Paper>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  enableTLS: state.tenants.createTenant.fields.security.enableTLS,\n  enableAutoCert: state.tenants.createTenant.fields.security.enableAutoCert,\n  enableCustomCerts:\n    state.tenants.createTenant.fields.security.enableCustomCerts,\n  minioCertificates: state.tenants.createTenant.certificates.minioCertificates,\n  caCertificates: state.tenants.createTenant.certificates.caCertificates,\n});\n\nconst connector = connect(mapState, {\n  updateAddField,\n  isPageValid,\n  addFileToCaCertificates,\n  deleteCaCertificate,\n  addCaCertificate,\n  addKeyPair,\n  addFileToKeyPair,\n  deleteKeyPair,\n});\n\nexport default withStyles(styles)(connector(Security));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useState, useEffect, useCallback } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Paper, Typography } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  updateAddField,\n  isPageValid,\n  addFileServerCert,\n  addFileClientCert,\n  addFileVaultCert,\n  addFileVaultCa,\n  addFileGemaltoCa,\n} from \"../../actions\";\nimport {\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { AppState } from \"../../../../../store\";\nimport { clearValidationError } from \"../../utils\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport FileSelector from \"../../../Common/FormComponents/FileSelector/FileSelector\";\nimport RadioGroupSelector from \"../../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport { KeyPair } from \"../../ListTenants/utils\";\nimport { ISecurityContext } from \"../../types\";\n\ninterface IEncryptionProps {\n  classes: any;\n  updateAddField: typeof updateAddField;\n  isPageValid: typeof isPageValid;\n  addFileServerCert: typeof addFileServerCert;\n  addFileClientCert: typeof addFileClientCert;\n  addFileVaultCert: typeof addFileVaultCert;\n  addFileVaultCa: typeof addFileVaultCa;\n  addFileGemaltoCa: typeof addFileGemaltoCa;\n  enableEncryption: boolean;\n  encryptionType: string;\n  gemaltoEndpoint: string;\n  gemaltoToken: string;\n  gemaltoDomain: string;\n  gemaltoRetry: string;\n  awsEndpoint: string;\n  awsRegion: string;\n  awsKMSKey: string;\n  awsAccessKey: string;\n  awsSecretKey: string;\n  awsToken: string;\n  vaultEndpoint: string;\n  vaultEngine: string;\n  vaultNamespace: string;\n  vaultPrefix: string;\n  vaultAppRoleEngine: string;\n  vaultId: string;\n  vaultSecret: string;\n  vaultRetry: string;\n  vaultPing: string;\n  azureEndpoint: string;\n  azureTenantID: string;\n  azureClientID: string;\n  azureClientSecret: string;\n  gcpProjectID: string;\n  gcpEndpoint: string;\n  gcpClientEmail: string;\n  gcpClientID: string;\n  gcpPrivateKeyID: string;\n  gcpPrivateKey: string;\n  enableCustomCertsForKES: boolean;\n  enableAutoCert: boolean;\n  enableTLS: boolean;\n  enableCustomCerts: boolean;\n  minioCertificates: KeyPair[];\n  serverCertificate: KeyPair;\n  clientCertificate: KeyPair;\n  vaultCertificate: KeyPair;\n  vaultCA: KeyPair;\n  gemaltoCA: KeyPair;\n  kesSecurityContext: ISecurityContext;\n  replicas: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    buttonContainer: {\n      textAlign: \"right\",\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst Encryption = ({\n  classes,\n  updateAddField,\n  isPageValid,\n  addFileServerCert,\n  addFileClientCert,\n  addFileVaultCert,\n  addFileVaultCa,\n  addFileGemaltoCa,\n  enableEncryption,\n  enableCustomCerts,\n  encryptionType,\n  gemaltoEndpoint,\n  gemaltoToken,\n  gemaltoDomain,\n  gemaltoRetry,\n  awsEndpoint,\n  awsRegion,\n  awsKMSKey,\n  awsAccessKey,\n  awsSecretKey,\n  awsToken,\n  vaultEndpoint,\n  vaultEngine,\n  vaultNamespace,\n  vaultPrefix,\n  vaultAppRoleEngine,\n  vaultId,\n  vaultSecret,\n  vaultRetry,\n  vaultPing,\n  azureEndpoint,\n  azureTenantID,\n  azureClientID,\n  azureClientSecret,\n  gcpProjectID,\n  gcpEndpoint,\n  gcpClientEmail,\n  gcpClientID,\n  gcpPrivateKeyID,\n  gcpPrivateKey,\n  enableCustomCertsForKES,\n  enableAutoCert,\n  enableTLS,\n  minioCertificates,\n  serverCertificate,\n  clientCertificate,\n  vaultCertificate,\n  vaultCA,\n  gemaltoCA,\n  kesSecurityContext,\n  replicas,\n}: IEncryptionProps) => {\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  let encryptionAvailable = false;\n  if (\n    enableTLS &&\n    (enableAutoCert ||\n      (minioCertificates &&\n        minioCertificates.filter(\n          (item) => item.encoded_key && item.encoded_cert\n        ).length > 0))\n  ) {\n    encryptionAvailable = true;\n  }\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      updateAddField(\"encryption\", field, value);\n    },\n    [updateAddField]\n  );\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  // Validation\n  useEffect(() => {\n    let encryptionValidation: IValidation[] = [];\n\n    if (enableEncryption) {\n      encryptionValidation = [\n        ...encryptionValidation,\n        {\n          fieldKey: \"replicas\",\n          required: true,\n          value: replicas,\n          customValidation: parseInt(replicas) < 1,\n          customValidationMessage: \"Replicas needs to be 1 or greater\",\n        },\n        {\n          fieldKey: \"kes_securityContext_runAsUser\",\n          required: true,\n          value: kesSecurityContext.runAsUser,\n          customValidation:\n            kesSecurityContext.runAsUser === \"\" ||\n            parseInt(kesSecurityContext.runAsUser) < 0,\n          customValidationMessage: `runAsUser must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"kes_securityContext_runAsGroup\",\n          required: true,\n          value: kesSecurityContext.runAsGroup,\n          customValidation:\n            kesSecurityContext.runAsGroup === \"\" ||\n            parseInt(kesSecurityContext.runAsGroup) < 0,\n          customValidationMessage: `runAsGroup must be present and be 0 or more`,\n        },\n        {\n          fieldKey: \"kes_securityContext_fsGroup\",\n          required: true,\n          value: kesSecurityContext.fsGroup,\n          customValidation:\n            kesSecurityContext.fsGroup === \"\" ||\n            parseInt(kesSecurityContext.fsGroup) < 0,\n          customValidationMessage: `fsGroup must be present and be 0 or more`,\n        },\n      ];\n\n      if (enableCustomCerts) {\n        encryptionValidation = [\n          ...encryptionValidation,\n          {\n            fieldKey: \"serverKey\",\n            required: !enableAutoCert,\n            value: serverCertificate.encoded_key,\n          },\n          {\n            fieldKey: \"serverCert\",\n            required: !enableAutoCert,\n            value: serverCertificate.encoded_cert,\n          },\n          {\n            fieldKey: \"clientKey\",\n            required: !enableAutoCert,\n            value: clientCertificate.encoded_key,\n          },\n          {\n            fieldKey: \"clientCert\",\n            required: !enableAutoCert,\n            value: clientCertificate.encoded_cert,\n          },\n        ];\n      }\n\n      if (encryptionType === \"vault\") {\n        encryptionValidation = [\n          ...encryptionValidation,\n          {\n            fieldKey: \"vault_endpoint\",\n            required: true,\n            value: vaultEndpoint,\n          },\n          {\n            fieldKey: \"vault_id\",\n            required: true,\n            value: vaultId,\n          },\n          {\n            fieldKey: \"vault_secret\",\n            required: true,\n            value: vaultSecret,\n          },\n          {\n            fieldKey: \"vault_ping\",\n            required: false,\n            value: vaultPing,\n            customValidation: parseInt(vaultPing) < 0,\n            customValidationMessage: \"Value needs to be 0 or greater\",\n          },\n          {\n            fieldKey: \"vault_retry\",\n            required: false,\n            value: vaultRetry,\n            customValidation: parseInt(vaultRetry) < 0,\n            customValidationMessage: \"Value needs to be 0 or greater\",\n          },\n        ];\n      }\n\n      if (encryptionType === \"aws\") {\n        encryptionValidation = [\n          ...encryptionValidation,\n          {\n            fieldKey: \"aws_endpoint\",\n            required: true,\n            value: awsEndpoint,\n          },\n          {\n            fieldKey: \"aws_region\",\n            required: true,\n            value: awsRegion,\n          },\n          {\n            fieldKey: \"aws_accessKey\",\n            required: true,\n            value: awsAccessKey,\n          },\n          {\n            fieldKey: \"aws_secretKey\",\n            required: true,\n            value: awsSecretKey,\n          },\n        ];\n      }\n\n      if (encryptionType === \"gemalto\") {\n        encryptionValidation = [\n          ...encryptionValidation,\n          {\n            fieldKey: \"gemalto_endpoint\",\n            required: true,\n            value: gemaltoEndpoint,\n          },\n          {\n            fieldKey: \"gemalto_token\",\n            required: true,\n            value: gemaltoToken,\n          },\n          {\n            fieldKey: \"gemalto_domain\",\n            required: true,\n            value: gemaltoDomain,\n          },\n          {\n            fieldKey: \"gemalto_retry\",\n            required: false,\n            value: gemaltoRetry,\n            customValidation: parseInt(gemaltoRetry) < 0,\n            customValidationMessage: \"Value needs to be 0 or greater\",\n          },\n        ];\n      }\n\n      if (encryptionType === \"azure\") {\n        encryptionValidation = [\n          ...encryptionValidation,\n          {\n            fieldKey: \"azure_endpoint\",\n            required: true,\n            value: azureEndpoint,\n          },\n          {\n            fieldKey: \"azure_tenant_id\",\n            required: true,\n            value: azureTenantID,\n          },\n          {\n            fieldKey: \"azure_client_id\",\n            required: true,\n            value: azureClientID,\n          },\n          {\n            fieldKey: \"azure_client_secret\",\n            required: true,\n            value: azureClientSecret,\n          },\n        ];\n      }\n    }\n\n    const commonVal = commonFormValidation(encryptionValidation);\n\n    isPageValid(\"encryption\", Object.keys(commonVal).length === 0);\n\n    setValidationErrors(commonVal);\n  }, [\n    enableEncryption,\n    encryptionType,\n    vaultEndpoint,\n    vaultEngine,\n    vaultId,\n    vaultSecret,\n    vaultPing,\n    vaultRetry,\n    awsEndpoint,\n    awsRegion,\n    awsSecretKey,\n    awsAccessKey,\n    gemaltoEndpoint,\n    gemaltoToken,\n    gemaltoDomain,\n    gemaltoRetry,\n    gcpProjectID,\n    gcpEndpoint,\n    gcpClientEmail,\n    gcpClientID,\n    gcpPrivateKeyID,\n    gcpPrivateKey,\n    azureEndpoint,\n    azureTenantID,\n    azureClientID,\n    azureClientSecret,\n    isPageValid,\n    enableAutoCert,\n    enableCustomCerts,\n    serverCertificate.encoded_key,\n    serverCertificate.encoded_cert,\n    clientCertificate.encoded_key,\n    clientCertificate.encoded_cert,\n    kesSecurityContext,\n    replicas,\n  ]);\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Encryption</h3>\n        <span className={classes.descriptionText}>\n          How would you like to encrypt the information at rest.\n        </span>\n      </div>\n      <Grid item xs={12}>\n        <FormSwitchWrapper\n          value=\"enableEncryption\"\n          id=\"enableEncryption\"\n          name=\"enableEncryption\"\n          checked={enableEncryption}\n          onChange={(e) => {\n            const targetD = e.target;\n            const checked = targetD.checked;\n\n            updateField(\"enableEncryption\", checked);\n          }}\n          label={\"Enable Server Side Encryption\"}\n          disabled={!encryptionAvailable}\n        />\n      </Grid>\n      {enableEncryption && (\n        <Fragment>\n          <Grid item xs={12}>\n            <RadioGroupSelector\n              currentSelection={encryptionType}\n              id=\"encryptionType\"\n              name=\"encryptionType\"\n              label=\"Encryption Options\"\n              onChange={(e) => {\n                updateField(\"encryptionType\", e.target.value);\n              }}\n              selectorOptions={[\n                { label: \"Vault\", value: \"vault\" },\n                { label: \"AWS\", value: \"aws\" },\n                { label: \"Gemalto\", value: \"gemalto\" },\n                { label: \"GCP\", value: \"gcp\" },\n                { label: \"Azure\", value: \"azure\" },\n              ]}\n            />\n          </Grid>\n          {encryptionType === \"vault\" && (\n            <Fragment>\n              <Grid item xs={12}>\n                <FormSwitchWrapper\n                  value=\"enableCustomCertsForKES\"\n                  id=\"enableCustomCertsForKES\"\n                  name=\"enableCustomCertsForKES\"\n                  checked={enableCustomCertsForKES || !enableAutoCert}\n                  onChange={(e) => {\n                    const targetD = e.target;\n                    const checked = targetD.checked;\n\n                    updateField(\"enableCustomCertsForKES\", checked);\n                  }}\n                  label={\"Custom Certificates\"}\n                  disabled={!enableAutoCert}\n                />\n              </Grid>\n              {(enableCustomCertsForKES || !enableAutoCert) && (\n                <Fragment>\n                  <Grid item xs={12}>\n                    <Typography variant=\"overline\" display=\"block\" gutterBottom>\n                      Encryption Service Certificates\n                    </Typography>\n                  </Grid>\n                  <Grid container>\n                    <Grid item xs={6}>\n                      <FileSelector\n                        onChange={(encodedValue, fileName) => {\n                          addFileServerCert(\"key\", fileName, encodedValue);\n                          cleanValidation(\"serverKey\");\n                        }}\n                        accept=\".key,.pem\"\n                        id=\"serverKey\"\n                        name=\"serverKey\"\n                        label=\"Key\"\n                        error={validationErrors[\"serverKey\"] || \"\"}\n                        value={serverCertificate.key}\n                        required={!enableAutoCert}\n                      />\n                    </Grid>\n                    <Grid item xs={6}>\n                      <FileSelector\n                        onChange={(encodedValue, fileName) => {\n                          addFileServerCert(\"cert\", fileName, encodedValue);\n                          cleanValidation(\"serverCert\");\n                        }}\n                        accept=\".cer,.crt,.cert,.pem\"\n                        id=\"serverCert\"\n                        name=\"serverCert\"\n                        label=\"Cert\"\n                        error={validationErrors[\"serverCert\"] || \"\"}\n                        value={serverCertificate.cert}\n                        required={!enableAutoCert}\n                      />\n                    </Grid>\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <Typography variant=\"overline\" display=\"block\" gutterBottom>\n                      Mutual TLS authentication\n                    </Typography>\n                  </Grid>\n                  <Grid container>\n                    <Grid item xs={6}>\n                      <FileSelector\n                        onChange={(encodedValue, fileName) => {\n                          addFileClientCert(\"key\", fileName, encodedValue);\n                          cleanValidation(\"clientKey\");\n                        }}\n                        accept=\".key,.pem\"\n                        id=\"clientKey\"\n                        name=\"clientKey\"\n                        label=\"Key\"\n                        error={validationErrors[\"clientKey\"] || \"\"}\n                        value={clientCertificate.key}\n                        required={!enableAutoCert}\n                      />\n                    </Grid>\n                    <Grid item xs={6}>\n                      <FileSelector\n                        onChange={(encodedValue, fileName) => {\n                          addFileClientCert(\"cert\", fileName, encodedValue);\n                          cleanValidation(\"clientCert\");\n                        }}\n                        accept=\".cer,.crt,.cert,.pem\"\n                        id=\"clientCert\"\n                        name=\"clientCert\"\n                        label=\"Cert\"\n                        error={validationErrors[\"clientCert\"] || \"\"}\n                        value={clientCertificate.cert}\n                        required={!enableAutoCert}\n                      />\n                    </Grid>\n                  </Grid>\n                </Fragment>\n              )}\n              <Grid item xs={12}>\n                <InputBoxWrapper\n                  id=\"vault_endpoint\"\n                  name=\"vault_endpoint\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"vaultEndpoint\", e.target.value);\n                    cleanValidation(\"vault_endpoint\");\n                  }}\n                  label=\"Endpoint\"\n                  value={vaultEndpoint}\n                  error={validationErrors[\"vault_endpoint\"] || \"\"}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <InputBoxWrapper\n                  id=\"vault_engine\"\n                  name=\"vault_engine\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"vaultEngine\", e.target.value);\n                    cleanValidation(\"vault_engine\");\n                  }}\n                  label=\"Engine\"\n                  value={vaultEngine}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <InputBoxWrapper\n                  id=\"vault_namespace\"\n                  name=\"vault_namespace\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"vaultNamespace\", e.target.value);\n                  }}\n                  label=\"Namespace\"\n                  value={vaultNamespace}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <InputBoxWrapper\n                  id=\"vault_prefix\"\n                  name=\"vault_prefix\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"vaultPrefix\", e.target.value);\n                  }}\n                  label=\"Prefix\"\n                  value={vaultPrefix}\n                />\n              </Grid>\n              <h5>App Role</h5>\n              <Grid item xs={12}>\n                <InputBoxWrapper\n                  id=\"vault_approle_engine\"\n                  name=\"vault_approle_engine\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"vaultAppRoleEngine\", e.target.value);\n                  }}\n                  label=\"Engine\"\n                  value={vaultAppRoleEngine}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <InputBoxWrapper\n                  id=\"vault_id\"\n                  name=\"vault_id\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"vaultId\", e.target.value);\n                    cleanValidation(\"vault_id\");\n                  }}\n                  label=\"AppRole ID\"\n                  value={vaultId}\n                  error={validationErrors[\"vault_id\"] || \"\"}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <InputBoxWrapper\n                  id=\"vault_secret\"\n                  name=\"vault_secret\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"vaultSecret\", e.target.value);\n                    cleanValidation(\"vault_secret\");\n                  }}\n                  label=\"AppRole Secret\"\n                  value={vaultSecret}\n                  error={validationErrors[\"vault_secret\"] || \"\"}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <InputBoxWrapper\n                  type=\"number\"\n                  min=\"0\"\n                  id=\"vault_retry\"\n                  name=\"vault_retry\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"vaultRetry\", e.target.value);\n                    cleanValidation(\"vault_retry\");\n                  }}\n                  label=\"Retry (Seconds)\"\n                  value={vaultRetry}\n                  error={validationErrors[\"vault_retry\"] || \"\"}\n                />\n              </Grid>\n              <h5>Mutual TLS authentication (optional)</h5>\n              <Grid container>\n                <Grid item xs={6}>\n                  <FileSelector\n                    onChange={(encodedValue, fileName) => {\n                      addFileVaultCert(\"key\", fileName, encodedValue);\n                      cleanValidation(\"vault_key\");\n                    }}\n                    accept=\".key,.pem\"\n                    id=\"vault_key\"\n                    name=\"vault_key\"\n                    label=\"Key\"\n                    value={vaultCertificate.key}\n                  />\n                </Grid>\n                <Grid item xs={6}>\n                  <FileSelector\n                    onChange={(encodedValue, fileName) => {\n                      addFileVaultCert(\"cert\", fileName, encodedValue);\n                      cleanValidation(\"vault_cert\");\n                    }}\n                    accept=\".cer,.crt,.cert,.pem\"\n                    id=\"vault_cert\"\n                    name=\"vault_cert\"\n                    label=\"Cert\"\n                    value={vaultCertificate.cert}\n                  />\n                </Grid>\n              </Grid>\n              <Grid item xs={12}>\n                <FileSelector\n                  onChange={(encodedValue, fileName) => {\n                    addFileVaultCa(fileName, encodedValue);\n                    cleanValidation(\"vault_ca\");\n                  }}\n                  accept=\".cer,.crt,.cert,.pem\"\n                  id=\"vault_ca\"\n                  name=\"vault_ca\"\n                  label=\"CA\"\n                  value={vaultCA.cert}\n                />\n              </Grid>\n              <h5>Status</h5>\n              <Grid item xs={12}>\n                <InputBoxWrapper\n                  type=\"number\"\n                  min=\"0\"\n                  id=\"vault_ping\"\n                  name=\"vault_ping\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"vaultPing\", e.target.value);\n                    cleanValidation(\"vault_ping\");\n                  }}\n                  label=\"Ping (Seconds)\"\n                  value={vaultPing}\n                  error={validationErrors[\"vault_ping\"] || \"\"}\n                />\n              </Grid>\n            </Fragment>\n          )}\n          {encryptionType === \"azure\" && (\n            <Fragment>\n              <Grid item xs={12}>\n                <InputBoxWrapper\n                  id=\"azure_endpoint\"\n                  name=\"azure_endpoint\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"azureEndpoint\", e.target.value);\n                    cleanValidation(\"azure_endpoint\");\n                  }}\n                  label=\"Endpoint\"\n                  value={azureEndpoint}\n                  error={validationErrors[\"azure_endpoint\"] || \"\"}\n                />\n              </Grid>\n              <h5>Credentials</h5>\n              <Grid item xs={12}>\n                <InputBoxWrapper\n                  id=\"azure_tenant_id\"\n                  name=\"azure_tenant_id\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"azureTenantID\", e.target.value);\n                    cleanValidation(\"azure_tenant_id\");\n                  }}\n                  label=\"Tenant ID\"\n                  value={azureTenantID}\n                  error={validationErrors[\"azure_tenant_id\"] || \"\"}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <InputBoxWrapper\n                  id=\"azure_client_id\"\n                  name=\"azure_client_id\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"azureClientID\", e.target.value);\n                    cleanValidation(\"azure_client_id\");\n                  }}\n                  label=\"Client ID\"\n                  value={azureClientID}\n                  error={validationErrors[\"azure_client_id\"] || \"\"}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <InputBoxWrapper\n                  id=\"azure_client_secret\"\n                  name=\"azure_client_secret\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"azureClientSecret\", e.target.value);\n                    cleanValidation(\"azure_client_secret\");\n                  }}\n                  label=\"Client Secret\"\n                  value={azureClientSecret}\n                  error={validationErrors[\"azure_client_secret\"] || \"\"}\n                />\n              </Grid>\n            </Fragment>\n          )}\n          {encryptionType === \"gcp\" && (\n            <Fragment>\n              <Grid item xs={12}>\n                <InputBoxWrapper\n                  id=\"gcp_project_id\"\n                  name=\"gcp_project_id\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"gcpProjectID\", e.target.value);\n                  }}\n                  label=\"Project ID\"\n                  value={gcpProjectID}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <InputBoxWrapper\n                  id=\"gcp_endpoint\"\n                  name=\"gcp_endpoint\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"gcpEndpoint\", e.target.value);\n                  }}\n                  label=\"Endpoint\"\n                  value={gcpEndpoint}\n                />\n              </Grid>\n              <h5>Credentials</h5>\n              <Grid item xs={12}>\n                <InputBoxWrapper\n                  id=\"gcp_client_email\"\n                  name=\"gcp_client_email\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"gcpClientEmail\", e.target.value);\n                  }}\n                  label=\"Client Email\"\n                  value={gcpClientEmail}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <InputBoxWrapper\n                  id=\"gcp_client_id\"\n                  name=\"gcp_client_id\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"gcpClientID\", e.target.value);\n                  }}\n                  label=\"Client ID\"\n                  value={gcpClientID}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <InputBoxWrapper\n                  id=\"gcp_private_key_id\"\n                  name=\"gcp_private_key_id\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"gcpPrivateKeyID\", e.target.value);\n                  }}\n                  label=\"Private Key ID\"\n                  value={gcpPrivateKeyID}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <InputBoxWrapper\n                  id=\"gcp_private_key\"\n                  name=\"gcp_private_key\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"gcpPrivateKey\", e.target.value);\n                  }}\n                  label=\"Private Key\"\n                  value={gcpPrivateKey}\n                />\n              </Grid>\n            </Fragment>\n          )}\n          {encryptionType === \"aws\" && (\n            <Fragment>\n              <Grid item xs={12}>\n                <InputBoxWrapper\n                  id=\"aws_endpoint\"\n                  name=\"aws_endpoint\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"awsEndpoint\", e.target.value);\n                    cleanValidation(\"aws_endpoint\");\n                  }}\n                  label=\"Endpoint\"\n                  value={awsEndpoint}\n                  error={validationErrors[\"aws_endpoint\"] || \"\"}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <InputBoxWrapper\n                  id=\"aws_region\"\n                  name=\"aws_region\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"awsRegion\", e.target.value);\n                    cleanValidation(\"aws_region\");\n                  }}\n                  label=\"Region\"\n                  value={awsRegion}\n                  error={validationErrors[\"aws_region\"] || \"\"}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <InputBoxWrapper\n                  id=\"aws_kmsKey\"\n                  name=\"aws_kmsKey\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"awsKMSKey\", e.target.value);\n                  }}\n                  label=\"KMS Key\"\n                  value={awsKMSKey}\n                />\n              </Grid>\n              <h5>Credentials</h5>\n              <Grid item xs={12}>\n                <InputBoxWrapper\n                  id=\"aws_accessKey\"\n                  name=\"aws_accessKey\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"awsAccessKey\", e.target.value);\n                    cleanValidation(\"aws_accessKey\");\n                  }}\n                  label=\"Access Key\"\n                  value={awsAccessKey}\n                  error={validationErrors[\"aws_accessKey\"] || \"\"}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <InputBoxWrapper\n                  id=\"aws_secretKey\"\n                  name=\"aws_secretKey\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"awsSecretKey\", e.target.value);\n                    cleanValidation(\"aws_secretKey\");\n                  }}\n                  label=\"Secret Key\"\n                  value={awsSecretKey}\n                  error={validationErrors[\"aws_secretKey\"] || \"\"}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <InputBoxWrapper\n                  id=\"aws_token\"\n                  name=\"aws_token\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"awsToken\", e.target.value);\n                  }}\n                  label=\"Token\"\n                  value={awsToken}\n                />\n              </Grid>\n            </Fragment>\n          )}\n          {encryptionType === \"gemalto\" && (\n            <Fragment>\n              <Grid item xs={12}>\n                <InputBoxWrapper\n                  id=\"gemalto_endpoint\"\n                  name=\"gemalto_endpoint\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"gemaltoEndpoint\", e.target.value);\n                    cleanValidation(\"gemalto_endpoint\");\n                  }}\n                  label=\"Endpoint\"\n                  value={gemaltoEndpoint}\n                  error={validationErrors[\"gemalto_endpoint\"] || \"\"}\n                  required\n                />\n              </Grid>\n              <h5>Credentials</h5>\n              <Grid item xs={12}>\n                <InputBoxWrapper\n                  id=\"gemalto_token\"\n                  name=\"gemalto_token\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"gemaltoToken\", e.target.value);\n                    cleanValidation(\"gemalto_token\");\n                  }}\n                  label=\"Token\"\n                  value={gemaltoToken}\n                  error={validationErrors[\"gemalto_token\"] || \"\"}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <InputBoxWrapper\n                  id=\"gemalto_domain\"\n                  name=\"gemalto_domain\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"gemaltoDomain\", e.target.value);\n                    cleanValidation(\"gemalto_domain\");\n                  }}\n                  label=\"Domain\"\n                  value={gemaltoDomain}\n                  error={validationErrors[\"gemalto_domain\"] || \"\"}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <InputBoxWrapper\n                  type=\"number\"\n                  min=\"0\"\n                  id=\"gemalto_retry\"\n                  name=\"gemalto_retry\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"gemaltoRetry\", e.target.value);\n                    cleanValidation(\"gemalto_retry\");\n                  }}\n                  label=\"Retry (seconds)\"\n                  value={gemaltoRetry}\n                  error={validationErrors[\"gemalto_retry\"] || \"\"}\n                />\n              </Grid>\n              <h5>Custom CA Root certificate verification</h5>\n              <Grid item xs={12}>\n                <FileSelector\n                  onChange={(encodedValue, fileName) => {\n                    addFileGemaltoCa(fileName, encodedValue);\n                    cleanValidation(\"gemalto_ca\");\n                  }}\n                  accept=\".cer,.crt,.cert,.pem\"\n                  id=\"gemalto_ca\"\n                  name=\"gemalto_ca\"\n                  label=\"CA\"\n                  value={gemaltoCA.cert}\n                />\n              </Grid>\n            </Fragment>\n          )}\n          <div className={classes.headerElement}>\n            <h3 className={classes.h3Section}>Additional Configurations</h3>\n          </div>\n          <Grid item xs={12}>\n            <Fragment>\n              <Grid item xs={12}>\n                <InputBoxWrapper\n                  type=\"number\"\n                  min=\"1\"\n                  id=\"replicas\"\n                  name=\"replicas\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    updateField(\"replicas\", e.target.value);\n                    cleanValidation(\"replicas\");\n                  }}\n                  label=\"Replicas\"\n                  value={replicas}\n                  required\n                  error={validationErrors[\"replicas\"] || \"\"}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <span className={classes.descriptionText}>\n                  SecurityContext for KES pods\n                </span>\n              </Grid>\n              <br />\n              <Grid item xs={12}>\n                <div className={classes.multiContainer}>\n                  <div>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"kes_securityContext_runAsUser\"\n                      name=\"kes_securityContext_runAsUser\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"kesSecurityContext\", {\n                          ...kesSecurityContext,\n                          runAsUser: e.target.value,\n                        });\n                        cleanValidation(\"kes_securityContext_runAsUser\");\n                      }}\n                      label=\"Run As User\"\n                      value={kesSecurityContext.runAsUser}\n                      required\n                      error={\n                        validationErrors[\"kes_securityContext_runAsUser\"] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                  <div>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"kes_securityContext_runAsGroup\"\n                      name=\"kes_securityContext_runAsGroup\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"kesSecurityContext\", {\n                          ...kesSecurityContext,\n                          runAsGroup: e.target.value,\n                        });\n                        cleanValidation(\"kes_securityContext_runAsGroup\");\n                      }}\n                      label=\"Run As Group\"\n                      value={kesSecurityContext.runAsGroup}\n                      required\n                      error={\n                        validationErrors[\"kes_securityContext_runAsGroup\"] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                  <div>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"kes_securityContext_fsGroup\"\n                      name=\"kes_securityContext_fsGroup\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateField(\"kesSecurityContext\", {\n                          ...kesSecurityContext,\n                          fsGroup: e.target.value,\n                        });\n                        cleanValidation(\"kes_securityContext_fsGroup\");\n                      }}\n                      label=\"FsGroup\"\n                      value={kesSecurityContext.fsGroup}\n                      required\n                      error={\n                        validationErrors[\"kes_securityContext_fsGroup\"] || \"\"\n                      }\n                      min=\"0\"\n                    />\n                  </div>\n                </div>\n              </Grid>\n              <br />\n              <Grid item xs={12}>\n                <div className={classes.multiContainer}>\n                  <FormSwitchWrapper\n                    value=\"kesSecurityContextRunAsNonRoot\"\n                    id=\"kes_securityContext_runAsNonRoot\"\n                    name=\"kes_securityContext_runAsNonRoot\"\n                    checked={kesSecurityContext.runAsNonRoot}\n                    onChange={(e) => {\n                      const targetD = e.target;\n                      const checked = targetD.checked;\n                      updateField(\"kesSecurityContext\", {\n                        ...kesSecurityContext,\n                        runAsNonRoot: checked,\n                      });\n                    }}\n                    label={\"Do not run as Root\"}\n                  />\n                </div>\n              </Grid>\n            </Fragment>\n          </Grid>\n        </Fragment>\n      )}\n    </Paper>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  replicas: state.tenants.createTenant.fields.encryption.replicas,\n  enableEncryption:\n    state.tenants.createTenant.fields.encryption.enableEncryption,\n  encryptionType: state.tenants.createTenant.fields.encryption.encryptionType,\n  gemaltoEndpoint: state.tenants.createTenant.fields.encryption.gemaltoEndpoint,\n  gemaltoToken: state.tenants.createTenant.fields.encryption.gemaltoToken,\n  gemaltoDomain: state.tenants.createTenant.fields.encryption.gemaltoDomain,\n  gemaltoRetry: state.tenants.createTenant.fields.encryption.gemaltoRetry,\n  awsEndpoint: state.tenants.createTenant.fields.encryption.awsEndpoint,\n  awsRegion: state.tenants.createTenant.fields.encryption.awsRegion,\n  awsKMSKey: state.tenants.createTenant.fields.encryption.awsKMSKey,\n  awsAccessKey: state.tenants.createTenant.fields.encryption.awsAccessKey,\n  awsSecretKey: state.tenants.createTenant.fields.encryption.awsSecretKey,\n  awsToken: state.tenants.createTenant.fields.encryption.awsToken,\n  vaultEndpoint: state.tenants.createTenant.fields.encryption.vaultEndpoint,\n  vaultEngine: state.tenants.createTenant.fields.encryption.vaultEngine,\n  vaultNamespace: state.tenants.createTenant.fields.encryption.vaultNamespace,\n  vaultPrefix: state.tenants.createTenant.fields.encryption.vaultPrefix,\n  vaultAppRoleEngine:\n    state.tenants.createTenant.fields.encryption.vaultAppRoleEngine,\n  vaultId: state.tenants.createTenant.fields.encryption.vaultId,\n  vaultSecret: state.tenants.createTenant.fields.encryption.vaultSecret,\n  vaultRetry: state.tenants.createTenant.fields.encryption.vaultRetry,\n  vaultPing: state.tenants.createTenant.fields.encryption.vaultPing,\n  azureEndpoint: state.tenants.createTenant.fields.encryption.azureEndpoint,\n  azureTenantID: state.tenants.createTenant.fields.encryption.azureTenantID,\n  azureClientID: state.tenants.createTenant.fields.encryption.azureClientID,\n  azureClientSecret:\n    state.tenants.createTenant.fields.encryption.azureClientSecret,\n  gcpProjectID: state.tenants.createTenant.fields.encryption.gcpProjectID,\n  gcpEndpoint: state.tenants.createTenant.fields.encryption.gcpEndpoint,\n  gcpClientEmail: state.tenants.createTenant.fields.encryption.gcpClientEmail,\n  gcpClientID: state.tenants.createTenant.fields.encryption.gcpClientID,\n  gcpPrivateKeyID: state.tenants.createTenant.fields.encryption.gcpPrivateKeyID,\n  gcpPrivateKey: state.tenants.createTenant.fields.encryption.gcpPrivateKey,\n  enableCustomCertsForKES:\n    state.tenants.createTenant.fields.encryption.enableCustomCertsForKES,\n  enableAutoCert: state.tenants.createTenant.fields.security.enableAutoCert,\n  enableTLS: state.tenants.createTenant.fields.security.enableTLS,\n  minioCertificates: state.tenants.createTenant.certificates.minioCertificates,\n  serverCertificate: state.tenants.createTenant.certificates.serverCertificate,\n  clientCertificate: state.tenants.createTenant.certificates.clientCertificate,\n  vaultCertificate: state.tenants.createTenant.certificates.vaultCertificate,\n  vaultCA: state.tenants.createTenant.certificates.vaultCA,\n  gemaltoCA: state.tenants.createTenant.certificates.gemaltoCA,\n  enableCustomCerts:\n    state.tenants.createTenant.fields.security.enableCustomCerts,\n  kesSecurityContext:\n    state.tenants.createTenant.fields.encryption.kesSecurityContext,\n});\n\nconst connector = connect(mapState, {\n  updateAddField,\n  isPageValid,\n  addFileServerCert,\n  addFileClientCert,\n  addFileVaultCert,\n  addFileVaultCa,\n  addFileGemaltoCa,\n});\n\nexport default withStyles(styles)(connector(Encryption));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, IconButton, Paper, SelectChangeEvent } from \"@mui/material\";\nimport { AppState } from \"../../../../../store\";\nimport { isPageValid, updateAddField } from \"../../actions\";\nimport { setModalErrorSnackMessage } from \"../../../../../actions\";\nimport {\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport { ErrorResponseHandler } from \"../../../../../common/types\";\nimport RadioGroupSelector from \"../../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport api from \"../../../../../common/api\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport AddIcon from \"../../../../../icons/AddIcon\";\nimport RemoveIcon from \"../../../../../icons/RemoveIcon\";\nimport SelectWrapper from \"../../../Common/FormComponents/SelectWrapper/SelectWrapper\";\n\ninterface IAffinityProps {\n  classes: any;\n  podAffinity: string;\n  nodeSelectorLabels: string;\n  withPodAntiAffinity: boolean;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n  updateAddField: typeof updateAddField;\n  isPageValid: typeof isPageValid;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    buttonContainer: {\n      textAlign: \"right\",\n    },\n    overlayAction: {\n      lineHeight: \"50px\",\n      float: \"left\",\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\ninterface LabelKeyPair {\n  key: string;\n  value: string;\n}\n\ninterface OptionPair {\n  label: string;\n  value: string;\n}\n\nconst Affinity = ({\n  classes,\n  podAffinity,\n  nodeSelectorLabels,\n  withPodAntiAffinity,\n  setModalErrorSnackMessage,\n  updateAddField,\n  isPageValid,\n}: IAffinityProps) => {\n  const [validationErrors, setValidationErrors] = useState<any>({});\n  const [loading, setLoading] = useState<boolean>(true);\n  const [keyValueMap, setKeyValueMap] = useState<{ [key: string]: string[] }>(\n    {}\n  );\n  const [keyValuePairs, setKeyValuePairs] = useState<LabelKeyPair[]>([\n    { key: \"\", value: \"\" },\n  ]);\n\n  const [keyOptions, setKeyOptions] = useState<OptionPair[]>([]);\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      updateAddField(\"affinity\", field, value);\n    },\n    [updateAddField]\n  );\n\n  useEffect(() => {\n    if (loading) {\n      api\n        .invoke(\"GET\", `/api/v1/nodes/labels`)\n        .then((res: { [key: string]: string[] }) => {\n          setLoading(false);\n          setKeyValueMap(res);\n          let keys: OptionPair[] = [];\n          for (let k in res) {\n            keys.push({\n              label: k,\n              value: k,\n            });\n          }\n          setKeyOptions(keys);\n          setKeyValuePairs([{ key: keys[0].value, value: keys[0].value }]);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoading(false);\n          setModalErrorSnackMessage(err);\n          setKeyValueMap({});\n        });\n    }\n  }, [setModalErrorSnackMessage, loading]);\n\n  useEffect(() => {\n    if (keyValuePairs) {\n      const vlr = keyValuePairs\n        .filter((kvp) => kvp.key !== \"\")\n        .map((kvp) => `${kvp.key}=${kvp.value}`)\n        .filter((kvs, i, a) => a.indexOf(kvs) === i);\n      const vl = vlr.join(\"&\");\n      updateField(\"nodeSelectorLabels\", vl);\n    }\n  }, [keyValuePairs, updateField]);\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n\n    if (podAffinity === \"nodeSelector\") {\n      let valid = true;\n\n      const splittedLabels = nodeSelectorLabels.split(\"&\");\n\n      if (splittedLabels.length === 1 && splittedLabels[0] === \"\") {\n        valid = false;\n      }\n\n      splittedLabels.forEach((item: string, index: number) => {\n        const splitItem = item.split(\"=\");\n\n        if (splitItem.length !== 2) {\n          valid = false;\n        }\n\n        if (index + 1 !== splittedLabels.length) {\n          if (splitItem[0] === \"\" || splitItem[1] === \"\") {\n            valid = false;\n          }\n        }\n      });\n\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"labels\",\n          required: true,\n          value: nodeSelectorLabels,\n          customValidation: !valid,\n          customValidationMessage:\n            \"You need to add at least one label key-pair\",\n        },\n      ];\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    isPageValid(\"affinity\", Object.keys(commonVal).length === 0);\n\n    setValidationErrors(commonVal);\n  }, [isPageValid, podAffinity, nodeSelectorLabels]);\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Pod Placement</h3>\n        <span className={classes.descriptionText}>\n          Configure how pods will be assigned to nodes\n        </span>\n      </div>\n      <Grid item xs={12}>\n        <RadioGroupSelector\n          currentSelection={podAffinity}\n          id=\"affinity-options\"\n          name=\"affinity-options\"\n          label=\"Type\"\n          onChange={(e) => {\n            updateField(\"podAffinity\", e.target.value);\n          }}\n          selectorOptions={[\n            { label: \"None\", value: \"none\" },\n            { label: \"Default (Pod Anti-Affinnity)\", value: \"default\" },\n            { label: \"Node Selector\", value: \"nodeSelector\" },\n          ]}\n        />\n        MinIO supports multiple configurations for Pod Affinity\n      </Grid>\n      {podAffinity === \"nodeSelector\" && (\n        <Fragment>\n          <br />\n          <Grid item xs={12}>\n            <FormSwitchWrapper\n              value=\"with_pod_anti_affinity\"\n              id=\"with_pod_anti_affinity\"\n              name=\"with_pod_anti_affinity\"\n              checked={withPodAntiAffinity}\n              onChange={(e) => {\n                const targetD = e.target;\n                const checked = targetD.checked;\n\n                updateField(\"withPodAntiAffinity\", checked);\n              }}\n              label={\"With Pod Anti-Affinity\"}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <h3>Labels</h3>\n            <span className={classes.error}>{validationErrors[\"labels\"]}</span>\n            <Grid container>\n              {keyValuePairs &&\n                keyValuePairs.map((kvp, i) => {\n                  return (\n                    <React.Fragment>\n                      <Grid item xs={5}>\n                        {keyOptions.length > 0 && (\n                          <SelectWrapper\n                            onChange={(e: SelectChangeEvent<string>) => {\n                              const newKey = e.target.value as string;\n                              const arrCp: LabelKeyPair[] = Object.assign(\n                                [],\n                                keyValuePairs\n                              );\n\n                              arrCp[i].key = e.target.value as string;\n                              arrCp[i].value = keyValueMap[newKey][0];\n                              setKeyValuePairs(arrCp);\n                            }}\n                            id=\"select-access-policy\"\n                            name=\"select-access-policy\"\n                            label={\"\"}\n                            value={kvp.key}\n                            options={keyOptions}\n                          />\n                        )}\n                        {keyOptions.length === 0 && (\n                          <InputBoxWrapper\n                            id={`nodeselector-key-${i.toString()}`}\n                            label={\"\"}\n                            name={`nodeselector-${i.toString()}`}\n                            value={kvp.key}\n                            onChange={(e) => {\n                              const arrCp: LabelKeyPair[] = Object.assign(\n                                [],\n                                keyValuePairs\n                              );\n                              arrCp[i].key = e.target.value;\n                              setKeyValuePairs(arrCp);\n                            }}\n                            index={i}\n                            placeholder={\"Key\"}\n                          />\n                        )}\n                      </Grid>\n                      <Grid item xs={5}>\n                        {keyOptions.length > 0 && (\n                          <SelectWrapper\n                            onChange={(e: SelectChangeEvent<string>) => {\n                              const arrCp: LabelKeyPair[] = Object.assign(\n                                [],\n                                keyValuePairs\n                              );\n                              arrCp[i].value = e.target.value as string;\n                              setKeyValuePairs(arrCp);\n                            }}\n                            id=\"select-access-policy\"\n                            name=\"select-access-policy\"\n                            label={\"\"}\n                            value={kvp.value}\n                            options={\n                              keyValueMap[kvp.key]\n                                ? keyValueMap[kvp.key].map((v) => {\n                                    return { label: v, value: v };\n                                  })\n                                : []\n                            }\n                          />\n                        )}\n                        {keyOptions.length === 0 && (\n                          <InputBoxWrapper\n                            id={`nodeselector-value-${i.toString()}`}\n                            label={\"\"}\n                            name={`nodeselector-${i.toString()}`}\n                            value={kvp.value}\n                            onChange={(e) => {\n                              const arrCp: LabelKeyPair[] = Object.assign(\n                                [],\n                                keyValuePairs\n                              );\n                              arrCp[i].value = e.target.value;\n                              setKeyValuePairs(arrCp);\n                            }}\n                            index={i}\n                            placeholder={\"value\"}\n                          />\n                        )}\n                      </Grid>\n                      <Grid item xs={2}>\n                        <div className={classes.overlayAction}>\n                          <IconButton\n                            size={\"small\"}\n                            onClick={() => {\n                              const arrCp = Object.assign([], keyValuePairs);\n                              if (keyOptions.length > 0) {\n                                arrCp.push({\n                                  key: keyOptions[0].value,\n                                  value: keyValueMap[keyOptions[0].value][0],\n                                });\n                              } else {\n                                arrCp.push({ key: \"\", value: \"\" });\n                              }\n\n                              setKeyValuePairs(arrCp);\n                            }}\n                          >\n                            <AddIcon />\n                          </IconButton>\n                        </div>\n                        {keyValuePairs.length > 1 && (\n                          <div className={classes.overlayAction}>\n                            <IconButton\n                              size={\"small\"}\n                              onClick={() => {\n                                const arrCp = keyValuePairs.filter(\n                                  (item, index) => index !== i\n                                );\n                                setKeyValuePairs(arrCp);\n                              }}\n                            >\n                              <RemoveIcon />\n                            </IconButton>\n                          </div>\n                        )}\n                      </Grid>\n                    </React.Fragment>\n                  );\n                })}\n            </Grid>\n          </Grid>\n        </Fragment>\n      )}\n    </Paper>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  podAffinity: state.tenants.createTenant.fields.affinity.podAffinity,\n  nodeSelectorLabels:\n    state.tenants.createTenant.fields.affinity.nodeSelectorLabels,\n  withPodAntiAffinity:\n    state.tenants.createTenant.fields.affinity.withPodAntiAffinity,\n});\n\nconst connector = connect(mapState, {\n  setModalErrorSnackMessage,\n  updateAddField,\n  isPageValid,\n});\n\nexport default withStyles(styles)(connector(Affinity));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid, Paper } from \"@mui/material\";\nimport {\n  modalBasic,\n  wizardCommon,\n} from \"../../../Common/FormComponents/common/styleLibrary\";\nimport { isPageValid, updateAddField } from \"../../actions\";\nimport { AppState } from \"../../../../../store\";\nimport { clearValidationError } from \"../../utils\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../../utils/validationFunctions\";\nimport FormSwitchWrapper from \"../../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport InputBoxWrapper from \"../../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\n\ninterface IImagesProps {\n  updateAddField: typeof updateAddField;\n  isPageValid: typeof isPageValid;\n  storageClasses: any;\n  classes: any;\n  customImage: boolean;\n  imageName: string;\n  customDockerhub: boolean;\n  imageRegistry: string;\n  imageRegistryUsername: string;\n  imageRegistryPassword: string;\n  exposeMinIO: boolean;\n  exposeConsole: boolean;\n  prometheusCustom: boolean;\n  tenantCustom: boolean;\n  logSearchCustom: boolean;\n  logSearchVolumeSize: string;\n  logSearchSizeFactor: string;\n  prometheusVolumeSize: string;\n  prometheusSizeFactor: string;\n  logSearchSelectedStorageClass: string;\n  logSearchImage: string;\n  kesImage: string;\n  logSearchPostgresImage: string;\n  logSearchPostgresInitImage: string;\n  prometheusSelectedStorageClass: string;\n  prometheusImage: string;\n  prometheusSidecarImage: string;\n  prometheusInitImage: string;\n  selectedStorageClass: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    buttonContainer: {\n      textAlign: \"right\",\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst Images = ({\n  classes,\n  storageClasses,\n  customImage,\n  imageName,\n  customDockerhub,\n  imageRegistry,\n  imageRegistryUsername,\n  imageRegistryPassword,\n  exposeMinIO,\n  exposeConsole,\n  prometheusCustom,\n  tenantCustom,\n  logSearchCustom,\n  logSearchVolumeSize,\n  logSearchSizeFactor,\n  logSearchImage,\n  kesImage,\n  logSearchPostgresImage,\n  logSearchPostgresInitImage,\n  prometheusVolumeSize,\n  prometheusSizeFactor,\n  logSearchSelectedStorageClass,\n  prometheusSelectedStorageClass,\n  prometheusImage,\n  prometheusSidecarImage,\n  prometheusInitImage,\n  updateAddField,\n  isPageValid,\n  selectedStorageClass,\n}: IImagesProps) => {\n  const [validationErrors, setValidationErrors] = useState<any>({});\n\n  // Common\n  const updateField = useCallback(\n    (field: string, value: any) => {\n      updateAddField(\"configure\", field, value);\n    },\n    [updateAddField]\n  );\n\n  // Validation\n  useEffect(() => {\n    let customAccountValidation: IValidation[] = [];\n\n    if (prometheusCustom) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"prometheus_storage_class\",\n          required: true,\n          value: prometheusSelectedStorageClass,\n          customValidation: prometheusSelectedStorageClass === \"\",\n          customValidationMessage: \"Field cannot be empty\",\n        },\n        {\n          fieldKey: \"prometheus_volume_size\",\n          required: true,\n          value: prometheusVolumeSize,\n          customValidation:\n            prometheusVolumeSize === \"\" || parseInt(prometheusVolumeSize) <= 0,\n          customValidationMessage: `Volume size must be present and be greatter than 0`,\n        },\n      ];\n    }\n    if (logSearchCustom) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"log_search_storage_class\",\n          required: true,\n          value: logSearchSelectedStorageClass,\n          customValidation: logSearchSelectedStorageClass === \"\",\n          customValidationMessage: \"Field cannot be empty\",\n        },\n        {\n          fieldKey: \"log_search_volume_size\",\n          required: true,\n          value: logSearchVolumeSize,\n          customValidation:\n            logSearchVolumeSize === \"\" || parseInt(logSearchVolumeSize) <= 0,\n          customValidationMessage: `Volume size must be present and be greatter than 0`,\n        },\n      ];\n    }\n\n    if (customImage) {\n      customAccountValidation = [\n        ...customAccountValidation,\n        {\n          fieldKey: \"image\",\n          required: false,\n          value: imageName,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage: \"Format must be of form: 'minio/minio:VERSION'\",\n        },\n        {\n          fieldKey: \"logSearchImage\",\n          required: false,\n          value: logSearchImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'minio/logsearchapi:VERSION'\",\n        },\n        {\n          fieldKey: \"kesImage\",\n          required: false,\n          value: kesImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage: \"Format must be of form: 'minio/kes:VERSION'\",\n        },\n        {\n          fieldKey: \"logSearchPostgresImage\",\n          required: false,\n          value: logSearchPostgresImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'library/postgres:VERSION'\",\n        },\n        {\n          fieldKey: \"logSearchPostgresInitImage\",\n          required: false,\n          value: logSearchPostgresInitImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'library/busybox:VERSION'\",\n        },\n        {\n          fieldKey: \"prometheusImage\",\n          required: false,\n          value: prometheusImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'minio/prometheus:VERSION'\",\n        },\n        {\n          fieldKey: \"prometheusSidecarImage\",\n          required: false,\n          value: prometheusSidecarImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'project/container:VERSION'\",\n        },\n        {\n          fieldKey: \"prometheusInitImage\",\n          required: false,\n          value: prometheusInitImage,\n          pattern: /^((.*?)\\/(.*?):(.+))$/,\n          customPatternMessage:\n            \"Format must be of form: 'library/busybox:VERSION'\",\n        },\n      ];\n      if (customDockerhub) {\n        customAccountValidation = [\n          ...customAccountValidation,\n          {\n            fieldKey: \"registry\",\n            required: true,\n            value: imageRegistry,\n          },\n          {\n            fieldKey: \"registryUsername\",\n            required: true,\n            value: imageRegistryUsername,\n          },\n          {\n            fieldKey: \"registryPassword\",\n            required: true,\n            value: imageRegistryPassword,\n          },\n        ];\n      }\n    }\n\n    const commonVal = commonFormValidation(customAccountValidation);\n\n    isPageValid(\"configure\", Object.keys(commonVal).length === 0);\n\n    setValidationErrors(commonVal);\n  }, [\n    customImage,\n    imageName,\n    logSearchImage,\n    kesImage,\n    logSearchPostgresImage,\n    logSearchPostgresInitImage,\n    prometheusImage,\n    prometheusSidecarImage,\n    prometheusInitImage,\n    customDockerhub,\n    imageRegistry,\n    imageRegistryUsername,\n    imageRegistryPassword,\n    isPageValid,\n    prometheusCustom,\n    tenantCustom,\n    logSearchCustom,\n    prometheusSelectedStorageClass,\n    prometheusVolumeSize,\n    logSearchSelectedStorageClass,\n    logSearchVolumeSize,\n  ]);\n\n  useEffect(() => {\n    // New default values is current selection is invalid\n    if (storageClasses.length > 0) {\n      const filterPrometheus = storageClasses.filter(\n        (item: any) => item.value === prometheusSelectedStorageClass\n      );\n      if (filterPrometheus.length === 0) {\n        updateField(\"prometheusSelectedStorageClass\", selectedStorageClass);\n      }\n\n      const filterLogSearch = storageClasses.filter(\n        (item: any) => item.value === logSearchSelectedStorageClass\n      );\n      if (filterLogSearch.length === 0) {\n        updateField(\"logSearchSelectedStorageClass\", selectedStorageClass);\n      }\n    }\n  }, [\n    logSearchSelectedStorageClass,\n    prometheusSelectedStorageClass,\n    selectedStorageClass,\n    storageClasses,\n    updateField,\n  ]);\n\n  const cleanValidation = (fieldName: string) => {\n    setValidationErrors(clearValidationError(validationErrors, fieldName));\n  };\n\n  return (\n    <Paper className={classes.paperWrapper}>\n      <div className={classes.headerElement}>\n        <h3 className={classes.h3Section}>Container Images</h3>\n        <span className={classes.descriptionText}>\n          Images used by the Tenant Deployment\n        </span>\n      </div>\n\n      <Fragment>\n        <Grid item xs={12}>\n          <InputBoxWrapper\n            id=\"image\"\n            name=\"image\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"imageName\", e.target.value);\n              cleanValidation(\"image\");\n            }}\n            label=\"MinIO's Image\"\n            value={imageName}\n            error={validationErrors[\"image\"] || \"\"}\n            placeholder=\"E.g. minio/minio:RELEASE.2021-08-20T18-32-01Z\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <InputBoxWrapper\n            id=\"logSearchImage\"\n            name=\"logSearchImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"logSearchImage\", e.target.value);\n              cleanValidation(\"logSearchImage\");\n            }}\n            label=\"Log Search API's Image\"\n            value={logSearchImage}\n            error={validationErrors[\"logSearchImage\"] || \"\"}\n            placeholder=\"E.g. minio/logsearchapi:v4.1.1\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <InputBoxWrapper\n            id=\"kesImage\"\n            name=\"kesImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"kesImage\", e.target.value);\n              cleanValidation(\"kesImage\");\n            }}\n            label=\"KES Image\"\n            value={kesImage}\n            error={validationErrors[\"kesImage\"] || \"\"}\n            placeholder=\"E.g. minio/kes:v0.14.0\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <InputBoxWrapper\n            id=\"logSearchPostgresImage\"\n            name=\"logSearchPostgresImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"logSearchPostgresImage\", e.target.value);\n              cleanValidation(\"logSearchPostgresImage\");\n            }}\n            label=\"Log Search Postgres's Image\"\n            value={logSearchPostgresImage}\n            error={validationErrors[\"logSearchPostgresImage\"] || \"\"}\n            placeholder=\"E.g. library/postgres:13\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <InputBoxWrapper\n            id=\"logSearchPostgresInitImage\"\n            name=\"logSearchPostgresInitImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"logSearchPostgresInitImage\", e.target.value);\n              cleanValidation(\"logSearchPostgresInitImage\");\n            }}\n            label=\"Log Search Postgres's Init Image\"\n            value={logSearchPostgresInitImage}\n            error={validationErrors[\"logSearchPostgresInitImage\"] || \"\"}\n            placeholder=\"E.g. library/busybox:1.33.1\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <InputBoxWrapper\n            id=\"prometheusImage\"\n            name=\"prometheusImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"prometheusImage\", e.target.value);\n              cleanValidation(\"prometheusImage\");\n            }}\n            label=\"Prometheus Image\"\n            value={prometheusImage}\n            error={validationErrors[\"prometheusImage\"] || \"\"}\n            placeholder=\"E.g. quay.io/prometheus/prometheus:latest\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <InputBoxWrapper\n            id=\"prometheusSidecarImage\"\n            name=\"prometheusSidecarImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"prometheusSidecarImage\", e.target.value);\n              cleanValidation(\"prometheusSidecarImage\");\n            }}\n            label=\"Prometheus Sidecar Image\"\n            value={prometheusSidecarImage}\n            error={validationErrors[\"prometheusSidecarImage\"] || \"\"}\n            placeholder=\"E.g. quay.io/prometheus/prometheus:latest\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <InputBoxWrapper\n            id=\"prometheusInitImage\"\n            name=\"prometheusInitImage\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              updateField(\"prometheusInitImage\", e.target.value);\n              cleanValidation(\"prometheusInitImage\");\n            }}\n            label=\"Prometheus Init Image\"\n            value={prometheusInitImage}\n            error={validationErrors[\"prometheusInitImage\"] || \"\"}\n            placeholder=\"E.g. quay.io/prometheus/prometheus:latest\"\n          />\n        </Grid>\n      </Fragment>\n\n      {customImage && (\n        <Fragment>\n          <Grid item xs={12}>\n            <FormSwitchWrapper\n              value=\"custom_docker_hub\"\n              id=\"custom_docker_hub\"\n              name=\"custom_docker_hub\"\n              checked={customDockerhub}\n              onChange={(e) => {\n                const targetD = e.target;\n                const checked = targetD.checked;\n\n                updateField(\"customDockerhub\", checked);\n              }}\n              label={\"Set/Update Image Registry\"}\n            />\n          </Grid>\n        </Fragment>\n      )}\n      {customDockerhub && (\n        <Fragment>\n          <Grid item xs={12}>\n            <InputBoxWrapper\n              id=\"registry\"\n              name=\"registry\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"imageRegistry\", e.target.value);\n              }}\n              label=\"Endpoint\"\n              value={imageRegistry}\n              error={validationErrors[\"registry\"] || \"\"}\n              placeholder=\"E.g. https://index.docker.io/v1/\"\n              required\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <InputBoxWrapper\n              id=\"registryUsername\"\n              name=\"registryUsername\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"imageRegistryUsername\", e.target.value);\n              }}\n              label=\"Username\"\n              value={imageRegistryUsername}\n              error={validationErrors[\"registryUsername\"] || \"\"}\n              required\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <InputBoxWrapper\n              id=\"registryPassword\"\n              name=\"registryPassword\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                updateField(\"imageRegistryPassword\", e.target.value);\n              }}\n              label=\"Password\"\n              value={imageRegistryPassword}\n              error={validationErrors[\"registryPassword\"] || \"\"}\n              required\n            />\n          </Grid>\n        </Fragment>\n      )}\n    </Paper>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  storageClasses: state.tenants.createTenant.storageClasses,\n  customImage: state.tenants.createTenant.fields.configure.customImage,\n  imageName: state.tenants.createTenant.fields.configure.imageName,\n  customDockerhub: state.tenants.createTenant.fields.configure.customDockerhub,\n  imageRegistry: state.tenants.createTenant.fields.configure.imageRegistry,\n  imageRegistryUsername:\n    state.tenants.createTenant.fields.configure.imageRegistryUsername,\n  imageRegistryPassword:\n    state.tenants.createTenant.fields.configure.imageRegistryPassword,\n  exposeMinIO: state.tenants.createTenant.fields.configure.exposeMinIO,\n  exposeConsole: state.tenants.createTenant.fields.configure.exposeConsole,\n  prometheusCustom:\n    state.tenants.createTenant.fields.configure.prometheusCustom,\n  tenantCustom: state.tenants.createTenant.fields.configure.tenantCustom,\n  logSearchCustom: state.tenants.createTenant.fields.configure.logSearchCustom,\n  logSearchVolumeSize:\n    state.tenants.createTenant.fields.configure.logSearchVolumeSize,\n  logSearchSizeFactor:\n    state.tenants.createTenant.fields.configure.logSearchSizeFactor,\n  prometheusVolumeSize:\n    state.tenants.createTenant.fields.configure.prometheusVolumeSize,\n  prometheusSizeFactor:\n    state.tenants.createTenant.fields.configure.prometheusSizeFactor,\n  logSearchSelectedStorageClass:\n    state.tenants.createTenant.fields.configure.logSearchSelectedStorageClass,\n  logSearchImage: state.tenants.createTenant.fields.configure.logSearchImage,\n  kesImage: state.tenants.createTenant.fields.configure.kesImage,\n  logSearchPostgresImage:\n    state.tenants.createTenant.fields.configure.logSearchPostgresImage,\n  logSearchPostgresInitImage:\n    state.tenants.createTenant.fields.configure.logSearchPostgresInitImage,\n  prometheusSelectedStorageClass:\n    state.tenants.createTenant.fields.configure.prometheusSelectedStorageClass,\n  prometheusImage: state.tenants.createTenant.fields.configure.prometheusImage,\n  prometheusSidecarImage:\n    state.tenants.createTenant.fields.configure.prometheusSidecarImage,\n  prometheusInitImage:\n    state.tenants.createTenant.fields.configure.prometheusInitImage,\n  selectedStorageClass:\n    state.tenants.createTenant.fields.nameTenant.selectedStorageClass,\n});\n\nconst connector = connect(mapState, {\n  updateAddField,\n  isPageValid,\n});\n\nexport default withStyles(styles)(connector(Images));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport { connect } from \"react-redux\";\nimport Grid from \"@mui/material/Grid\";\nimport { LinearProgress } from \"@mui/material\";\n\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  modalBasic,\n  settingsCommon,\n  wizardCommon,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport api from \"../../../../common/api\";\nimport { generatePoolName } from \"../../../../common/utils\";\nimport GenericWizard from \"../../Common/GenericWizard/GenericWizard\";\nimport { IWizardElement } from \"../../Common/GenericWizard/types\";\nimport { NewServiceAccount } from \"../../Common/CredentialsPrompt/types\";\nimport { ErrorResponseHandler, ITenantCreator } from \"../../../../common/types\";\nimport { KeyPair } from \"../ListTenants/utils\";\n\nimport { setErrorSnackMessage } from \"../../../../actions\";\nimport { getDefaultAffinity, getNodeSelector } from \"../TenantDetails/utils\";\nimport CredentialsPrompt from \"../../Common/CredentialsPrompt/CredentialsPrompt\";\nimport NameTenant from \"./Steps/NameTenant\";\nimport { AppState } from \"../../../../store\";\nimport { ICertificatesItems, IFieldStore } from \"../types\";\nimport { resetAddTenantForm, updateAddField } from \"../actions\";\nimport Configure from \"./Steps/Configure\";\nimport IdentityProvider from \"./Steps/IdentityProvider\";\nimport Security from \"./Steps/Security\";\nimport Encryption from \"./Steps/Encryption\";\nimport Affinity from \"./Steps/Affinity\";\nimport PageHeader from \"../../Common/PageHeader/PageHeader\";\nimport history from \"../../../../history\";\nimport Images from \"./Steps/Images\";\n\ninterface IAddTenantProps {\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n  resetAddTenantForm: typeof resetAddTenantForm;\n  updateAddField: typeof updateAddField;\n  fields: IFieldStore;\n  certificates: ICertificatesItems;\n  selectedStorageClass: string;\n  namespace: string;\n  validPages: string[];\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    buttonContainer: {\n      textAlign: \"right\",\n    },\n    ...modalBasic,\n    ...wizardCommon,\n    ...settingsCommon,\n  });\n\nconst AddTenant = ({\n  classes,\n  fields,\n  certificates,\n  selectedStorageClass,\n  namespace,\n  validPages,\n  setErrorSnackMessage,\n  resetAddTenantForm,\n}: IAddTenantProps) => {\n  // Modals\n  const [showNewCredentials, setShowNewCredentials] = useState<boolean>(false);\n  const [createdAccount, setCreatedAccount] =\n    useState<NewServiceAccount | null>(null);\n\n  // Fields\n  const [addSending, setAddSending] = useState<boolean>(false);\n\n  /* Send Information to backend */\n  useEffect(() => {\n    const tenantName = fields.nameTenant.tenantName;\n    const selectedStorageClass = fields.nameTenant.selectedStorageClass;\n    const imageName = fields.configure.imageName;\n    const customDockerhub = fields.configure.customDockerhub;\n    const imageRegistry = fields.configure.imageRegistry;\n    const imageRegistryUsername = fields.configure.imageRegistryUsername;\n    const imageRegistryPassword = fields.configure.imageRegistryPassword;\n    const exposeMinIO = fields.configure.exposeMinIO;\n    const exposeConsole = fields.configure.exposeConsole;\n    const idpSelection = fields.identityProvider.idpSelection;\n    const openIDConfigurationURL =\n      fields.identityProvider.openIDConfigurationURL;\n    const openIDClientID = fields.identityProvider.openIDClientID;\n    const openIDClaimName = fields.identityProvider.openIDClaimName;\n    const openIDCallbackURL = fields.identityProvider.openIDCallbackURL;\n    const openIDScopes = fields.identityProvider.openIDScopes;\n    const openIDSecretID = fields.identityProvider.openIDSecretID;\n    const ADURL = fields.identityProvider.ADURL;\n    const ADSkipTLS = fields.identityProvider.ADSkipTLS;\n    const ADServerInsecure = fields.identityProvider.ADServerInsecure;\n    const ADUserNameSearchFilter =\n      fields.identityProvider.ADUserNameSearchFilter;\n    const ADGroupSearchBaseDN = fields.identityProvider.ADGroupSearchBaseDN;\n    const ADGroupSearchFilter = fields.identityProvider.ADGroupSearchFilter;\n    const ADGroupNameAttribute = fields.identityProvider.ADGroupNameAttribute;\n    const ADUserDNs = fields.identityProvider.ADUserDNs;\n    const ADUserNameFormat = fields.identityProvider.ADUserNameFormat;\n    const ADLookupBindDN = fields.identityProvider.ADLookupBindDN;\n    const ADLookupBindPassword = fields.identityProvider.ADLookupBindPassword;\n    const ADUserDNSearchBaseDN = fields.identityProvider.ADUserDNSearchBaseDN;\n    const ADUserDNSearchFilter = fields.identityProvider.ADUserDNSearchFilter;\n    const ADServerStartTLS = fields.identityProvider.ADServerStartTLS;\n    const accessKeys = fields.identityProvider.accessKeys;\n    const secretKeys = fields.identityProvider.secretKeys;\n    const minioCertificates = certificates.minioCertificates;\n    const caCertificates = certificates.caCertificates;\n    const consoleCaCertificates = certificates.consoleCaCertificates;\n    const consoleCertificate = certificates.consoleCertificate;\n    const serverCertificate = certificates.serverCertificate;\n    const clientCertificate = certificates.clientCertificate;\n    const vaultCertificate = certificates.vaultCertificate;\n    const vaultCA = certificates.vaultCA;\n    const gemaltoCA = certificates.gemaltoCA;\n    const enableEncryption = fields.encryption.enableEncryption;\n    const encryptionType = fields.encryption.encryptionType;\n    const gemaltoEndpoint = fields.encryption.gemaltoEndpoint;\n    const gemaltoToken = fields.encryption.gemaltoToken;\n    const gemaltoDomain = fields.encryption.gemaltoDomain;\n    const gemaltoRetry = fields.encryption.gemaltoRetry;\n    const awsEndpoint = fields.encryption.awsEndpoint;\n    const awsRegion = fields.encryption.awsRegion;\n    const awsKMSKey = fields.encryption.awsKMSKey;\n    const awsAccessKey = fields.encryption.awsAccessKey;\n    const awsSecretKey = fields.encryption.awsSecretKey;\n    const awsToken = fields.encryption.awsToken;\n    const vaultEndpoint = fields.encryption.vaultEndpoint;\n    const vaultEngine = fields.encryption.vaultEngine;\n    const vaultNamespace = fields.encryption.vaultNamespace;\n    const vaultPrefix = fields.encryption.vaultPrefix;\n    const vaultAppRoleEngine = fields.encryption.vaultAppRoleEngine;\n    const vaultId = fields.encryption.vaultId;\n    const vaultSecret = fields.encryption.vaultSecret;\n    const vaultRetry = fields.encryption.vaultRetry;\n    const vaultPing = fields.encryption.vaultPing;\n    const azureEndpoint = fields.encryption.azureEndpoint;\n    const azureTenantID = fields.encryption.azureTenantID;\n    const azureClientID = fields.encryption.azureClientID;\n    const azureClientSecret = fields.encryption.azureClientSecret;\n    const gcpProjectID = fields.encryption.gcpProjectID;\n    const gcpEndpoint = fields.encryption.gcpEndpoint;\n    const gcpClientEmail = fields.encryption.gcpClientEmail;\n    const gcpClientID = fields.encryption.gcpClientID;\n    const gcpPrivateKeyID = fields.encryption.gcpPrivateKeyID;\n    const gcpPrivateKey = fields.encryption.gcpPrivateKey;\n    const enableAutoCert = fields.security.enableAutoCert;\n    const enableTLS = fields.security.enableTLS;\n    const ecParity = fields.tenantSize.ecParity;\n    const distribution = fields.tenantSize.distribution;\n    const memorySize = fields.tenantSize.memorySize;\n    const tenantCustom = fields.configure.tenantCustom;\n    const logSearchCustom = fields.configure.logSearchCustom;\n    const prometheusCustom = fields.configure.prometheusCustom;\n    const logSearchVolumeSize = fields.configure.logSearchVolumeSize;\n    const logSearchSelectedStorageClass =\n      fields.configure.logSearchSelectedStorageClass;\n    const logSearchImage = fields.configure.logSearchImage;\n    const kesImage = fields.configure.kesImage;\n    const logSearchPostgresImage = fields.configure.logSearchPostgresImage;\n    const logSearchPostgresInitImage =\n      fields.configure.logSearchPostgresInitImage;\n    const prometheusImage = fields.configure.prometheusImage;\n    const prometheusSidecarImage = fields.configure.prometheusSidecarImage;\n    const prometheusInitImage = fields.configure.prometheusInitImage;\n    const prometheusSelectedStorageClass =\n      fields.configure.prometheusSelectedStorageClass;\n    const prometheusVolumeSize = fields.configure.prometheusVolumeSize;\n    const affinityType = fields.affinity.podAffinity;\n    const nodeSelectorLabels = fields.affinity.nodeSelectorLabels;\n    const withPodAntiAffinity = fields.affinity.withPodAntiAffinity;\n\n    const tenantSecurityContext = fields.configure.tenantSecurityContext;\n    const logSearchSecurityContext = fields.configure.logSearchSecurityContext;\n    const logSearchPostgresSecurityContext =\n      fields.configure.logSearchPostgresSecurityContext;\n    const prometheusSecurityContext =\n      fields.configure.prometheusSecurityContext;\n    const kesSecurityContext = fields.encryption.kesSecurityContext;\n    const kesReplicas = fields.encryption.replicas;\n\n    if (addSending) {\n      const poolName = generatePoolName([]);\n\n      let affinityObject = {};\n\n      switch (affinityType) {\n        case \"default\":\n          affinityObject = {\n            affinity: getDefaultAffinity(tenantName, poolName),\n          };\n          break;\n        case \"nodeSelector\":\n          affinityObject = {\n            affinity: getNodeSelector(\n              nodeSelectorLabels,\n              withPodAntiAffinity,\n              tenantName,\n              poolName\n            ),\n          };\n          break;\n      }\n\n      const erasureCode = ecParity.split(\":\")[1];\n\n      let dataSend: ITenantCreator = {\n        name: tenantName,\n        namespace: namespace,\n        access_key: \"\",\n        secret_key: \"\",\n        access_keys: [],\n        secret_keys: [],\n        enable_tls: enableTLS && enableAutoCert,\n        enable_console: true,\n        enable_prometheus: true,\n        service_name: \"\",\n        image: imageName,\n        expose_minio: exposeMinIO,\n        expose_console: exposeConsole,\n        pools: [\n          {\n            name: poolName,\n            servers: distribution.nodes,\n            volumes_per_server: distribution.disks,\n            volume_configuration: {\n              size: distribution.pvSize,\n              storage_class_name: selectedStorageClass,\n            },\n            resources: {\n              requests: {\n                memory: memorySize.request,\n              },\n              limits: {\n                memory: memorySize.limit,\n              },\n            },\n            securityContext: tenantCustom ? tenantSecurityContext : null,\n            ...affinityObject,\n          },\n        ],\n        erasureCodingParity: parseInt(erasureCode, 10),\n      };\n\n      if (customDockerhub) {\n        dataSend = {\n          ...dataSend,\n          image_registry: {\n            registry: imageRegistry,\n            username: imageRegistryUsername,\n            password: imageRegistryPassword,\n          },\n        };\n      }\n\n      if (logSearchCustom) {\n        dataSend = {\n          ...dataSend,\n          logSearchConfiguration: {\n            storageClass: logSearchSelectedStorageClass,\n            storageSize: parseInt(logSearchVolumeSize),\n            image: logSearchImage,\n            postgres_image: logSearchPostgresImage,\n            postgres_init_image: logSearchPostgresInitImage,\n            securityContext: logSearchSecurityContext,\n            postgres_securityContext: logSearchPostgresSecurityContext,\n          },\n        };\n      } else {\n        dataSend = {\n          ...dataSend,\n          logSearchConfiguration: {\n            image: logSearchImage,\n            postgres_image: logSearchPostgresImage,\n            postgres_init_image: logSearchPostgresInitImage,\n          },\n        };\n      }\n\n      if (prometheusCustom) {\n        dataSend = {\n          ...dataSend,\n          prometheusConfiguration: {\n            storageClass: prometheusSelectedStorageClass,\n            storageSize: parseInt(prometheusVolumeSize),\n            image: prometheusImage,\n            sidecar_image: prometheusSidecarImage,\n            init_image: prometheusInitImage,\n            securityContext: prometheusSecurityContext,\n          },\n        };\n      } else {\n        dataSend = {\n          ...dataSend,\n          prometheusConfiguration: {\n            image: prometheusImage,\n            sidecar_image: prometheusSidecarImage,\n            init_image: prometheusInitImage,\n          },\n        };\n      }\n\n      let tenantCerts: any = null;\n      let consoleCerts: any = null;\n      let caCerts: any = null;\n      let consoleCaCerts: any = null;\n\n      if (caCertificates.length > 0) {\n        caCerts = {\n          ca_certificates: caCertificates\n            .map((keyPair: KeyPair) => keyPair.encoded_cert)\n            .filter((keyPair) => keyPair),\n        };\n      }\n\n      if (consoleCaCertificates.length > 0) {\n        consoleCaCerts = {\n          console_ca_certificates: consoleCaCertificates\n            .map((keyPair: KeyPair) => keyPair.encoded_cert)\n            .filter((keyPair) => keyPair),\n        };\n      }\n\n      if (enableTLS && minioCertificates.length > 0) {\n        tenantCerts = {\n          minio: minioCertificates\n            .map((keyPair: KeyPair) => ({\n              crt: keyPair.encoded_cert,\n              key: keyPair.encoded_key,\n            }))\n            .filter((keyPair) => keyPair.crt && keyPair.key),\n        };\n      }\n\n      if (\n        enableTLS &&\n        consoleCertificate.encoded_cert !== \"\" &&\n        consoleCertificate.encoded_key !== \"\"\n      ) {\n        consoleCerts = {\n          console: {\n            crt: consoleCertificate.encoded_cert,\n            key: consoleCertificate.encoded_key,\n          },\n        };\n      }\n\n      if (tenantCerts || consoleCerts || caCerts || consoleCaCerts) {\n        dataSend = {\n          ...dataSend,\n          tls: {\n            ...tenantCerts,\n            ...consoleCerts,\n            ...caCerts,\n            ...consoleCaCerts,\n          },\n        };\n      }\n\n      if (enableEncryption) {\n        let insertEncrypt = {};\n\n        switch (encryptionType) {\n          case \"gemalto\":\n            let gemaltoCAIntroduce = {};\n\n            if (gemaltoCA.encoded_cert !== \"\") {\n              gemaltoCAIntroduce = {\n                ca: gemaltoCA.encoded_cert,\n              };\n            }\n            insertEncrypt = {\n              gemalto: {\n                keysecure: {\n                  endpoint: gemaltoEndpoint,\n                  credentials: {\n                    token: gemaltoToken,\n                    domain: gemaltoDomain,\n                    retry: parseInt(gemaltoRetry),\n                  },\n                  tls: {\n                    ...gemaltoCAIntroduce,\n                  },\n                },\n              },\n            };\n            break;\n          case \"aws\":\n            insertEncrypt = {\n              aws: {\n                secretsmanager: {\n                  endpoint: awsEndpoint,\n                  region: awsRegion,\n                  kmskey: awsKMSKey,\n                  credentials: {\n                    accesskey: awsAccessKey,\n                    secretkey: awsSecretKey,\n                    token: awsToken,\n                  },\n                },\n              },\n            };\n            break;\n          case \"azure\":\n            insertEncrypt = {\n              azure: {\n                keyvault: {\n                  endpoint: azureEndpoint,\n                  credentials: {\n                    tenant_id: azureTenantID,\n                    client_id: azureClientID,\n                    client_secret: azureClientSecret,\n                  },\n                },\n              },\n            };\n            break;\n          case \"gcp\":\n            insertEncrypt = {\n              gcp: {\n                secretmanager: {\n                  project_id: gcpProjectID,\n                  endpoint: gcpEndpoint,\n                  credentials: {\n                    client_email: gcpClientEmail,\n                    client_id: gcpClientID,\n                    private_key_id: gcpPrivateKeyID,\n                    private_key: gcpPrivateKey,\n                  },\n                },\n              },\n            };\n            break;\n          case \"vault\":\n            let vaultKeyPair = null;\n            let vaultCAInsert = null;\n            if (\n              vaultCertificate.encoded_key !== \"\" &&\n              vaultCertificate.encoded_cert !== \"\"\n            ) {\n              vaultKeyPair = {\n                key: vaultCertificate.encoded_key,\n                crt: vaultCertificate.encoded_cert,\n              };\n            }\n            if (vaultCA.encoded_cert !== \"\") {\n              vaultCAInsert = {\n                ca: vaultCA.encoded_cert,\n              };\n            }\n            let vaultTLS = null;\n            if (vaultKeyPair || vaultCA) {\n              vaultTLS = {\n                tls: {\n                  ...vaultKeyPair,\n                  ...vaultCAInsert,\n                },\n              };\n            }\n            insertEncrypt = {\n              vault: {\n                endpoint: vaultEndpoint,\n                engine: vaultEngine,\n                namespace: vaultNamespace,\n                prefix: vaultPrefix,\n                approle: {\n                  engine: vaultAppRoleEngine,\n                  id: vaultId,\n                  secret: vaultSecret,\n                  retry: parseInt(vaultRetry),\n                },\n                ...vaultTLS,\n                status: {\n                  ping: parseInt(vaultPing),\n                },\n              },\n            };\n            break;\n        }\n\n        let encryptionServerKeyPair: any = {};\n        let encryptionClientKeyPair: any = {};\n\n        if (\n          clientCertificate.encoded_key !== \"\" &&\n          clientCertificate.encoded_cert !== \"\"\n        ) {\n          encryptionClientKeyPair = {\n            client: {\n              key: clientCertificate.encoded_key,\n              crt: clientCertificate.encoded_cert,\n            },\n          };\n        }\n\n        if (\n          serverCertificate.encoded_key !== \"\" &&\n          serverCertificate.encoded_cert !== \"\"\n        ) {\n          encryptionServerKeyPair = {\n            server: {\n              key: serverCertificate.encoded_key,\n              crt: serverCertificate.encoded_cert,\n            },\n          };\n        }\n\n        dataSend = {\n          ...dataSend,\n          encryption: {\n            replicas: kesReplicas,\n            securityContext: kesSecurityContext,\n            image: kesImage,\n            ...encryptionClientKeyPair,\n            ...encryptionServerKeyPair,\n            ...insertEncrypt,\n          },\n        };\n      }\n\n      let dataIDP: any = {};\n      switch (idpSelection) {\n        case \"Built-in\":\n          let keyarray = [];\n          for (let i = 0; i < accessKeys.length; i++) {\n            keyarray.push({\n              access_key: accessKeys[i],\n              secret_key: secretKeys[i],\n            });\n          }\n          dataIDP = {\n            keys: keyarray,\n          };\n          break;\n        case \"OpenID\":\n          dataIDP = {\n            oidc: {\n              configuration_url: openIDConfigurationURL,\n              client_id: openIDClientID,\n              secret_id: openIDSecretID,\n              claim_name: openIDClaimName,\n              callback_url: openIDCallbackURL,\n              scopes: openIDScopes,\n            },\n          };\n          break;\n        case \"AD\":\n          dataIDP = {\n            active_directory: {\n              url: ADURL,\n              skip_tls_verification: ADSkipTLS,\n              server_insecure: ADServerInsecure,\n              username_format: ADUserNameFormat,\n              username_search_filter: ADUserNameSearchFilter,\n              group_search_base_dn: ADGroupSearchBaseDN,\n              group_search_filter: ADGroupSearchFilter,\n              group_name_attribute: ADGroupNameAttribute,\n              user_dns: ADUserDNs,\n              lookup_bind_dn: ADLookupBindDN,\n              lookup_bind_password: ADLookupBindPassword,\n              user_dn_search_base_dn: ADUserDNSearchBaseDN,\n              user_dn_search_filter: ADUserDNSearchFilter,\n              server_start_tls: ADServerStartTLS,\n            },\n          };\n          break;\n      }\n\n      dataSend = {\n        ...dataSend,\n        idp: { ...dataIDP },\n      };\n      api\n        .invoke(\"POST\", `/api/v1/tenants`, dataSend)\n        .then((res) => {\n          const consoleSAList = get(res, \"console\", []);\n\n          let newSrvAcc: NewServiceAccount = {\n            idp: get(res, \"externalIDP\", false),\n            console: [],\n          };\n\n          if (consoleSAList) {\n            if (Array.isArray(consoleSAList)) {\n              const consoleItem = consoleSAList.map((consoleKey) => {\n                return {\n                  accessKey: consoleKey.access_key,\n                  secretKey: consoleKey.secret_key,\n                };\n              });\n\n              newSrvAcc.console = consoleItem;\n            } else {\n              newSrvAcc = {\n                console: {\n                  accessKey: res.console.access_key,\n                  secretKey: res.console.secret_key,\n                },\n              };\n            }\n          }\n          setAddSending(false);\n          setShowNewCredentials(true);\n          setCreatedAccount(newSrvAcc);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setAddSending(false);\n          setErrorSnackMessage(err);\n        });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [addSending]);\n\n  const cancelButton = {\n    label: \"Cancel\",\n    type: \"other\",\n    enabled: true,\n    action: () => {\n      history.push(\"/tenants\");\n    },\n  };\n  const requiredPages = [\n    \"nameTenant\",\n    \"tenantSize\",\n    \"configure\",\n    \"affinity\",\n    \"identityProvider\",\n    \"security\",\n    \"encryption\",\n  ];\n  const createButton = {\n    label: \"Create\",\n    type: \"submit\",\n    enabled:\n      !addSending &&\n      selectedStorageClass !== \"\" &&\n      requiredPages.every((v) => validPages.includes(v)),\n    action: () => {\n      setAddSending(true);\n    },\n  };\n\n  const wizardSteps: IWizardElement[] = [\n    {\n      label: \"Setup\",\n      componentRender: <NameTenant />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Configure\",\n      advancedOnly: true,\n      componentRender: <Configure />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Images\",\n      advancedOnly: true,\n      componentRender: <Images />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Pod Placement\",\n      advancedOnly: true,\n      componentRender: <Affinity />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Identity Provider\",\n      advancedOnly: true,\n      componentRender: <IdentityProvider />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Security\",\n      advancedOnly: true,\n      componentRender: <Security />,\n      buttons: [cancelButton, createButton],\n    },\n    {\n      label: \"Encryption\",\n      advancedOnly: true,\n      componentRender: <Encryption />,\n      buttons: [cancelButton, createButton],\n    },\n  ];\n\n  let filteredWizardSteps = wizardSteps;\n\n  const closeCredentialsModal = () => {\n    resetAddTenantForm();\n    history.push(\"/tenants\");\n  };\n\n  return (\n    <Fragment>\n      {showNewCredentials && (\n        <CredentialsPrompt\n          newServiceAccount={createdAccount}\n          open={showNewCredentials}\n          closeModal={() => {\n            closeCredentialsModal();\n          }}\n          entity=\"Tenant\"\n        />\n      )}\n      <PageHeader label={\"Create New Tenant\"} />\n      <Grid container>\n        {addSending && (\n          <Grid item xs={12}>\n            <LinearProgress />\n          </Grid>\n        )}\n        <Grid item xs={12}>\n          <GenericWizard wizardSteps={filteredWizardSteps} />\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  namespace: state.tenants.createTenant.fields.nameTenant.namespace,\n  validPages: state.tenants.createTenant.validPages,\n  fields: state.tenants.createTenant.fields,\n  certificates: state.tenants.createTenant.certificates,\n  selectedStorageClass:\n    state.tenants.createTenant.fields.nameTenant.selectedStorageClass,\n});\n\nconst connector = connect(mapState, {\n  setErrorSnackMessage,\n  updateAddField,\n  resetAddTenantForm,\n});\n\nexport default withStyles(styles)(connector(AddTenant));\n"],"sourceRoot":""}